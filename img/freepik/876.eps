%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: cloud_technology_03.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 12/18/2018
%%BoundingBox: 0 0 600 400
%%HiResBoundingBox: 0 0 600 400
%%CropBox: 0 0 600 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 10321 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD68FF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFFD68FFAFA9FF
%AFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFFD68FFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD6AFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FD6AFFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9FD3FFF5A5A8485A9FD26FFAFAFA9FFAFAFA9FFAFAFA9FF
%AFAFA9FFAFAFA9FFAFFD3EFFAFA9AFA9FFAF85A8FD24FFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD3FFF5A8584FFA85A365AA8FD24FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD3FFF845A2F3053AFA95A5A
%85FD23FFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD3BFFA9A9
%847E2F302F2F2FAF7E5A30A9FD22FFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FF
%AFAFA9FFAFFD3CFFAF7EA97E302F362F3059FF5A5A5AFD22FFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFFD3CFF7EFD092F8485365A84FD22FF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFD3CFF5A2F5A2F302F5A2F
%302F7EAF5A5AA9FD21FFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD
%3DFF5A2F2F302F2F2F302F2F2FFF365A305A5AFD20FFAFAFA9FFAFAFA9FF
%AFAFA9FFAFAFA9FFAFFD3EFFA92F302F362F302F5A303084FF845A365A5A
%FD1EFFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD3FFFA95AFD052F84A8
%852F2F53A9A85A305A84FD1EFFAFFFA9FFAFFFA9FFAFFFA9FFAFFD43FF85
%302F5A2F5AA9FFAF5A2F5A2F85A985A9AFFD1DFFA9AFA9AFA9AFA9AFA9AF
%A9FD47FF7E2F2F302F5AA9AF842F2F302FA9A9AF8485FD1CFFAFA9FFAFAF
%A9FFAFFD4BFFA95A2F365AAFA9AF5A302F365AFF5A5A5AFD1EFFA9FFA9FF
%A9FD4DFFA9852F307EAF5AFD052F8484305A5AAFFD70FFAF845A2F5A2F30
%2F5A2F84AF855A5A5AFD70FF5A5A857E2F302F2F2F302F5AA885365A5AFD
%6FFFA95A5A7EA959362F302F362F5AA9855A5AA8FD6EFF845A5A5A2F8584
%5AFD052F5AA85A3685FD6DFFAFFF84857E855A5AAF852F5A2F302FFF5A5A
%84FD6AFFA9AFA9AF5A5A84AF5A855AFFAFAF5A302F2F845A36AFFD69FFA9
%FFAF8530302F5A5A85A985AFFFFFFF845A5AAF5AFD68FFA9AFA9AFA95A2F
%29065A062F2F8484AFA9FFFFFFA9AFA8FD6AFFAFFFA9FF5A2F06535A5A2F
%5A2F5A84FFAFFD6EFFA9FFAFAFA9AF842F0629FD052F362FAFA9AFA9FD6B
%FFAF5AA9FFFFA9FFAF85282F065A2F5A062F3085AFAFA9FD2EFF84A9A8A9
%FFFF84FFA8A8A8A9A8A8A8FFFFA884A984A8A8A984FFA8FFA8AF84FF84FF
%84A9FFA8A8FF84A9FFFF84AFA8FFA8AFFD0AFF845A5A7E84FFA9AFA9AF53
%2F062F2F29062F84AFA9AFA9AFFD2BFF5353067E53FF532F06A806AF5353
%292FA8FF2F2F532F53A9065353597E537E2F7E2F595329A906AF842F2F84
%5353068453537EFD0AFFAF5AAF85855AFFFFFFA9FFA95A062F2F85A9FFAF
%FFAF5AA9FD2BFF29A8535353FF2984537E2884532F7E2F7EFFFF06FF067E
%7E29A87E2F5A2F7E062F065359535928847E2F7E2F29A8537E2906FD0BFF
%A95A5AA95A7E5A85A9FFA9AFA9A97EAFA9AFA9FF7E2F2FAFFD2BFF06A9FF
%7E2FFF06A92F8406A92F597E5359FFFF29FF2F2F8406FFFF53282F7E2906
%2F2F7E2F7E06A959597E53067E2FAF2F5AFD0BFFAF5A855A8559855A8585
%FFAFFFAFAFA9FFFFA92F362F30A8FFAFFFA9FD27FF0684295353FF2F842F
%7D2984532F7E2F7EFFFF06FF06A9840684532F7E2F7E0659065959535929
%847E2F7E2F2F842F847E59FD0BFF84857E5A5A5A7E535A845AA9A9FFA9FF
%A85AFD052FA9A9AFA9AFA9FD26FF532F297E2859592F28AF292F53592F2F
%A9FFFF2FFF2F2F84282F59537E597E2FA82FA82F06AF06537E2F297E532F
%06A97E84FD0BFFAF5AAF85855A855A8584855A85A9855A5A2F302F2F295A
%84FF7E5A5AFFAFFFAFFD24FFA8FD05FFA8FFFFFFA8FD0DFFA8FD09FFA9FD
%09FFA8FD0FFFA9855A8584845A5A5A855A295A8536302F2F29292829537E
%2F5A36362F85A9AFA9FD5FFFA95A855A855AA95A855A855A5B7E5A2F2F06
%2F7E84595A2F5A36855A5A2FA9AFAFA9FD5EFF84847E7EFD055A845A5A36
%853030060629597E5A2F85FD045A3685A9AFA9FF5AFD20FFA9FFA9FFFFFF
%AFFFAFFFA9FFAFFD05FFAFFFAFFD05FFA9FFA9FFFFFFA8FFA9FFAFFD18FF
%AF5AAFA9855A855A857E855A85845B2F2F28847E5A2F5A85AF848584AFA9
%FFFFA95A7EFD20FFA97E847E7EA8847E845A847EA97EA97EFF7E7E7EAFA8
%A97E845A847E847EA97E847E847EA97EA9FD08FFA9AFA9AFA9FD09FFA95A
%5A85845A5A855A5A5A295A853036597E2F5A592F2FA9A9AFA9AFA9FF847E
%7E5A7EFD20FFA8AFA9AFA8FFA9AFA8AFA9AFA8AFAFFFA9AFA8AFA8FFA9A9
%A8FFA9A9A8AFAFAFA8A9A9AFA8A9A9FD07FFAFAFA9FFAFAFA9FD08FFAF5A
%855A855AA95A855A855A85845A2F362F30595A2F5A2FFFFFFFAFFF5A302F
%5A84A9FD20FFA97EA9A8A984FF84AF84A9A8A984A984A984A9A8A984A984
%8484A9A8A9FD0EFFAFAFA9AF845A2F5A84AFA9FFAFFD05FF84858484FD05
%5A855A5A5A8536302F2F2F532F29532F2F7E7E5A2F2F2F5A7E8559FD20FF
%84A9A8AF7EA9A8A9A8A97E857EA97EA97E84848584A984A97EA984A9A9FD
%0DFFAFFFA9FF5A5A365B365A5AFFAFFFAFFD04FFAF5AA9A9855A855A8584
%855985845A2F5A292F7E84535A2F5A2F5A2F5A3085847E5A5AFD21FFA8FF
%AFFD25FF84FFA9AF7E5A365A845A365A7EAFA9AFA8FFFFFF84855A7E53FD
%065A2F5A8536300629A97E53842F845A5A30365AA95A7E5A5A84FD20FFA8
%A984A984A97EFD22FF5AA8FFAFAFA9855A5A3685A9AFA9FFA97EFFFFFFA9
%5A855A5B5AA95A855A855A5B7E5A2F2F06A97E5A2F362F84848585842F36
%2F5A84A9FD20FFA984A97EA9A8A8FD22FF30302FFFAFAFA9A97EA9A9AFA9
%FF598453FFFFFF848484855A5A5A7E5A845A5A5A8530302F7E7EFD062F5A
%5A302F2F2F5A847E53FD49FF842F5A2F84AFFFAFFFA9FFFF845A842FA9FF
%FFFFAF5A85A9845A855A857E85A985845B2F5A2FA92F302F5A2F302F5B2F
%3630A9845A7E7EFD49FF5AA92F302F2F84FFFFFF84302F2F2FAF7EFFFFFF
%84FD045A8584855A5A5AAF5A8530362F2F7E2F062853845A362F5A5AA92F
%845A2F7EFD49FF5A5AAF5A5A2F845A5A2F302F5A5AA95A5AFFFFFFAF5A85
%5A855A8584855A855A61845A2F362F7E062F2F5A2F7E85A9857E2F302F85
%FFFFA9AFFD1FFFA88584857E8584857E8584857E8584857E85848584FD13
%FF2F302F7E845A2F5A30302F5A7E845A8453FFFFFF8485A9855A7E5A845A
%855A5A5A85363006297E2F28842F2F2F3036302F2F2F8484FFFFFFA9AFA9
%FD1CFFA95B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B5AFD12FFA9
%2F302F5A84852F5A3685845A7E5A2FFD05FF5A85857E5A855A857E85A985
%845A2F2F068459842F305A5A2F5A2F5A84A984FD04FFAFAFFD1DFF7E305A
%365A5AAFFFAF84A9A984FFAFA8FF845A365A305AA8FD11FF5AAF2F2F2F30
%5AA98485532F2F302FAF5AFFFFFF84FD055A84845A855A855A853630065A
%A82F2F302F84845A307E84A984FFFFFFA9A9A9FD1EFF5A5A365A5A5A84FF
%84A984FF5AFFA8FFFF85365A5A5A36FD12FF5A5AA95A362F845A5A2F362F
%5A5AA95A5AFFFFFFA95A855A855A8553855A855A5A7E5A2F5A2F852F302F
%5AA8AF84AF85AFFFFFA9AFA8FD21FF85365A305A36FD085A7EFD045A305A
%365AFD12FF30302F5A845A2F5A36302F5A845A598453FFFFFF845A84A9FD
%055A845A7E5A8530302F2F7E2F06292FA9FFFFA8FD29FFAF7E855A855A85
%5A855A855A855A855A855A855A85FD13FF852F5A2F5A5AAF365A5AA97EFD
%045AFFA9FFFFFF7E8585A97E855A855A852885845B2F302FA92F53285AA9
%FD52FFA8AFFFFF7E302F2F5A8584852F302F307EFFFFFFA9AFA9AF84855A
%5A7E84FD055A8530362F5AA9AFA9A959AFFD52FFAFFFFFFFAF845A2F845A
%5A2F302F7E85AFFD06FFA9AFA9AF5A852F857E855A5A845A5AAFAFAFA9FF
%AFAFA9FD52FFAFA9A8FFFFA984852F5A3030598584AFAFFD06FFA984A984
%AF7E5A5A855A855A8584AFA9AF2F2F2F84A9AFA9FD54FFA9AFA9FFA9A97E
%8484A9A9FFFFFFA9FFAFFD04FFAF84AF85AFA9855A85A9AFAFFFA9852F5A
%5A5A305A84FFAFFD56FFA9AFA8A984A9A9FFFFFFA8FFFFFFA8FD05FF84A9
%84A9A9AF5A7EA9AFA9AF305A36855A5A3684A9AFA9AFFD54FFAFA9FD06FF
%AFA9FD05FFA9AFAFFFFFFFA8AF85A984AF5A85A9FFAFAF84FD045AAFAFFF
%FFAF2FFD55FFAF84FFFFFF84AFFD09FFA9A8FF84FFA9AF84A9845A2F2F7E
%FFA9AFA88584AFA9FFA95A5A30FD57FFAFAFA9FD13FFA9AF845A2F5A2FAF
%FFFFAFFFAFFF7E5A5A5A84FD15FFAFFFFFFFAF7E855A85A8FD4DFFA9A9A8
%7EA95A2F302F5AA8FFA9A92F302F308485FD14FFA9AFFFFFAF5A5A365A5A
%5A368584AFFD49FFAFFFFF7E5A84852F362F30365A2F302F5A85842FFD13
%FFA9FFAFFFAF305A365A305A365A305A365A5AA9AFFD45FFA8AFA9842F2F
%53855A302F5A2F302F85FD045AFD10FFA9AFA9AFA9AFFF5A5B5A5A5A5B5A
%5A5A5B5A5A5A5B5A5AA9FD47FF845A2F302F84855A305A84A92F7E5A5A84
%FD0FFFAFFFAFFFA9FFAF5A5A305A365A305A365A305A365A305A367EFD47
%FF84847E2F2F2F5A5AA9845A2F2F2F5A857EFD0EFFA9AFA9AFA9AFA9AF5A
%5A5A365A5A5A365A5A5A365A5A5A365A5AFD47FF7E5A5AA95A302F365A5A
%2F362F85847E2FFD0CFFAFA9FFAFAFA9FFAFAFA9305A365A305A365A305A
%365A305A365A305A84FD46FF842F2F2F857E302F5A2F305AA95A5A595AFD
%0AFFA9AFA9AFA9AFA9AFA9AFA9AF5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A
%5B5A85FD46FFA9842F5A2F5A84855A5A84852F5A5A7EAFFD09FFA9FFAFFF
%A9FFAFFFA9FFAFFFA9305A365A305A365A305A365A305A365A305A36FD43
%FFA9A9A9FFFFAF2F302F2F5A857E5A2F302F84FD0AFFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AF5A365A5A5A365A5A5A365A5A5A365A5A5A365AA9FD43FFA9
%FFFFFFAFA97E5A2F30365A2F5A5AAF85FD09FFA9FFAFAFA9FFAFAFA9FFAF
%AFA9FFAF365A305A365A305A365A305A365A305A365A3085FD44FFA8AFA9
%FFA9A9847E2F5A2F5A84A9A8FD09FFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AF5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B5AFD45FFAFAFAFFFFFFF
%A9A95AAF85AFA9FD0BFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF365A305A36
%5A305A365A305A365A305A365A305AA9FD47FFA8FFFFFFA8A984FFFFFFA9
%AFFD08FFAFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AF5A5A5A365A5A5A365A5A
%5A365A5A5A365A5A5A36AFFD48FFA9AFAFFD07FFA8FD09FFAFAFA9FFAFAF
%A9FFAFAFA9FFAFAFA9305A365A305A365A305A365A305A365A305A365A7E
%FD4AFFAFA8FFFFFFA8AFA9FD0BFFA9AFA9AFA9AFA9AFA9AFA9AFA9AF5B5A
%5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5AAFFD4CFFA9FFA9FD0FFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9305A365A305A365A305A365A305A365A305A36
%5AA8FD5EFFAFA9AFA9AFA9AFA9AFA9AFA9AF5A365A5A5A365A5A5A365A5A
%5A365A5A5A365AA9FD60FFAFA9FFAFAFA9FFAFAFA9FFAF365A305A365A30
%5A365A305A365A305A365A84FD61FFA9AFA9AFA9AFA9AFA9AFA9AF5A5A5B
%5A5A5A5B5A5A5A5B5A5A5A5B5A5AA8FD63FFA9FFAFFFA9FFAFFFA9FFAF84
%8584A9848584A9848584A9848584A9A8FD65FFA9FFAFFFA9FFAFFFA9FDFC
%FFFD04FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 3 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">600_450_clean</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-12-18T13:00:34+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-12-18T13:00:34+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-18T13:00:34+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>180</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9E5nuA7FURYxepcL4L8R&#xA;+jIZZUGeKNlOMw3MdirsVdirsVdirsVdirmYKCWIAHUnpiqGt9StJ5TEhcPUgCSOSPlT+Uuqhvoy&#xA;csZAtgMgJpE5Bm7FXYqgdV/u4/mf1Zfg5loz8ktzIcd2Kptp0XC35Hq5r9HbMXNKy5WGNBFZU2ux&#xA;V2KuxV2KuxV2KuxVSuLu1tlVriZIVduKGRggLHsKkb5KMSeQQZAc1RWVlDKQVIqCNwQcilvFXYqx&#xA;/M9wGwCxoBUnoBiqa6fbtFGWcUd+3gMxcs7LlYoUEVlTa7FXYq7FXYq7FXYq1I/BGc/sgn7sIFlB&#xA;NB82+c/za1nzJaTWCxC0s3lqnpM4dohWiSCpUmtDUZ0GDRxxm+ZdNm1Mp7K/kS819UvNOmS4NzYm&#xA;31CwidXMsb+qivwUjlxeJySOlBXDmjGwehsH8e9jjMq8xuH0Hp2pWGpWq3VjMs8DEgOviOoIO4Ps&#xA;c0E4GJoii7qExIWETkGTsVQOq/3cfzP6svwcy0Z+SW5kOOqwW8kzAKDx7t2GRlMBlGBKdqAoCjYA&#xA;UGYRc0OxV2KuxV2KuxV2KuxVZNIIoXlIJCKWIHU0FdsIFmkE0LfOuvfnHr97rcF/Yf6NbxxiN7Jw&#xA;ro/xMWqacviUgbEEds6DFooxjRdNk1MpSt6P+X3myGJ2sL+6ZbS+Ed1pEt0xLET1LxGQ7Eq+3u1c&#xA;wdZgscURuNjTk6XNwnhJ2PJ6Nmsdi7FUINMt+VatT+Wu2W+MWrwQiY4o4xRFC/LKzInm2CIHJdgS&#xA;7FXYq7FXYq7FXYq7FUluNfns5XOqWLQ6YxpFqELGeMKTQGdQqvFXY1oyjuwy8Yr+k+ru/V3tJyVz&#xA;Gzy3zn+Wmn6deWXmTy5fIoubqN7a1Z/3ckrVlUQzLUKG4GnLb3GbPT6szBhIcg4GfTiNSieZYX+Y&#xA;XmK41HzDDdiyl0u7to0ALEiUkfEGDDYgNXiw6jMzBjAjV242WVyvk9c8g+b7W5mjYLE1vqnpxieB&#xA;ShF8kXO4Fwpp8cjH4SBQgZq9VgNecfu6U52mzeryl9/m9EzWuwdiqlcW8c6hXqKbgjJRmYsZQElk&#xA;VhbR78eZ8W3/AAyUspLGOIBEAACg6ZW2OxV2KuxV2KuxV2KuxV2KrJJYUKLI6qZDxQMQOR8BXrhA&#xA;KCQ8p8y/l9ZeW/MVt5p0ogwvcN9Y06RVKAsjOxjkIIj2UkcqAH9oDNrg1RyRMDzrm67PgEDxBgOn&#xA;+YotN803MN5a/V9DuneWKxvA0kcLMC0EwVeXw8qV4Vqppv1zOlC42D6vL7XEEqNHk9v8k+ajq0L2&#xA;F0oTUbOONnZG5xzROoKTRsOzAg/SM02q0/AeIfSfxTs9Nn4vSfqDKMxHKdirsVSFPPnk52ulTV7d&#xA;jZrI9yA1eCwsiSE/J5UXbqTtlvgz7mHiR71OT8xfI8UQlk1q2WJiFEpf4KlEl+1SlOEyNXwOPgT7&#xA;keLHvVrvzx5TtL82FzqUUV2rIjRtyFDIpdfipxoVUtWtKA4jDMiwEnJEGrU4/wAwPJcqROmr25Wc&#xA;gRHkRUszIBuNviRhv4Y+BPuXxI96628+eTbqSOO31e2keXhwVX6+rCZ0++JC3ticMx0UZI96xfzD&#xA;8kMISutWp+sKHi+Pqpcxg+3xKevgT0Bx8Cfcvix707sr21vrOC9tJBLa3MaywSitHjcclYV7EGuV&#xA;kEGiyBtUlJEbU6kUHzOwxjzWXJRZ+MxjBryACoR8PyyYFi2BNGmPax5LtrpZG0uX9HzsXdrYqXs5&#xA;HkRkLtDUAMQxPJKGtK1pl+PUEfVv97VPCDy2+5j1v5V0C5M+jeaLVrWSb0IdLWSTlD+6iWLla3AV&#xA;P3kj7shozHfj1zIlqJipQN87+fUNEcEdxLbuTfyp+WGk+XXQw3Mtwkc5ukWQLX1OBjSpA6KrHoBv&#xA;lObWymOXSm3FpBE82Z5hOW7FXYq7FUDrOvaNolqt3q15FZWzuIllmbipcgsFH0KT8gTkoQMjQFsZ&#xA;SA5oGbzx5Shkjil1W3SSVBJGhbdlZzGpA93RgPkfDJDDPuR4ke9bF588nzR3ckWqwOthGs13xJJj&#xA;jcKQ5FK8aOu46VGE4Z7bc18SPeoj8yPIxVW/TEChi6ry5LUxgF/tAfZ5LX3IHU4fy8+5Hix71R/z&#xA;A8mIZg+r26tbkiZSxqpWRoiKU/35GyjxIpg8CfcnxI96p/jryfwt3/S9twupDDbv6g4u4VGop6Ha&#xA;ZN+nxDxGPgz7l8SPeu0rzp5V1a4jttN1KG6nmUvHHGSSVHL4unT9233YJYZR3IUZInkUw1HUrTTr&#xA;f6xdMUhrQsqs9KAsSQoJoApJwQgZGgmcxEWVtlrGl3tslzaXUc0D/ZdGrv4HuD88MsUgaIYjLEiw&#xA;Wr2OCe6topVWWNxJyRgGBWg7HtvjEkApkASEJDAlxcLFDcGS0gYtLbzAs3GSJ0HByeXEljs1em1B&#xA;k5ExG43LXECR2OwSOLyV5Y1qxmtdRgErPHbGJeVHhVbaNQ8X7S8iDXsaZfLUzgbHn95ao4ISFHy+&#xA;5NvLPk3S/L6r9VaWWRIRbLLKwJESsXA2AHU5Tm1MsnP3tuLAIbhPsx292KuxV5d/yqe1hmmI8wxB&#xA;ZVniRJLePksc1xDdoOSyRl2SW2WrNWqkgBdszfzJP8P45ON4Q70BP+SGkNaS2q+ZAkThi1YoyQZb&#xA;aO2uG/vB9oQhl/l/ysmNXK74WPgDvZJ5k8gaXrN+t2NXWAIkcTRkK/wJb3FqfiWSOjFLskHpUCoY&#xA;VGU48xiKr8bH9DZPGCeaR3n5OaLqARr/AF9JTEix3JjjjiUxq0jFaLJRarJTkanatd8tGqkOUWBw&#xA;g8yv0v8AJzTrd7NLXX1mFmYykZiViVW0azlrxlH21bkv8p/mwS1R3uP4u0xwjoVRPyNjETRtrkrL&#xA;NZyWdyghARwYLmCF+AkpWL63z3rVlFOOD855df1fqT+X83plnbR2tpBaxgCOCNYkAFBxRQooO3TM&#xA;MmzbeBS6UiqA9K1PyUV/XhiiSEakszHdlPShArTpSu2WjYNR3KM4h0AcVrvuKZTdHZuqxuoz2lpd&#xA;QSWl0i3MEgo8MoDgqexB65ISINjZjwg7HdJPLkVzZ69rOmJO82k2qWjWUcjF2gklEhlhDtVioVY2&#xA;UE7VoNssykGIPU2xxggkdGR5Q2uxV2KuxVjnnnyzF5g0+0ge/GnNa3BnjnaOOZSXt5bdkKS/AapO&#xA;xFa79iNsuw5OE8ra8kbHNh97+Uen3k8UsnmCNTBwaEJEo+K3Nw0LNWU14i8flSnKg+zvXIGpI/h/&#xA;G36mo4QeqK0D8sdJ0n9Kj9OrOdVsHsR8KLwEkEMEkn2zy/3nUgbU3G+RnqJSrbkUxxAXvzUrn8rL&#xA;BpbmRdfjiW8+thwYY3JivmhlIHORlBVrdaMoG1e/xYRqD/N7vsQcQ70H/wAqW8vxXwvo9dCXQcyW&#xA;zMqsoAvTeqGBkq4WQgdakfPJfm5VVfiqR4Ebu1ey/JG0Wws7OPWzJYWjhkKQD1GHK0eQGT1GXd9O&#xA;joQu3xDeopGWsNk1v/b+tIwbc/x+AyDyl+W8WgatHqs1+2oXiWstoJHj4nhLKsux5vQKUoFG2+VZ&#xA;dRxCqpshi4TadeZdRFlbLNG8fr2we5KSNxARYnXkx/ZUswXkdsGGFnyOyMsqeV3k/lzW7pp4dR/Q&#xA;N/bJ8en3rGBEFARLA6GMEV3FPnx3328eKAojiHeHWSAlyPD72ReTPOMl1cwLEj3Gl2cbrfeYLkCM&#xA;SKFcqkYYKxHIAs7cem4B64uowbeZ5ByMGaj5d7LdM13QrpJ7vSpBeyu3ApE4f4h0WteKDv8AFmLk&#xA;xTFCWwcjHlhuY81a7S3t7ext7mPmYxHELhGKPGTROSEfF89xt45GFmyGUiBQKOsHn/fwzSeqYJOC&#xA;yEAMylFccqUFfjpsMqnWxHVsje4KKyDN2KuxVi8mj38t4VeyX0WdiZylqxAZhQmo5UWlaDMkZABz&#xA;+9o4DfL7kWPK/GSq3KLGTUoLa3FQW5EEha79Mh43l9pZeF+KaPlblHIr3KM0jBi31W3HjWoCb9tz&#xA;4YfG8vtK+F+KRFj5dtIA6zrFdK4CgPBEKAEnsN+vfIyyk8tkxxgI6HTdPgdXgtoonXZWRFU77dQM&#xA;gZk8yzEQERkUsU87/mV5a8oW3O/mMt46s8FjCOcrhepA7L7nbMnDpZT9zRkziLx5/wA/vOlxqa6n&#xA;BYRLosauUs1KliAac3lPfr0oP9bNiNDACurhnUyt6z5G/M/y35uheO2rDdxjlcW0i9NwCa9OpHXf&#xA;xAzAzaWUN3Kx54y2LMUUAbGq9h1/HMUlyAENxdrskUVl3FfDpltgRaqJklvlL99DqepHrqGoXDr/&#xA;AKluRZpT2ZbYMPnjm2IHcP2ssXK+8p7lLY7FXYq7FUu121nubNUhjErrIsgQhCDwBIr6nSp223yz&#xA;HIA7sJiwlOn+XbqVS90i2si/YVobR9ya1HprtQfD71y2WUDlv82uOM9f0Io+VgUQG4jJTubW3pQH&#xA;lQLxoNyTkfG8vtLLwvxTU3lUSOrfWh8IooNvbsN/mmIzeX2lTiTFNH0wRRpJawyNGoHMxJuepPTu&#xA;d8r8Q97PgCqzWWn23RYIFbZEXblI3RVUblmboB1wAGRUkRCiWv7oE72Nt/MaGdh+Kx/TU/6pyWw8&#xA;z9jHc+QUb/SoZ9IvbG04JLdRMpaUepzZhSsvMMXB6GtdsMZkSBPRBgDEgdXgesadeaRdz2l2ps1j&#xA;VvTju4vrVtsOtu5WRh/qN16k9hv8cxMWN/x1dNkiYmimWleYr2205dL1GzfVNMlakljdKIL4Vbmr&#xA;wCtHr1VK1FKDZa5XLGCeKJo/Y2Ce1EWPtTXSdRMt4bTybpjw3Uyf6RrGphOSRLTksUSswfh8PsDQ&#xA;MO+QyA88h27gnGR/APiWWQ/mJpWnz2uk3STXEtmI7a4vhESgnVeDf5dWofsoR75iHRSkDIdXJGrA&#xA;IB6Mx01mcTyuVEk0nqGNSSFHBUAqQK14V6Zg5BVBzMZvdGZW2OxV2KvLruf8xv8AEU4uxqC6b6kl&#xA;PqCKRwofT9MlWHhWu/05t4jBwCuHi83VyObj34uHyVo5vMnM+o3mALRqcUjJrVePWP8A1q/RkSMf&#xA;+1pBn/TdoU/5hHzTEtL46N6p5m+RVPoV6saAcqfy98coweH/AA8Xl3riObxOvD59z0vNU7N2Ksfv&#xA;dfQakdMuCbSdmK26SbJOOo9KT7Ltx6pXkPCm+ZWPGKvn+hxckzdJfrnl/RtcsmstWtI7qA7qrj4k&#xA;alOSMPiRh4qa5fGZjuGki3i/nD8mPMekyS3vlaU39iwLTWTkfWRU1PFaKkuwG+znpvmbj1IO0tmm&#xA;WPuec2WoX9lqH1m0ebTdSt34MUJjkV6msdWA3J6qw8TRsvIBHeGFvVfK/wDzkTqtmsFtrlityFNJ&#xA;rqFvTLLx5EiIjjyXqRyXbrQ7Zh5dFGXJvhqDF7JZ+fNC1Py3cazpkv1hIo2PogH1PVC1EXHryJIA&#xA;HftmvOnlGVFy/GBjtzTXy9p8mm6Dp1hKeU1tbxRTN15SKgDt/smqcpyS4pEtsBQATDIMnYq7FXYq&#xA;kHnd/MaaE50AMb31F58ADJ6VDy4A960+jMnSDHx+vk4+p4+D0c2FWU/nb6gTe/pv696igLEiiL0+&#xA;Q5n4kLcgvT3zPkMPFtwU4UTlrfjtUvZvNo09zZHXjqG3piWNPS6jlyogbpWmCIxcW/Bwpkclbcds&#xA;r8hSeZ30dz5gDi4EpEHqgLJ6dB9oCn7VaV3zD1gx8Xo5OXpTk4fXzZLmI5KhdRW93DLaSxrNFIvG&#xA;WNvs0I6HJxJBvkxkAdkNouiWmkWSWds0rxISU9aRpONey8iaD5ZLLlMzZY48QiKRBu7J5fQ9RTJt&#xA;Qe57A+OQ4SN08QJpq4sreYqZ4lmC9CR8Q/qMMZEctllAHnu87/MT8vbvUHk1DSkS7WQhp7GbbiVX&#xA;j+4daNESBU9d6V22zYaXVCPpls4Wp097xYO2j63aOmrvYzW6QuIbS4luOd4ZuBNIOIRDTgaqV5MO&#xA;namcckZHhv8AU4YjIDipF23n7VTZSyubGe9hRki1eWIJdxbEn1YNzzUD9lSp79zgOnHnXd0ZDMfK&#xA;+9mP5Nz3dy2tXN488tzM1uzT3bgzOP3nEmIE+ilPsJ4e1Mwe0AAIgef6HL0RJMifL9L0nNa56Evd&#xA;Y0mxkjjvb2C2kl/u0lkVC3uAxGTjilLkCWEskY8yAiY5YpUEkTrIjfZdSCD8iMiRTIG12BLsVdir&#xA;sVS+bzBo0TMjXaNItQUQ82JWpKgLWrCnTLRhmejWcsR1QFvNb+ZEnhutOVtKdKK8/FjL8W37sg/D&#xA;tUE5OUfDqj6mEZeJzGyT3KzaPd/VLHUItSUGn6JuLhPriVHKkMrsXbboktf9dRtl0JcQsivOtvx7&#xA;vk1ThRoG/vRmn6rZX5dIGK3EIBuLSVTHPFXpzjbcA9mFVPYnJEUwSXzd+XvlnzTETqFsEvQvGPUI&#xA;gFnUUpQt+0u/2WqMsx5ZR5MZRBeWXX5MsNfls7m+9dAUaKx06MPO0LVoZDO5W2HJeVZWZT+wKgDL&#xA;/wA1tf4/awGHd7B5B8gL5fSJ+KWkSEyJp9uSyeqycDLPO4WW4k4kirBU8IwRXNdnz8f4/H46ubix&#xA;cLOMxW92KrVkRyQpBK7GmEghAIK4kAEk0A6nAlBWmuaLeSGK0v7e4kBoUjlR2+4HLJYpx5ghhHLE&#xA;8iEblbN2KuxV2KuxVi/mS18zWd+NW0GQSqygXunTVMUnDoyEVaN+O1RUeIzKwmBHDL4Fx8omDxRb&#xA;0fzlomuq+lX8RstQkQrPpl0AC6kEN6bfZlXrup+dMGTTyh6huO9YZ4z2PNDXvlK7s5o57AtqNnCx&#xA;dbCaSk6ctj6M715D/Il692pko5wdjse/9n6mMsFctwmWjau100scM3qyw0M1hODDdR1/mRunsd1b&#xA;saZXkgB+vozhI+/707ChwHoUYj6R7HqMpum6rQGt6RYatYNY6jEskTn925/ZkoQrLuCrb9jlmOZi&#xA;biwyREhRebyflLrsd80EN6klo9PTv5VU3UIXpxkpyYj9k9V7Zshr48PLfudedHLi8noHlTylpPlr&#xA;Tza2Ef7yU87q5aplmf8Amdjv9HTNdnzyyGy5+LCICgnDyJGvJyFUdzlQBPJsJA5vm3U9TvtTvpb2&#xA;9lMtxKasx6AdgB2A7DOpx4xAUOTzc5mRs82rHU9RsJPUsrmW2eteUTslfnQ74Z44y5i1jOUeRp73&#xA;5N1qTWfLlnfTEG4ZSlwRt+8jJUmg6cqcvpzm9Ti4MhA5O+0+TjgD1TrKG92KpX5le6XSJfq/qjm0&#xA;aTvbq0kywvIqytGqBmLCMmnEEjqAcsxVxbsMl0xSG1vtL0R7rUAY9Iil5CFo5HuBBzVYmcvK3A7c&#xA;m+DYdlbM3j45cI+pwzDgjxHknttq1tf2yzWUqPbN9kxmo/2XevzyHhcJ35p8XiG3JifmXVfJthbH&#xA;Q1061vNS1QtJY2UMXOSS5ZuIkb6v+9Wh3L7UA65bGMieKyK+74sbFVQNsos/JMX6DsrPU7l7vU7N&#xA;W4aqheOdWZifgkDGQUBC/a+ID4q5iS1HqJiKB6OSMPpAPPvUP8MeZ5ZjDca0PqBBUtDAkN0y/wCV&#xA;OrFQT3McSHwKnJHPGth+Px5sRhN80/0rRNN0uD0bKBYlqXYgbs7fadid2Zu7Hc9zlEpmXNvjABHZ&#xA;BksmmjhTk5oO3iclGJPJjKQHNLLi/llqq/AngOp+eZMMQDjTykojSv7uT5j9WV5+YbMHJiX5u6nf&#xA;Wmh29vbSmKO8kaO447FkC1418D3zK7NxiUyT0cftCZEQB1eOZvHTMz/LvzZqlr5gtLK4u5JLC6b0&#xA;GhkYsqswohXlXj8VBtmDrdPEwJA3Dm6TPITAJ2L2vNA7t2KuxV2KuxVJtf8AKWja3CUu4R6gPJJV&#xA;2YMOjAihB9wQcuxZ5Q5NOTBGTHRP5x8p0E3PXtGXbcj65GP8ljRZR7NRvc5k8OPLy9MvsaOKePnu&#xA;GSaLrvl/XFF7YyRyzwgxvyXjPFU7o6sA6V49DmNkxThsXIhkjLcIPX/POlaXKbKBW1HViKpYW1GY&#xA;V6GRj8Ma79WPyrksWmlLc7RY5NRGO3MobQrLzRqOoxarrsgt4IeTWumQEiNWbZWkJAaUqp70Wu4H&#xA;fJ5ZQiOGPzY4xOR4pcmWZiOShbm/SIlE+KQdfAZbDES1TygJZLNJK3J2qe3gMyYxA5ONKRPN8+5v&#xA;3SuxV67+TL3R0a+R1ItluA0LnoWKAOB8qLml7TA4x307fs4nhPdb0LNY7F2KuxVp0R0KOAysKMD0&#xA;IxBUhhOt/llDPPJcaHfy6NLcI0VysIDROj7N+6b4A1Psmm3gczsetIFSHE4c9ILuOyaeVPIPl/y0&#xA;jPZwmS+l3udQnYy3MreMkrfEfl09sx8ueU+fJvx4hFkeUtrsVdirsVQuoQGSHkv2k3p4jvluKVFq&#xA;yxsJTmU4qZaV/dyfMfqzHz8w5GDkwj86P+OZp3/Gd/8AiGZvZf1H3OL2j9IeS5uXUKtq06XMLW9T&#xA;OrqYQoqeYPw0HzwSqt+SY3ez6ZjLFFLDixALDwOcmXpw3irsVdirsVdirmVWBVgCDsQdxirFtc/L&#xA;rQNUuVuvS9C5GxkjLxsR4co2Rqe1aZlY9XKIrm409LEmxsj/AC/5R0TQ4BHZ26hq1L03LeO9TX3J&#xA;JyGXUSnzZ48EYJ1lDc7FUnvoDFOT+y/xKf1jMzHKw4eSNFD5Ngl3/Kp/KH++5/8Akaf6YP5Ry+TP&#xA;8hjd/wAqn8of77n/AORp/pj/ACjl8l/IY2VWNjaWNpFaWkSw28K8Y416Af59TmHOZkbPNyoxERQ5&#xA;K+RZOxV2KuxV2KuxV2KuxV2KuxV2KoY6dbEk0Ir2By3xZNXhRVYLeOEEJWh3NchKZPNnGAHJLvMH&#xA;ljStfhih1BXZIWLpwbjuRTLMOeWM3FhlwxyCikf/ACqfyh/vuf8A5Gn+mZH8o5fJo/IY0dovkDy1&#xA;o96t7awM1wgIjaVi/GvdQe/vleXWZJiidmePSQgbA3ZHmK5LsVdirsVdirsVdirsVdirsVdiqyaC&#xA;OZeLioBqMlGRHJjKIPNQ/Rtt4H78n40mHgxRWVNrsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSX65c/78OZvhx7nC8SXe765c/78OPhx7l8S&#xA;XerWs9zLOi+oSK1b5DITjEDkzhKRPNNMxXKdirsVdirsVdirsVdirsVdirsVdirsVQmoyyRohRip&#xA;JNaZdhiCd2nLIgbID65c/wC/Dl/hx7mjxJd7vrlz/vw4+HHuXxJd6Y2DStCXkYtyPw18BmNloGg5&#xA;OKyLKJytsdirsVdirsVdiqyaaGCJpZnWOJBVnYgAD3JwgE7BBIHNSs9QtLxOdu5ZevxKyGnjRwpp&#xA;kpwMebGMxLkiMgzdirsVdirH8z3AdiqZaZCVVpSN22X5Zj5pdHIwx6o7KG92KuxV2KpNrWs3ECXM&#xA;Gmol1qMEfMWfqKjtUVA+L7NfHMjFiBoy5OPlykbDm8f0r88fMum61LZ+ZtMMLbtJaIrLcRKDSqo5&#xA;Prrx+KsZO1T9lSc2M9JCQ9LiRzzid3sXl7zVouv2Ed9ptws0Eporr05DqN++a3LglA7ubjzCSb5Q&#xA;3NO6opZyFVRVmOwAGICkvPvO35v6PoaQR6eF1KS4LVlt5YyqIoHxBgJBWpoAR45sNPoZT3ls4WbV&#xA;iOw3RPk/8wY9ZOn09SS3v/VhMsvD1IrqEBzE4jREoyfEp7+AwajScIJ6j7lw6myAev3s5zAc12Ko&#xA;HVf7uP5n9WX4OZaM/JLcyHHXIjO4RRVjsMSaUC09jQIioOiimYJNlzgKDeBLsVdirsVdirsVeIfn&#xA;H+YWrw6rP5esjNY/VXhk+tRSmMuDHyIHEBurDfl26ZutDpo8Ikd7dXq854uEbUl3k7zdrFw1vq8z&#xA;yzX+kskd5L8TGewkJBMniYyhBbvVe4y7LhjRh0ly97RDKQRLqOfue66Xq2naraLd6fOtxbsSvNai&#xA;hHUMDQqfYjNFkxygakKLuIZIzFg2EXkGbsVdiqXDSn5byDj403zI8fycfwPNExWNvHvx5N4tv+GV&#xA;yyktkcQCIytsdirsVdirsVeY+e5JE126aOd4GX0WV0ToyoDtJQlXp+GbjSC8Y+LqtSf3hSW/1fR9&#xA;XsRa+atJTVooEM0VxxVWVgRtyBr8XivhvXLPBIPoNNYzbeoJBoP5g6trnmLRrPS4I9H8s2+o2sIt&#xA;rUqiswnT92xHFnrU7KoX2NCccmGMYm/VKj9zZCZJHQWH0JPcQW8Lz3EiQwxiryyMFVR4ljQDNIAT&#xA;ydoTSS+brK41ryjqFtpcwaW7t2+rSIw4vUVADA0o3jl2nkIZAZNWeJlAgPm7y35Va+81Q6DqvrWE&#xA;rlg68Pjqil6fERSoU0bfOhyZahxDd00YXKiyjRL+Hyz5ik8sGUoBfibT9UQpJ6cjx+lH6sZVlZfi&#xA;+KhFDlGSPHHi8tw2QPCa8+b3bQr+e809XuTEbuJmiuvQYtGJU2YKTv8AMdjtmjzQEZbcnb4pmUd+&#xA;aYZU2KF5bGdAA3Eqa75ZjnwlryQ4goRaWo3levsu2Tln7mEcHei44YohRFC+/f78qMiebaIgcl+R&#xA;ZOxV2KuxV2KuxV2KsI/MP8sdO81qLxJDa6tChWOZQCsijcI4JH0GuZul1hx7H6XF1GmE9xzeQ+b9&#xA;YuxaaLcW8L2+oabGLeTVbchEYqPhWihShNCeDqpG+xBzb4oDcHkejrJy5EdGb+TvzBtbaOC8W3gX&#xA;Tpkji1VLZeEkF0x3lkUj4kajFeO1NuopmJn0pntfqHK+ob8OoEDdek8/e9eBBAINQehzTO2dirsV&#xA;dirsVdirsVdirsVdiry78wDIms3rIG3WBXb1OK8WAFCoBYjc8SP2ts3Gj+gfF1Oq+ssOuoZPQeYx&#xA;kxrBIpmLdGYqePEDjvQ98zY83FPJifkQSHzVoL3j8XW/tUtbJOLBY/XSjsVNE7nj18R3yGe+CVcq&#xA;P3N+KuIXubD6qmAbihFQTVh4gD+tM5+Lt5JK+gmCVrrQ5/0ZdSkyS2rLztJmPUvDVeLHu8ZVvGvT&#xA;LvEvaXqHf1auCt47eXRhPnSG51TVreHV7BbWV1gtrVWP7s3ElxQzW96gDDihHwsFP+SwGZumIjE0&#xA;b5n4VypxM4MpbiuX397z3U/y48xxWcXmPSI572zlYzD1FrdoyORydN+fxLWo69aZnR1MOLgPP7HF&#xA;OGVcQ5PUvyyfXZ5oby8haAXVk0mpR8DGhuvXZY5OGyrJJEOTUHetNxmu1vCI0Oh291ObpeLivpW/&#xA;vt6Jmtc92KuxV2KuxV2KuxV2KuxV2KuxVg/nTzF5mby/PdeUreHUrlCVMQkoV7EhTTkw68Wp8jmw&#xA;w4YRl63ByZZSHpeQeXfPulrqPPzNa1W3YxXw9P0nWMH01S7tq/Zq6VO617ls2U4Ex9J/Hk4Udpbh&#xA;6Von5beSr5pdS0e7mi07VIFU28bBoyvqpKDGzCo3jpQ9MwcmryQ2I3DlQ08J8jsXpccaRxrGgoiA&#xA;Ko8ABQZrCbdgBS7Al2KuxV2KvKbiz/OwzSJBLKqNPbtHK0liQEV7j1+gBCMHiIFC1B17HOBw/i/J&#xA;xiMivoem/nE8eprq128YleFrHi9rzRDdhpFBUMAVtiwavelK4Jyw7UPv7v1piMm9pdJpv58Gw4w3&#xA;Ui3YW05mV7LiWCRi5EfEmn7wSGrE1FKAdpcWC/n3sayUioLT88E+ui5lMrSJGsDQNZhVaoMrR86M&#xA;AVVlHKu5HapAJw7V+lNZE38lWH5oprMcvma8ZrJfrTTRg2zI7ViFsF9JVYLR5T4/CK+9eaWKvSN9&#xA;mWMTvdA+fre5TWp50VIywhaGZ+QclVAb0zVVPSnGte+ZujI4AHB1QPGSw6+uo5LK4RqGaWJpOS1C&#xA;kLsagALyq+305mxG4cSXIsM/LwRr5s0ZYVa4l/SNsZ790oE/fx1hRhyC9aU5b+AyOp+k2eh2+DkY&#xA;eYodQ+rWNHZv5F2+nr+oZz45O2PND2taMGFY22Pff6Msn9rXD7F93aRXFu9vcQpdWsi8ZIZAGqPf&#xA;lsfpyEZUbGxZyjtXMJP+jNW0WHloz/W9PjX/AI5F0xqiqD8NvOeTLTaiOGXag45bxRmfVtLv/W18&#xA;JgNtx3Jro+qW2raVaalahlt7uJZY0kHF1DCvF13oy9CPHKZxMSQW2MrFozIsnYq7FWI/mZ5Y1TzF&#xA;o1na6fHDO8F2J5be4lkgjdfq80SkvEC/7uWVJBTf4diDTL9PkECSe5qywMhswPVfyp87Xd5bTxi1&#xA;C2kcSLWduTLBLcymIfu9lmaeJvYpv2zKjqYAdfxTTLDIory3+UvmCzh8wQ6klnLFqmmG1ijDmRWu&#xA;Pq9ukZcNGBSKSBirdd6gZHJqomqvY/rTHCRd9Qg5/wAnNejlnW1srAwyNfrAPU9EQ/WDB6EqCKNT&#xA;VI4njoSdmp9moyQ1cepPRHgFRb8lvOP16a5N1b3EDyO0trLIQLhDqMl3STjGEBkhcxv8PH4jtTD+&#xA;bhVfjlSPAlf471W1/KXz2ljplnJNbGaynEzXv1iTkGf6lzlUeny5BLKWOtakSeHLAdVCye/9v6/s&#xA;SMMqH47mQfl7+WmqaJr1vquoxW8IgtJoFtraZ5I1lablG4V1UchHJItRTr0yrPqBKNDvZ4sRBsvT&#xA;cw3IeKzX95Z3KXFretFLEZBxCBNjyI5Ej44xx5AMR4d86DgBFEOjEiDsVmv6/wCTrqI6p5i8vxXu&#xA;oacR6M3FFWT4Sw5cq/CCKENyFdwuVxwTG0Ts2ePHqN0k0X8zvMOo+Y9O1a7ja18twtKbe1tgPTkK&#xA;IQEKg+o5HWr0XaooMMtPHhMRvLvSMsgRI8nrflb8wLbW55bY200E8ahyrKCCjUoQ6FlruPhJB8K0&#xA;zAz6IwF25WHV8RpliOkihkNVPf5bZhEU5oLeBXYq7FWITm4mvvRF1KkjOyxhZLpUHxUQDinEdKE+&#xA;GZQoDl9zjnc/2or9B69zI9ZSj1Dlrq4J4lt9uNPsnI+JH8AMuCX4Lv0J5gKS1uAjuwKgXU9KCuwP&#xA;GqjpsPfHxI/gBeCX4KIsdBvSsq39zJSQUBguZiTua15UptTIyyDoPsSIHqj7PSIrWVZEuLiQqCOM&#xA;krMprXqD88hKd9AzEKSe+sx5huJIXYWqWzANbSgmWQI9VZ4zRVjLCqkV5Dw6ZkQn4Qvnbjzh4h7q&#xA;Yh5m8m3FtZXCW0FHkFIwPiU7UosjEcR7Nmdg1QJ3cLNpyEl8ofl5pvlWG31/zVdQ2NnZOtwkPP0k&#xA;9VTzjdmNHkbnuK7dhUYM2fjuMBZLZix8NSlyZ75d/Mzyf5lmlt7C+9OYyFY4pwI3fiBuEY8uJrUV&#xA;ofbMOemnCjTlDNGWzLBCFKslGFa79d/A5jcXe3cPcqF6RlyKUFaHI1uyvZKtV1htP0PUb5xzaztp&#xA;Z1H8xRCQNu9dsuGO5D3tXiekonQtO/RmiWGnk8mtLeKFm/mZECsx9yRXKpy4pEtkRQAR2RZOxV2K&#xA;pZ5h9QWSNG5jKyKxKtIrcVBJAMQLdPoyzFzYZOSSafa6pegyQ3RKKKFWuLtd2235IvL4a/Tl0pRH&#xA;T7A1RBP4KIOha7xQicB1+Ha6uK05cvtEb/LwyPiR/ADLgl+C3caJ5gcoFuFEaihAubhOgAGyinbE&#xA;ZIfgBTCX4KYDQUeOH1rq5EqLRuE70qTU0r2r+GQ8TyDLgW3mq6boUdra3VyVNyzrby3MmzNyB4GR&#xA;u/x0UfRhhjOSyOiJzEKDEtV84edINd+r2+lcrdX4xxkvymXf94rqDFGBts9T/DPx6bEYXbgz1GQS&#xA;qmZ2GsQXNybJmUXiJ6ksSkEoBQUan2T8XTNfkxVuOTnY8l7Hm8g1SSWqIRKVJkceoBxFK0MZBDFS&#xA;W+yvfN5F0xY35pBXSNQZ0lKF4/tnmrARN+xU0+7fLoc2BSqwvdQ0i90a6a4tor+3i9SOzlRhFD9Y&#xA;AkSOQALwHBijLxXiTtsOWVAcQIr0t8jw1v6mXXvnHVri4i0+JrbTbeUEnT9KVZpZyy1b1JE9VUQ/&#xA;9dKRvkRgA3Ny96PFPIUPc9m8qBR5b00KEVRbpRYm5oBTorVbl86mvjmkz/Wfe7fD9ATXKmx2KuxV&#xA;5rJ+aGq/4gm0029rZQRyyR+tdc6qIwac/iUVbj+ObUaCPAJWT7nWHWy4+GgPejI/P9+zMDe6StAz&#xA;ciz0PEqKbSdTz2+RyB0Y7psxqj3xUNJ/MrVbrzRFo7W9tcQPOYTcW3OhUV/eKSWHEdflksmhiMfF&#xA;ZBrqjHrJHJw0D7nouat2KX6hqUsN1FYwIouLgExzTnjCKbUHeR+/BfpIy2ELFnkGuc6NDml+tabq&#xA;y2ZuYpV1C4gBkEU3G2IpufQniCtET0+MsPHvlmKcbrkPn8x1a8kJVfP7PkVDRbvzHHbuNUuEldzW&#xA;NeCiSIEfYZ0oj06V4jx9hbkxYyfSGmGWdbvI/wA1vyz826pfvrVrfTa1ChLjTpWCyQjlXjCi8I3U&#xA;DsOLn+YnM3BljEVVNOSJO7yWXULZikXom1v4JODugIZXG/Hx2YfZIpy6VAzMIaA9Y/Lv89JdLgi0&#xA;zzM0k0QNI9UFZNiCaSp9qi0PxKTsNwMwc+jEtw5OPOYvb9G8z+X9djb9HX0N1xC+osUiuRzAZfsn&#xA;aoO2ayeGUObmxyxkhvNKBrXT9MQ1Oo39vEVPeOJvrMy/IwwOMOM7mXcP2LMch5p/lDa7FXYq7FUh&#xA;86+YrrQNEN/bWwuZPUWMhq8EDV+N6b02p8zmTpcIyT4SacfU5jjjYFsVsPzM1K5083csunWziRY/&#xA;q0hf1KOwXkB6g+EVqczJ6GIlXqLix1siL9IVL78xtRttOku0udLuHUqFtY2kMjVIB259q5GGiiZV&#xA;UgmWskBdxZD5F8z3nmLSpbu6thbvHKYwUrwcAA1HKp2rQ5javAMUqBtyNLnOSNkMjzFcl51+dLL+&#xA;hrJHaLg8rD0bkH0JDQUVnBHpv/K1RTf4gM2PZ31FwddyDzuLzDrllo6abDqN5aIaItkoE94AxoqR&#xA;S9QjfsMvHboG77HwYk2QD9zg+LICrZv+UHGK8uYSPQkMAJtmf1ZKVWjSy9z+yFGwodlqRmD2hyDm&#xA;aLmUjvi8MyyGCsL+qHeVuamp5fAAKqzFd/irWmZsd3CKR+b5C/l6RI3LSRMF9J6cUZgzAcu4Nfoy&#xA;3Hza5dGN6NpE1/5qtdOs7hLjVri0tgfUAa3VUtUYgROPiDMo+JlFK9MgZ8MeKXLf72/hs1H8bPT9&#xA;A/LDVpLlZtTVbHT1KiWztA/KWg39R2JlIqPhAO2xFDmJm1saqO5bcWll1FB6pp1otrCsEKejaRqE&#xA;ggJ5FQPft95zVTle55uygK9yLyDN2KuxVY8EDtyeNWbxKgnDZRQW/VbX/fKf8CP6Y8RXhC5IYUNU&#xA;jVT0qoA/ViSVAC/AlJPMplEDfWUd9GCVvBboJJuvcN0jA6lBy+VMyMFXt9XTuaM11v8ASjLS60vV&#xA;9KVrYi60+5jKCqmjRkcSGEgB9qHK5RlCW+xDOMoyjtuGLz6b5i0Le0ZtX0xOttMx+sRr/wAVzNUt&#xA;/qyVH+WozLjkjLn6T9jiyhKPmPtRWmaxp+pBxbSH14gDPayDhPFXpzjO9PBhVT2JyUokc2IIPJJv&#xA;OH5deWPNUROoW/pXwXjHqMFEnUUpQtQh1oacWBGTx5ZR5IlEF4r5o/KbzN5fM8gZL3SURnS7RXJH&#xA;HZUeJRIUJ+RToPhGZkM8Ze9pMCEr8q6B5wF0NS09ptEtkIb9J3XOGL94eQWOlXmZgK+nHyL9/DJZ&#xA;Jx5HdYxPN9O+V0n1WO01PUPWaSxBjtTMFjLuYwslyYlrwLAsFUnYE1APTTZjw7Dq7DDvuyfMZvdi&#xA;rsVdirmVWBDAEHqD0xVS+q2v++U/4Ef0w8RRwh31W1/3yn/Aj+mPEV4QqKqqoVQFUdANhgS3iqX6&#xA;ro1rqNvNBcxpPDOnCSKZQ608VqDQ13yyGQxOzXPHxPPZfysRXFlb6lLaaTyPK0BYS0Y1KqalireA&#xA;r8/DYjW7WRZcA6XfnszfQvL9joumLY2NmqWwIYqSBKxApyJ8RTarV98wcmUzlZO7m48fCKASPzB5&#xA;VhvXkkRC5YluUalZUNCvxjbl8JpX7RHfMnDqK2Li5cF8mKR6D5We9fTNSkibUpwJbezdzClyV5Ii&#xA;+pxr12K9fCozMOaVWOXe40cUbo80boEPmW31aJr7TbO2sbE15mNIEtVUcV9CQFuS8eob71yGUYzH&#xA;Ymz9rPGZ8W45PRdF1q01a3lntW5xwytCZACFZlALcagbAtT5jNVlxmBp2WOfELTDK2x2Kvn7X/Oe&#xA;uaxqLXbXElvGDSC3idlWNe3SlW8WzpcOlhCNVbz+XUSmbukRpv5jebrDiFvjcRr/ALruQJa/Nj8f&#xA;/DZGeixS6V7mUNZkj1t7R5d1hNY0W01JF4fWEq6A1CupKutfZgc0ObFwTMe53WHJxxEu9McqbHYq&#xA;7FUv1q/uLC3S6SB7i3R/9LSIVlEZBHJBUV4tSo606ZZjiJGurXklQtQ/S51DSxdeXngu2VgGjdih&#xA;AA+JKU+CQbfC49jTJcHDKpo47jcVDR9eluCba+iZL6Kplh48ZUWtFYp1II/bSqnsTkp4wNxyYwyE&#xA;7Ebtaz5U0vVQlyoMN2lWt72AmOVCe6slCK96de9ccecx26InhEtwkkl5r2isE1eFr+yrRNRtUBlA&#xA;/wCLYUAD+5iAP/FffMmJjL6dj3fj8ebRIGP1fNYPMGoanILfy9YySOft3t9DLBDH8oZBFNI3z4L/&#xA;AJZIpiQBvI0oN8t0z0LyFZWcqXmoub6/QFUkcKFjDdViRAqRqe6xqoPep3zHyagnaOwb4YOsmUfu&#xA;407Iij5ADMfm37BA3OpdVh/4M/wGXww97RPN3L9MZmWRmNSSKk/LI5hyZYTzY9+ZXmW/0TRoxY0S&#xA;4vHMQn7xqFqSv+V4Htl+hwDJPfkGnWZjCO3V5Ba+ZPMFrL6tvqNwjk1Y+qxB/wBYEkH6c3csECKI&#xA;DqI5pg2CWe+RPzH1i91mDS9WdJ47mqRT8Qjq4BK140UhqU6dc12r0MYwMo9HP0uslKXDLq9QzUO0&#xA;dirsVdirsVdirsVaYclI3FRSo2OKvFfzjjjXXLS25wSI1sKW06CON29RgStwCAkwBFa8QRStembr&#xA;QH0E+f4+DqdWKlXkxSa41C6tra3uWv7uC3b/AHj1CZo7eCh+H1G5fG1Nkoqk9gemZYiBuKHucbiJ&#xA;2Nl7T+WIceXXJqVNw3psBxiKiNF/cj/fYpQe4Oy/ZGl1v1/B22k+hlE91FCPiPxdlHXMeMCW6UwE&#xA;suLyWbb7Kfyj+OZMMYDjTyEvnjOhdG7FXr/5OX7y6Jd2bVpazhkP+TKtafepP05pO04VMHvDuOzp&#xA;XEjuL0DNa7B2KuxV2KpHqflS1nuTf6fK+m6oB/vVBQc6VosiGquN+jA0+eXwzkCpbxaZYRdx2KBu&#xA;NbNi9uvmbT2kltzzt9RtYHnj9QbVVEEksbMD4EU6nJjFxfQfgwOSvrHxXnzDrGsn0vL1q0NvWkmp&#xA;3sbxqPERwNxkZv8AWpT/ACsfCjD6z8AnxZS+gfFPLDT1tdPS0kdrmgJllloTI7sXdmAAX4mYmgFB&#xA;2yiU7N8m6MaFIiKCGFeMUaxqdyEAUfhkSSeaQAOS/AlB6mjtCGX7KmrD+OXYSLacwNJXmS4yZaV/&#xA;dyfMfqzHz8w5GDkwj86P+OZp3/Gd/wDiGZvZf1H3OL2j9IeS5uXUK9heS2V9b3kX95byJKnzRgw/&#xA;VkZx4gQerKMuEg9z6XjcOiuKgMAQD133zlCHpg3irsVdirsVdirsVdiqUa15csNU046feQLc2XUQ&#xA;P1U0IqjeO/f78ux5jE2ObTPEJCujDrH8p/L0FxGZpZbuO2LfVLKarhORr9g027VJI98zJa6RHd5u&#xA;LHSRB5vRbdPTgjTiE4Kq8AahaClK96Zrid3PA2Sm8R0uH5b1NQfY5l4yCHEyAgqGTYPAM3zpnYq9&#xA;7/L/APw//h2H9C/3f/Hzzp6vrUHL1Kd/DtTpnOazj8T1u/0nBwelkmYrkuxV2KuxV2KrZPS4H1eP&#xA;DvypT8cIQa6uj9PgPTpw/Z40pT2piVC7Al2KuxVpuPE8vs0+KvSmEIKRPx5Hj9mvw160zODglMNK&#xA;/u5PmP1Zj5+YcjByYR+dH/HM07/jO/8AxDM3sv6j7nF7R+kPJc3LqGQ+Rf8AD/8AiGD9N/3H+6eV&#xA;PS9Wo4+r/k/x67Zjavj4Dwc3I0vBxjie/Zzb0DsVdirsVdirsVdirsVdirsVdiqC1T0/TWv95X4f&#xA;l3y/DdtGaqSzMhx3/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:861d56df-ca2b-3c4c-8810-43399265d1b0</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:861d56df-ca2b-3c4c-8810-43399265d1b0</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:ae228281-1399-6047-9867-083266b8da91</stRef:instanceID>
            <stRef:documentID>xmp.did:ae228281-1399-6047-9867-083266b8da91</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65093837-8c70-274d-a0b6-73be46bbcfe1</stEvt:instanceID>
                  <stEvt:when>2018-07-04T15:37:19+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:254258aa-7d0d-c94e-83d9-a2bc49954f99</stEvt:instanceID>
                  <stEvt:when>2018-09-27T09:50:25+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:861d56df-ca2b-3c4c-8810-43399265d1b0</stEvt:instanceID>
                  <stEvt:when>2018-12-18T13:00:34+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
600 400 li
600 0 li
cp
clp
87.502 173.604 mo
86.4629 173.604 85.5469 173.473 84.75 173.211 cv
83.9551 172.948 83.2969 172.585 82.7773 172.119 cv
82.2598 171.653 81.8359 171.076 81.5117 170.387 cv
81.1875 169.698 80.959 168.958 80.8281 168.167 cv
80.6973 167.376 80.6309 166.485 80.6309 165.496 cv
80.6309 157.083 li
80.6309 156.034 80.6992 155.105 80.834 154.295 cv
80.9707 153.485 81.1992 152.733 81.5195 152.039 cv
81.8398 151.346 82.2598 150.775 82.7773 150.329 cv
83.2969 149.883 83.9531 149.533 84.7441 149.28 cv
85.5332 149.028 86.4531 148.902 87.502 148.902 cv
88.7051 148.902 89.7324 149.063 90.5879 149.383 cv
91.4414 149.703 92.1152 150.174 92.6113 150.795 cv
93.1055 151.416 93.4648 152.141 93.6875 152.971 cv
93.9102 153.801 94.0234 154.769 94.0234 155.875 cv
94.0234 157.941 li
89.7871 157.941 li
89.7871 155.889 li
89.7871 154.686 89.7227 153.876 89.5977 153.458 cv
89.3457 152.644 88.7285 152.206 87.748 152.148 cv
87.5156 152.148 li
87.1465 152.148 86.8242 152.192 86.5488 152.279 cv
86.2715 152.366 86.0469 152.505 85.8711 152.694 cv
85.6973 152.884 85.5566 153.085 85.4492 153.298 cv
85.3418 153.512 85.2617 153.791 85.209 154.135 cv
85.1563 154.479 85.1211 154.798 85.1074 155.089 cv
85.0918 155.38 85.0859 155.749 85.0859 156.194 cv
85.0859 166.413 li
85.0859 167.83 85.2617 168.839 85.6172 169.44 cv
85.9707 170.042 86.6035 170.343 87.5156 170.343 cv
87.8262 170.343 88.1016 170.307 88.3379 170.234 cv
88.5762 170.161 88.7754 170.069 88.9355 169.957 cv
89.0957 169.846 89.2305 169.686 89.3438 169.477 cv
89.4551 169.269 89.5391 169.074 89.5977 168.895 cv
89.6563 168.716 89.6992 168.466 89.7285 168.146 cv
89.7578 167.825 89.7754 167.554 89.7793 167.33 cv
89.7852 167.106 89.7871 166.801 89.7871 166.413 cv
89.7871 164.259 li
94.0234 164.259 li
94.0234 166.238 li
94.0234 167.141 93.959 167.951 93.834 168.669 cv
93.707 169.388 93.4922 170.062 93.1855 170.692 cv
92.8809 171.323 92.4844 171.848 92 172.265 cv
91.5137 172.682 90.8926 173.01 90.1367 173.247 cv
89.3789 173.484 88.5 173.604 87.502 173.604 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
1 .866484 .240818 .0951247 cmyk
f
97.0645 173.313 mo
97.0645 149.179 li
101.461 149.179 li
101.461 170.271 li
107.24 170.271 li
107.24 173.313 li
97.0645 173.313 li
cp
f
114.771 170.154 mo
115.078 170.28 115.443 170.343 115.871 170.343 cv
116.299 170.343 116.662 170.28 116.963 170.154 cv
117.264 170.028 117.504 169.862 117.684 169.659 cv
117.863 169.455 118.004 169.188 118.105 168.858 cv
118.207 168.528 118.275 168.198 118.309 167.868 cv
118.344 167.539 118.359 167.146 118.359 166.689 cv
118.359 155.729 li
118.359 155.146 118.33 154.662 118.273 154.273 cv
118.215 153.886 118.1 153.519 117.932 153.175 cv
117.762 152.83 117.506 152.573 117.166 152.403 cv
116.826 152.233 116.395 152.148 115.871 152.148 cv
115.348 152.148 114.912 152.233 114.568 152.403 cv
114.225 152.573 113.969 152.83 113.805 153.175 cv
113.639 153.519 113.527 153.886 113.469 154.273 cv
113.412 154.662 113.383 155.146 113.383 155.729 cv
113.383 166.689 li
113.383 167.146 113.398 167.539 113.434 167.868 cv
113.467 168.198 113.535 168.528 113.637 168.858 cv
113.738 169.188 113.877 169.455 114.051 169.659 cv
114.227 169.862 114.467 170.028 114.771 170.154 cv
cp
115.871 173.604 mo
113.387 173.604 111.605 172.93 110.529 171.58 cv
109.451 170.231 108.914 168.257 108.914 165.656 cv
108.914 156.748 li
108.914 155.467 109.035 154.355 109.277 153.415 cv
109.52 152.474 109.91 151.658 110.449 150.969 cv
110.988 150.28 111.709 149.764 112.611 149.419 cv
113.514 149.074 114.6 148.902 115.871 148.902 cv
118.346 148.902 120.123 149.567 121.205 150.896 cv
122.287 152.226 122.828 154.177 122.828 156.748 cv
122.828 165.656 li
122.828 166.918 122.705 168.026 122.457 168.982 cv
122.211 169.938 121.816 170.768 121.279 171.471 cv
120.74 172.175 120.02 172.706 119.117 173.065 cv
118.215 173.424 117.133 173.604 115.871 173.604 cv
cp
f
132.654 173.604 mo
131.576 173.604 130.643 173.478 129.852 173.226 cv
129.061 172.973 128.41 172.619 127.902 172.162 cv
127.393 171.707 126.984 171.122 126.68 170.408 cv
126.373 169.695 126.16 168.924 126.039 168.094 cv
125.916 167.265 125.855 166.302 125.855 165.205 cv
125.855 149.179 li
130.121 149.179 li
130.121 165.656 li
130.121 166.219 130.137 166.699 130.164 167.097 cv
130.193 167.495 130.258 167.912 130.354 168.349 cv
130.451 168.785 130.59 169.135 130.77 169.396 cv
130.949 169.659 131.195 169.877 131.512 170.052 cv
131.826 170.227 132.207 170.314 132.654 170.314 cv
133.1 170.314 133.48 170.227 133.797 170.052 cv
134.111 169.877 134.355 169.659 134.525 169.396 cv
134.693 169.135 134.83 168.785 134.932 168.349 cv
135.033 167.912 135.098 167.497 135.121 167.104 cv
135.145 166.711 135.158 166.229 135.158 165.656 cv
135.158 149.179 li
139.422 149.179 li
139.422 165.205 li
139.422 166.302 139.361 167.265 139.24 168.094 cv
139.119 168.924 138.906 169.695 138.6 170.408 cv
138.295 171.122 137.889 171.707 137.385 172.162 cv
136.881 172.619 136.232 172.973 135.441 173.226 cv
134.65 173.478 133.721 173.604 132.654 173.604 cv
cp
f
147.238 170.227 mo
148.49 170.227 li
148.928 170.227 149.311 170.188 149.641 170.11 cv
149.971 170.032 150.246 169.94 150.471 169.834 cv
150.693 169.727 150.879 169.553 151.029 169.31 cv
151.18 169.067 151.295 168.844 151.373 168.64 cv
151.449 168.437 151.508 168.128 151.547 167.716 cv
151.586 167.304 151.609 166.951 151.619 166.66 cv
151.629 166.369 151.635 165.938 151.635 165.365 cv
151.635 156.544 li
151.635 155.972 151.625 155.511 151.605 155.161 cv
151.586 154.812 151.539 154.46 151.467 154.106 cv
151.395 153.752 151.287 153.478 151.146 153.283 cv
151.006 153.09 150.818 152.912 150.586 152.752 cv
150.354 152.592 150.063 152.48 149.713 152.418 cv
149.363 152.354 148.941 152.323 148.447 152.323 cv
147.238 152.323 li
147.238 170.227 li
cp
142.842 173.313 mo
142.842 149.179 li
148.461 149.179 li
149.916 149.179 151.135 149.324 152.115 149.615 cv
153.094 149.906 153.881 150.367 154.473 150.998 cv
155.064 151.629 155.484 152.403 155.732 153.32 cv
155.979 154.237 156.104 155.365 156.104 156.704 cv
156.104 165.408 li
156.104 166.787 155.977 167.956 155.725 168.917 cv
155.473 169.877 155.057 170.692 154.48 171.362 cv
153.902 172.031 153.133 172.524 152.174 172.84 cv
151.213 173.155 150.033 173.313 148.637 173.313 cv
142.842 173.313 li
cp
f
168.971 173.313 mo
168.971 152.425 li
164.924 152.425 li
164.924 149.179 li
177.283 149.179 li
177.283 152.425 li
173.367 152.425 li
173.367 173.313 li
168.971 173.313 li
cp
f
179.203 173.313 mo
179.203 149.179 li
189.305 149.179 li
189.305 152.279 li
183.6 152.279 li
183.6 159.208 li
188.111 159.208 li
188.111 162.309 li
183.6 162.309 li
183.6 170.271 li
189.379 170.271 li
189.379 173.313 li
179.203 173.313 li
cp
f
198.389 173.604 mo
197.35 173.604 196.434 173.473 195.637 173.211 cv
194.842 172.948 194.184 172.585 193.664 172.119 cv
193.146 171.653 192.723 171.076 192.398 170.387 cv
192.074 169.698 191.846 168.958 191.715 168.167 cv
191.584 167.376 191.518 166.485 191.518 165.496 cv
191.518 157.083 li
191.518 156.034 191.586 155.105 191.721 154.295 cv
191.857 153.485 192.086 152.733 192.406 152.039 cv
192.727 151.346 193.146 150.775 193.664 150.329 cv
194.184 149.883 194.84 149.533 195.631 149.28 cv
196.42 149.028 197.34 148.902 198.389 148.902 cv
199.592 148.902 200.619 149.063 201.475 149.383 cv
202.328 149.703 203.002 150.174 203.498 150.795 cv
203.992 151.416 204.352 152.141 204.574 152.971 cv
204.797 153.801 204.91 154.769 204.91 155.875 cv
204.91 157.941 li
200.674 157.941 li
200.674 155.889 li
200.674 154.686 200.609 153.876 200.484 153.458 cv
200.232 152.644 199.615 152.206 198.635 152.148 cv
198.402 152.148 li
198.033 152.148 197.711 152.192 197.436 152.279 cv
197.158 152.366 196.934 152.505 196.758 152.694 cv
196.584 152.884 196.443 153.085 196.336 153.298 cv
196.229 153.512 196.148 153.791 196.096 154.135 cv
196.043 154.479 196.008 154.798 195.994 155.089 cv
195.979 155.38 195.973 155.749 195.973 156.194 cv
195.973 166.413 li
195.973 167.83 196.148 168.839 196.504 169.44 cv
196.857 170.042 197.49 170.343 198.402 170.343 cv
198.713 170.343 198.988 170.307 199.225 170.234 cv
199.463 170.161 199.662 170.069 199.822 169.957 cv
199.982 169.846 200.117 169.686 200.23 169.477 cv
200.342 169.269 200.426 169.074 200.484 168.895 cv
200.543 168.716 200.586 168.466 200.615 168.146 cv
200.645 167.825 200.662 167.554 200.666 167.33 cv
200.672 167.106 200.674 166.801 200.674 166.413 cv
200.674 164.259 li
204.91 164.259 li
204.91 166.238 li
204.91 167.141 204.846 167.951 204.721 168.669 cv
204.594 169.388 204.379 170.062 204.072 170.692 cv
203.768 171.323 203.371 171.848 202.887 172.265 cv
202.4 172.682 201.779 173.01 201.023 173.247 cv
200.266 173.484 199.387 173.604 198.389 173.604 cv
cp
f
207.996 173.313 mo
207.996 149.179 li
212.391 149.179 li
212.391 159.266 li
217.297 159.266 li
217.297 149.179 li
221.693 149.179 li
221.693 173.313 li
217.297 173.313 li
217.297 162.396 li
212.391 162.396 li
212.391 173.313 li
207.996 173.313 li
cp
f
225.346 173.313 mo
225.346 149.179 li
228.373 149.179 li
234.283 162.847 li
234.283 149.179 li
237.922 149.179 li
237.922 173.313 li
235.039 173.313 li
229.072 158.946 li
229.072 173.313 li
225.346 173.313 li
cp
f
246.998 170.154 mo
247.303 170.28 247.67 170.343 248.098 170.343 cv
248.523 170.343 248.887 170.28 249.188 170.154 cv
249.488 170.028 249.729 169.862 249.908 169.659 cv
250.088 169.455 250.229 169.188 250.33 168.858 cv
250.434 168.528 250.5 168.198 250.535 167.868 cv
250.568 167.539 250.586 167.146 250.586 166.689 cv
250.586 155.729 li
250.586 155.146 250.557 154.662 250.498 154.273 cv
250.439 153.886 250.326 153.519 250.156 153.175 cv
249.986 152.83 249.732 152.573 249.393 152.403 cv
249.053 152.233 248.621 152.148 248.098 152.148 cv
247.572 152.148 247.139 152.233 246.793 152.403 cv
246.449 152.573 246.195 152.83 246.029 153.175 cv
245.865 153.519 245.754 153.886 245.695 154.273 cv
245.637 154.662 245.607 155.146 245.607 155.729 cv
245.607 166.689 li
245.607 167.146 245.625 167.539 245.658 167.868 cv
245.693 168.198 245.76 168.528 245.863 168.858 cv
245.965 169.188 246.102 169.455 246.277 169.659 cv
246.451 169.862 246.691 170.028 246.998 170.154 cv
cp
248.098 173.604 mo
245.613 173.604 243.832 172.93 242.754 171.58 cv
241.678 170.231 241.139 168.257 241.139 165.656 cv
241.139 156.748 li
241.139 155.467 241.26 154.355 241.502 153.415 cv
241.746 152.474 242.137 151.658 242.674 150.969 cv
243.213 150.28 243.934 149.764 244.836 149.419 cv
245.738 149.074 246.826 148.902 248.098 148.902 cv
250.57 148.902 252.35 149.567 253.432 150.896 cv
254.514 152.226 255.055 154.177 255.055 156.748 cv
255.055 165.656 li
255.055 166.918 254.932 168.026 254.684 168.982 cv
254.436 169.938 254.043 170.768 253.504 171.471 cv
252.965 172.175 252.244 172.706 251.342 173.065 cv
250.439 173.424 249.357 173.604 248.098 173.604 cv
cp
f
258.271 173.313 mo
258.271 149.179 li
262.668 149.179 li
262.668 170.271 li
268.445 170.271 li
268.445 173.313 li
258.271 173.313 li
cp
f
275.979 170.154 mo
276.283 170.28 276.65 170.343 277.078 170.343 cv
277.504 170.343 277.867 170.28 278.168 170.154 cv
278.469 170.028 278.709 169.862 278.889 169.659 cv
279.068 169.455 279.209 169.188 279.311 168.858 cv
279.414 168.528 279.48 168.198 279.516 167.868 cv
279.549 167.539 279.566 167.146 279.566 166.689 cv
279.566 155.729 li
279.566 155.146 279.537 154.662 279.479 154.273 cv
279.42 153.886 279.307 153.519 279.137 153.175 cv
278.967 152.83 278.713 152.573 278.373 152.403 cv
278.033 152.233 277.602 152.148 277.078 152.148 cv
276.553 152.148 276.119 152.233 275.773 152.403 cv
275.43 152.573 275.176 152.83 275.01 153.175 cv
274.846 153.519 274.734 153.886 274.676 154.273 cv
274.617 154.662 274.588 155.146 274.588 155.729 cv
274.588 166.689 li
274.588 167.146 274.605 167.539 274.639 167.868 cv
274.674 168.198 274.74 168.528 274.844 168.858 cv
274.945 169.188 275.082 169.455 275.258 169.659 cv
275.432 169.862 275.672 170.028 275.979 170.154 cv
cp
277.078 173.604 mo
274.594 173.604 272.813 172.93 271.734 171.58 cv
270.658 170.231 270.119 168.257 270.119 165.656 cv
270.119 156.748 li
270.119 155.467 270.24 154.355 270.482 153.415 cv
270.727 152.474 271.117 151.658 271.654 150.969 cv
272.193 150.28 272.914 149.764 273.816 149.419 cv
274.719 149.074 275.807 148.902 277.078 148.902 cv
279.551 148.902 281.33 149.567 282.412 150.896 cv
283.494 152.226 284.035 154.177 284.035 156.748 cv
284.035 165.656 li
284.035 166.918 283.912 168.026 283.664 168.982 cv
283.416 169.938 283.023 170.768 282.484 171.471 cv
281.945 172.175 281.225 172.706 280.322 173.065 cv
279.42 173.424 278.338 173.604 277.078 173.604 cv
cp
f
293.293 173.633 mo
291.012 173.633 289.369 172.92 288.365 171.493 cv
287.361 170.066 286.859 167.99 286.859 165.263 cv
286.859 157.403 li
286.859 156.016 286.969 154.819 287.186 153.814 cv
287.404 152.811 287.771 151.93 288.285 151.173 cv
288.799 150.416 289.508 149.849 290.41 149.47 cv
291.313 149.092 292.42 148.902 293.729 148.902 cv
296.117 148.902 297.828 149.487 298.867 150.656 cv
299.906 151.826 300.424 153.599 300.424 155.977 cv
300.424 157.155 li
296.219 157.155 li
296.219 155.903 li
296.219 155.37 296.205 154.934 296.182 154.594 cv
296.158 154.254 296.1 153.912 296.008 153.567 cv
295.914 153.223 295.781 152.959 295.607 152.774 cv
295.432 152.59 295.193 152.439 294.893 152.323 cv
294.592 152.206 294.225 152.148 293.787 152.148 cv
293.457 152.148 293.164 152.189 292.906 152.271 cv
292.65 152.354 292.434 152.456 292.26 152.578 cv
292.084 152.699 291.936 152.871 291.814 153.095 cv
291.693 153.317 291.602 153.533 291.539 153.742 cv
291.475 153.951 291.426 154.22 291.393 154.55 cv
291.359 154.88 291.336 155.171 291.328 155.423 cv
291.318 155.676 291.313 156.001 291.313 156.398 cv
291.313 166.137 li
291.313 167.592 291.492 168.657 291.852 169.331 cv
292.211 170.006 292.895 170.343 293.904 170.343 cv
294.428 170.343 294.867 170.244 295.221 170.045 cv
295.574 169.846 295.852 169.545 296.051 169.143 cv
296.25 168.739 296.391 168.278 296.473 167.76 cv
296.555 167.24 296.596 166.612 296.596 165.874 cv
296.596 163.895 li
293.99 163.895 li
293.99 161.057 li
300.557 161.057 li
300.557 173.313 li
297.703 173.313 li
297.383 170.867 li
296.654 172.711 295.291 173.633 293.293 173.633 cv
cp
f
307.105 173.313 mo
307.105 164.128 li
302.186 149.179 li
306.291 149.179 li
309.275 158.786 li
312.127 149.179 li
316.189 149.179 li
311.299 164.128 li
311.299 173.313 li
307.105 173.313 li
cp
f
176.498 265.062 mo
92.6611 265.062 li
86.2002 265.062 80.9629 259.823 80.9629 253.363 cv
80.9629 246.902 86.2002 241.665 92.6611 241.665 cv
176.498 241.665 li
182.959 241.665 188.196 246.902 188.196 253.363 cv
188.196 259.823 182.959 265.062 176.498 265.062 cv
cp
.657221 .328313 0 0 cmyk
f
109.014 258.572 mo
109.014 250.026 li
107.359 250.026 li
107.359 248.698 li
112.414 248.698 li
112.414 250.026 li
110.813 250.026 li
110.813 258.572 li
109.014 258.572 li
cp
0 0 0 0 cmyk
f
115 252.915 mo
115.434 252.915 li
115.967 252.915 116.344 252.802 116.568 252.575 cv
116.793 252.349 116.904 251.962 116.904 251.414 cv
116.904 250.886 116.809 250.508 116.613 250.279 cv
116.418 250.051 116.061 249.937 115.541 249.937 cv
115 249.937 li
115 252.915 li
cp
113.201 258.572 mo
113.201 248.698 li
115.465 248.698 li
115.984 248.698 116.43 248.741 116.805 248.826 cv
117.178 248.912 117.502 249.055 117.777 249.255 cv
118.053 249.456 118.26 249.728 118.396 250.071 cv
118.533 250.414 118.602 250.834 118.602 251.33 cv
118.602 251.95 118.51 252.456 118.326 252.85 cv
118.141 253.242 117.836 253.528 117.412 253.707 cv
118.781 258.572 li
116.977 258.572 li
115.797 254.064 li
115 254.064 li
115 258.572 li
113.201 258.572 li
cp
f
121.336 258.572 mo
121.336 254.814 li
119.322 248.698 li
121.002 248.698 li
122.223 252.629 li
123.391 248.698 li
125.051 248.698 li
123.051 254.814 li
123.051 258.572 li
121.336 258.572 li
cp
f
128.941 258.572 mo
128.941 248.698 li
130.715 248.698 li
130.715 258.572 li
128.941 258.572 li
cp
f
133.199 258.572 mo
133.199 250.026 li
131.543 250.026 li
131.543 248.698 li
136.6 248.698 li
136.6 250.026 li
134.998 250.026 li
134.998 258.572 li
133.199 258.572 li
cp
f
140.363 258.572 mo
140.363 248.698 li
141.602 248.698 li
144.02 254.29 li
144.02 248.698 li
145.508 248.698 li
145.508 258.572 li
144.33 258.572 li
141.887 252.694 li
141.887 258.572 li
140.363 258.572 li
cp
f
149.223 257.28 mo
149.348 257.332 149.498 257.357 149.672 257.357 cv
149.846 257.357 149.996 257.332 150.119 257.28 cv
150.242 257.229 150.34 257.161 150.414 257.077 cv
150.486 256.994 150.545 256.885 150.586 256.75 cv
150.627 256.615 150.656 256.479 150.67 256.345 cv
150.684 256.21 150.689 256.049 150.689 255.862 cv
150.689 251.378 li
150.689 251.14 150.678 250.941 150.654 250.782 cv
150.631 250.624 150.584 250.474 150.514 250.333 cv
150.445 250.192 150.342 250.087 150.201 250.018 cv
150.063 249.948 149.887 249.913 149.672 249.913 cv
149.457 249.913 149.279 249.948 149.139 250.018 cv
148.998 250.087 148.895 250.192 148.826 250.333 cv
148.758 250.474 148.713 250.624 148.689 250.782 cv
148.666 250.941 148.654 251.14 148.654 251.378 cv
148.654 255.862 li
148.654 256.049 148.66 256.21 148.674 256.345 cv
148.688 256.479 148.717 256.615 148.758 256.75 cv
148.799 256.885 148.855 256.994 148.928 257.077 cv
148.998 257.161 149.098 257.229 149.223 257.28 cv
cp
149.672 258.691 mo
148.656 258.691 147.928 258.415 147.486 257.863 cv
147.045 257.312 146.826 256.504 146.826 255.439 cv
146.826 251.795 li
146.826 251.271 146.875 250.816 146.975 250.432 cv
147.074 250.046 147.232 249.713 147.453 249.431 cv
147.674 249.148 147.969 248.938 148.338 248.797 cv
148.707 248.655 149.152 248.585 149.672 248.585 cv
150.684 248.585 151.412 248.857 151.855 249.401 cv
152.297 249.945 152.52 250.743 152.52 251.795 cv
152.52 255.439 li
152.52 255.956 152.469 256.409 152.367 256.801 cv
152.266 257.191 152.105 257.531 151.885 257.819 cv
151.664 258.106 151.369 258.324 151 258.471 cv
150.631 258.618 150.188 258.691 149.672 258.691 cv
cp
f
154.906 258.572 mo
153.496 248.698 li
155.008 248.698 li
155.818 255.064 li
156.871 248.698 li
158.08 248.698 li
159.158 255.07 li
159.969 248.698 li
161.451 248.698 li
160.041 258.572 li
158.605 258.572 li
157.492 251.979 li
156.383 258.572 li
154.906 258.572 li
cp
f
116.668 198.175 mo
116.367 198.175 116.139 198.063 115.98 197.841 cv
115.822 197.618 115.742 197.304 115.742 196.895 cv
115.742 192.095 li
116.506 192.095 li
116.506 196.738 li
116.506 197.042 116.553 197.258 116.643 197.386 cv
116.734 197.514 116.877 197.578 117.072 197.578 cv
117.414 197.578 117.768 197.383 118.135 196.991 cv
118.135 192.095 li
118.895 192.095 li
118.895 198.084 li
118.135 198.084 li
118.135 197.421 li
117.689 197.924 117.201 198.175 116.668 198.175 cv
.472602 .264286 .0650339 0 cmyk
f
125.611 198.084 mo
124.893 198.084 li
124.893 193.38 li
124.893 193.053 124.842 192.825 124.74 192.697 cv
124.639 192.569 124.494 192.505 124.305 192.505 cv
123.924 192.512 123.549 192.719 123.178 193.127 cv
123.184 193.229 123.187 193.306 123.187 193.359 cv
123.187 198.084 li
122.48 198.084 li
122.48 193.38 li
122.48 193.053 122.428 192.825 122.322 192.697 cv
122.219 192.569 122.072 192.505 121.883 192.505 cv
121.502 192.512 121.129 192.719 120.766 193.127 cv
120.766 198.084 li
120.051 198.084 li
120.051 192.095 li
120.766 192.095 li
120.766 192.702 li
121.166 192.227 121.637 191.989 122.176 191.989 cv
122.676 191.989 122.988 192.252 123.117 192.778 cv
123.535 192.252 124.027 191.989 124.594 191.989 cv
124.891 191.989 125.135 192.096 125.324 192.31 cv
125.516 192.524 125.611 192.874 125.611 193.359 cv
125.611 198.084 li
f
130.174 198.18 mo
129.658 198.18 129.287 197.986 129.063 197.599 cv
128.838 197.211 128.727 196.566 128.727 195.666 cv
128.727 194.559 li
128.727 194.228 128.738 193.938 128.762 193.688 cv
128.785 193.439 128.83 193.205 128.893 192.985 cv
128.957 192.767 129.041 192.588 129.147 192.449 cv
129.25 192.31 129.387 192.202 129.551 192.123 cv
129.717 192.044 129.912 192.004 130.139 192.004 cv
130.533 192.008 130.885 192.181 131.195 192.525 cv
131.195 189.697 li
131.953 189.697 li
131.953 198.084 li
131.195 198.084 li
131.195 197.659 li
130.891 198.003 130.551 198.177 130.174 198.18 cv
130.305 192.601 mo
129.984 192.601 129.768 192.735 129.654 193.003 cv
129.541 193.271 129.484 193.709 129.484 194.315 cv
129.484 195.727 li
129.484 196.381 129.543 196.854 129.658 197.144 cv
129.772 197.434 129.994 197.578 130.324 197.578 cv
130.619 197.578 130.908 197.446 131.195 197.184 cv
131.195 193.025 li
130.891 192.742 130.594 192.601 130.305 192.601 cv
f
134.6 198.18 mo
134.293 198.18 134.035 198.131 133.826 198.033 cv
133.617 197.935 133.451 197.787 133.332 197.588 cv
133.213 197.39 133.127 197.156 133.076 196.888 cv
133.025 196.62 133.002 196.297 133.002 195.919 cv
133.002 194.26 li
133.002 193.498 133.119 192.932 133.356 192.561 cv
133.592 192.189 134.006 192.004 134.6 192.004 cv
135.195 192.004 135.611 192.189 135.846 192.558 cv
136.08 192.927 136.197 193.494 136.197 194.26 cv
136.197 195.919 li
136.197 196.297 136.172 196.62 136.121 196.888 cv
136.072 197.156 135.986 197.39 135.867 197.588 cv
135.746 197.787 135.582 197.935 135.373 198.033 cv
135.164 198.131 134.906 198.18 134.6 198.18 cv
134.6 192.57 mo
134.471 192.57 134.359 192.588 134.266 192.621 cv
134.172 192.655 134.094 192.71 134.033 192.785 cv
133.887 193.028 li
133.85 193.114 133.82 193.227 133.803 193.364 cv
133.783 193.503 133.771 193.634 133.768 193.757 cv
133.762 193.88 133.76 194.034 133.76 194.22 cv
133.76 195.96 li
133.76 196.145 133.762 196.3 133.768 196.423 cv
133.771 196.546 133.783 196.676 133.803 196.814 cv
133.82 196.953 133.85 197.064 133.887 197.15 cv
134.033 197.394 li
134.094 197.47 134.172 197.524 134.266 197.558 cv
134.359 197.592 134.471 197.608 134.6 197.608 cv
134.752 197.608 134.879 197.581 134.984 197.525 cv
135.088 197.47 135.17 197.399 135.229 197.315 cv
135.287 197.23 135.332 197.111 135.363 196.956 cv
135.393 196.801 135.412 196.652 135.422 196.511 cv
135.43 196.369 135.434 196.186 135.434 195.96 cv
135.434 194.22 li
135.434 193.994 135.43 193.81 135.422 193.668 cv
135.412 193.526 135.393 193.378 135.363 193.223 cv
135.332 193.068 135.287 192.948 135.229 192.864 cv
135.17 192.779 135.088 192.71 134.984 192.654 cv
134.879 192.599 134.752 192.57 134.6 192.57 cv
f
138.109 198.084 mo
137.346 198.084 li
137.346 189.697 li
138.109 189.697 li
138.109 198.084 li
f
140.82 198.18 mo
140.514 198.18 140.256 198.131 140.047 198.033 cv
139.838 197.935 139.672 197.787 139.553 197.588 cv
139.434 197.39 139.348 197.156 139.297 196.888 cv
139.246 196.62 139.223 196.297 139.223 195.919 cv
139.223 194.26 li
139.223 193.498 139.34 192.932 139.576 192.561 cv
139.812 192.189 140.227 192.004 140.82 192.004 cv
141.416 192.004 141.832 192.189 142.066 192.558 cv
142.301 192.927 142.418 193.494 142.418 194.26 cv
142.418 195.919 li
142.418 196.297 142.393 196.62 142.342 196.888 cv
142.293 197.156 142.207 197.39 142.088 197.588 cv
141.967 197.787 141.803 197.935 141.594 198.033 cv
141.385 198.131 141.127 198.18 140.82 198.18 cv
140.82 192.57 mo
140.691 192.57 140.58 192.588 140.486 192.621 cv
140.393 192.655 140.314 192.71 140.254 192.785 cv
140.107 193.028 li
140.07 193.114 140.041 193.227 140.023 193.364 cv
140.004 193.503 139.992 193.634 139.988 193.757 cv
139.982 193.88 139.98 194.034 139.98 194.22 cv
139.98 195.96 li
139.98 196.145 139.982 196.3 139.988 196.423 cv
139.992 196.546 140.004 196.676 140.023 196.814 cv
140.041 196.953 140.07 197.064 140.107 197.15 cv
140.254 197.394 li
140.314 197.47 140.393 197.524 140.486 197.558 cv
140.58 197.592 140.691 197.608 140.82 197.608 cv
140.973 197.608 141.1 197.581 141.205 197.525 cv
141.309 197.47 141.391 197.399 141.449 197.315 cv
141.508 197.23 141.553 197.111 141.584 196.956 cv
141.613 196.801 141.633 196.652 141.643 196.511 cv
141.65 196.369 141.654 196.186 141.654 195.96 cv
141.654 194.22 li
141.654 193.994 141.65 193.81 141.643 193.668 cv
141.633 193.526 141.613 193.378 141.584 193.223 cv
141.553 193.068 141.508 192.948 141.449 192.864 cv
141.391 192.779 141.309 192.71 141.205 192.654 cv
141.1 192.599 140.973 192.57 140.82 192.57 cv
f
144.279 198.084 mo
143.521 198.084 li
143.521 192.095 li
144.279 192.095 li
144.279 192.92 li
144.461 192.616 144.674 192.392 144.92 192.247 cv
145.164 192.102 145.41 192.029 145.66 192.029 cv
145.791 192.034 li
145.791 192.853 li
145.684 192.811 145.562 192.788 145.428 192.788 cv
144.941 192.788 144.559 193.021 144.279 193.486 cv
144.279 198.084 li
f
150.031 198.18 mo
149.555 198.18 149.176 198.026 148.891 197.72 cv
148.605 197.413 148.443 196.998 148.402 196.476 cv
149.039 196.283 li
149.08 196.738 149.184 197.073 149.354 197.287 cv
149.521 197.502 149.758 197.608 150.061 197.608 cv
150.324 197.608 150.531 197.531 150.684 197.376 cv
150.828 197.228 150.9 197.028 150.9 196.779 cv
150.9 196.743 li
150.891 196.346 150.648 195.948 150.172 195.55 cv
149.357 194.856 li
149.072 194.617 148.863 194.383 148.731 194.153 cv
148.603 193.932 148.539 193.672 148.539 193.375 cv
148.539 192.937 148.67 192.598 148.934 192.358 cv
149.189 192.122 149.535 192.004 149.971 192.004 cv
150.412 192.004 150.752 192.146 150.99 192.429 cv
151.227 192.712 151.359 193.095 151.387 193.577 cv
150.85 193.754 li
150.826 193.353 150.744 193.056 150.606 192.861 cv
150.465 192.668 150.264 192.57 150 192.57 cv
149.764 192.57 149.576 192.637 149.434 192.768 cv
149.295 192.896 149.227 193.068 149.227 193.284 cv
149.227 193.48 149.262 193.647 149.332 193.787 cv
149.404 193.927 149.533 194.078 149.723 194.24 cv
150.566 194.998 li
150.719 195.13 150.842 195.245 150.939 195.345 cv
151.035 195.444 151.137 195.567 151.244 195.714 cv
151.354 195.861 151.434 196.019 151.484 196.189 cv
151.537 196.36 151.564 196.543 151.568 196.738 cv
151.568 197.197 151.43 197.552 151.154 197.804 cv
150.877 198.055 150.504 198.18 150.031 198.18 cv
f
153.262 198.084 mo
152.504 198.084 li
152.504 192.095 li
153.262 192.095 li
153.262 198.084 li
153.268 191.27 mo
152.504 191.27 li
152.504 190.239 li
153.268 190.239 li
153.268 191.27 li
f
155.953 198.16 mo
155.545 198.16 155.264 198.048 155.109 197.823 cv
154.953 197.6 154.875 197.271 154.871 196.84 cv
154.871 192.601 li
154.148 192.601 li
154.148 192.095 li
154.871 192.095 li
154.871 190.244 li
155.629 190.244 li
155.629 192.095 li
156.627 192.095 li
156.627 192.601 li
155.629 192.601 li
155.629 196.769 li
155.629 197.072 155.666 197.28 155.736 197.394 cv
155.807 197.507 155.949 197.563 156.166 197.563 cv
156.305 197.563 156.445 197.55 156.592 197.522 cv
156.592 198.094 li
156.365 198.138 156.152 198.16 155.953 198.16 cv
f
160.582 198.18 mo
160.23 198.18 159.943 198.051 159.717 197.793 cv
159.49 197.535 159.379 197.216 159.379 196.835 cv
159.379 196.636 159.395 196.458 159.428 196.301 cv
159.463 196.145 159.525 195.997 159.619 195.858 cv
159.711 195.72 159.813 195.598 159.922 195.491 cv
160.031 195.386 160.187 195.273 160.389 195.152 cv
160.592 195.033 160.795 194.923 160.996 194.821 cv
161.199 194.721 161.463 194.598 161.791 194.452 cv
161.791 194.023 li
161.791 193.473 161.738 193.094 161.635 192.887 cv
161.529 192.68 161.334 192.575 161.047 192.575 cv
160.494 192.575 160.217 192.918 160.217 193.603 cv
160.217 193.82 li
159.469 193.795 li
159.469 193.697 159.471 193.636 159.475 193.612 cv
159.498 193.05 159.644 192.641 159.914 192.386 cv
160.184 192.132 160.574 192.004 161.088 192.004 cv
161.617 192.004 161.992 192.161 162.215 192.475 cv
162.438 192.788 162.549 193.291 162.549 193.982 cv
162.549 196.895 li
162.549 197.378 162.568 197.773 162.605 198.084 cv
161.932 198.084 li
161.82 197.255 li
161.731 197.518 161.576 197.737 161.357 197.914 cv
161.141 198.092 160.883 198.18 160.582 198.18 cv
161.791 194.953 mo
161.695 195.004 li
161.529 195.091 161.402 195.159 161.314 195.206 cv
161.227 195.253 161.123 195.312 161 195.383 cv
160.875 195.454 160.783 195.513 160.723 195.56 cv
160.514 195.732 li
160.342 195.922 li
160.232 196.127 li
160.156 196.372 li
160.143 196.458 160.137 196.553 160.137 196.657 cv
160.137 196.951 160.203 197.169 160.334 197.312 cv
160.465 197.456 160.631 197.527 160.83 197.527 cv
161.031 197.527 161.219 197.458 161.389 197.317 cv
161.559 197.178 161.693 197.012 161.791 196.819 cv
161.791 194.953 li
f
169.217 198.084 mo
168.498 198.084 li
168.498 193.38 li
168.498 193.053 168.447 192.825 168.346 192.697 cv
168.244 192.569 168.1 192.505 167.91 192.505 cv
167.529 192.512 167.154 192.719 166.783 193.127 cv
166.789 193.229 166.793 193.306 166.793 193.359 cv
166.793 198.084 li
166.086 198.084 li
166.086 193.38 li
166.086 193.053 166.033 192.825 165.928 192.697 cv
165.824 192.569 165.678 192.505 165.488 192.505 cv
165.107 192.512 164.734 192.719 164.371 193.127 cv
164.371 198.084 li
163.656 198.084 li
163.656 192.095 li
164.371 192.095 li
164.371 192.702 li
164.772 192.227 165.242 191.989 165.781 191.989 cv
166.281 191.989 166.594 192.252 166.723 192.778 cv
167.141 192.252 167.633 191.989 168.199 191.989 cv
168.496 191.989 168.74 192.096 168.93 192.31 cv
169.121 192.524 169.217 192.874 169.217 193.359 cv
169.217 198.084 li
f
171.836 198.18 mo
171.264 198.18 170.85 198.003 170.598 197.649 cv
170.344 197.295 170.219 196.689 170.219 195.833 cv
170.219 194.32 li
170.219 193.737 170.277 193.274 170.397 192.933 cv
170.518 192.59 170.693 192.35 170.924 192.212 cv
171.154 192.073 171.461 192.004 171.842 192.004 cv
172.094 192.004 172.311 192.037 172.488 192.102 cv
172.668 192.169 172.816 192.262 172.934 192.384 cv
173.053 192.505 173.146 192.669 173.215 192.877 cv
173.283 193.084 173.332 193.313 173.359 193.564 cv
173.387 193.815 173.398 194.118 173.398 194.473 cv
173.395 195.014 li
170.977 195.014 li
170.977 195.909 li
170.977 196.529 171.037 196.968 171.156 197.224 cv
171.275 197.48 171.5 197.608 171.832 197.608 cv
172.094 197.608 172.297 197.525 172.437 197.358 cv
172.58 197.191 172.65 196.889 172.65 196.45 cv
172.65 196.035 li
173.395 196.035 li
173.395 196.369 li
173.395 196.949 173.273 197.397 173.029 197.71 cv
172.787 198.023 172.389 198.18 171.836 198.18 cv
171.836 192.57 mo
171.516 192.57 171.293 192.682 171.166 192.904 cv
171.039 193.127 170.977 193.55 170.977 194.174 cv
170.977 194.579 li
172.65 194.579 li
172.65 194.083 li
172.65 193.874 172.646 193.7 172.635 193.562 cv
172.625 193.424 172.603 193.286 172.572 193.149 cv
172.541 193.014 172.496 192.906 172.437 192.828 cv
172.381 192.751 172.301 192.688 172.201 192.642 cv
172.1 192.594 171.978 192.57 171.836 192.57 cv
f
175.842 198.16 mo
175.434 198.16 175.152 198.048 174.998 197.823 cv
174.842 197.6 174.764 197.271 174.76 196.84 cv
174.76 192.601 li
174.037 192.601 li
174.037 192.095 li
174.76 192.095 li
174.76 190.244 li
175.518 190.244 li
175.518 192.095 li
176.516 192.095 li
176.516 192.601 li
175.518 192.601 li
175.518 196.769 li
175.518 197.072 175.555 197.28 175.625 197.394 cv
175.695 197.507 175.838 197.563 176.055 197.563 cv
176.193 197.563 176.334 197.55 176.481 197.522 cv
176.481 198.094 li
176.254 198.138 176.041 198.16 175.842 198.16 cv
f
177.41 199.293 mo
177.254 198.959 li
177.432 198.857 177.559 198.74 177.635 198.604 cv
177.711 198.47 177.75 198.297 177.75 198.084 cv
177.295 198.084 li
177.295 196.956 li
178.144 196.956 li
178.144 198.003 li
178.144 198.34 178.088 198.606 177.977 198.8 cv
177.865 198.993 177.676 199.158 177.41 199.293 cv
f
182.797 198.18 mo
182.523 198.18 182.289 198.14 182.094 198.059 cv
181.898 197.978 181.742 197.872 181.629 197.742 cv
181.514 197.612 181.424 197.441 181.357 197.23 cv
181.293 197.017 181.248 196.802 181.227 196.584 cv
181.205 196.367 181.193 196.109 181.193 195.812 cv
181.193 194.417 li
181.193 193.982 181.217 193.62 181.264 193.332 cv
181.31 193.044 181.395 192.797 181.514 192.591 cv
181.635 192.385 181.797 192.236 182.006 192.144 cv
182.213 192.051 182.475 192.004 182.791 192.004 cv
183.041 192.004 183.258 192.034 183.439 192.095 cv
183.621 192.156 183.769 192.239 183.881 192.346 cv
183.994 192.452 184.084 192.588 184.15 192.753 cv
184.215 192.918 184.262 193.093 184.287 193.276 cv
184.312 193.46 184.324 193.675 184.324 193.921 cv
184.324 194.204 li
183.621 194.204 li
183.621 193.921 li
183.621 193.408 183.561 193.056 183.439 192.861 cv
183.318 192.668 183.105 192.57 182.803 192.57 cv
182.457 192.57 182.23 192.692 182.119 192.937 cv
182.008 193.182 181.951 193.633 181.951 194.29 cv
181.951 195.97 li
181.951 196.583 182.012 197.01 182.131 197.249 cv
182.252 197.489 182.477 197.608 182.807 197.608 cv
182.949 197.608 183.068 197.588 183.166 197.548 cv
183.264 197.508 183.342 197.452 183.4 197.381 cv
183.461 197.31 183.506 197.212 183.541 197.088 cv
183.574 196.963 183.596 196.83 183.605 196.69 cv
183.617 196.551 183.621 196.374 183.621 196.162 cv
183.621 195.833 li
184.324 195.833 li
184.324 196.127 li
184.324 196.39 184.312 196.617 184.291 196.81 cv
184.269 197.002 184.227 197.187 184.16 197.368 cv
184.094 197.549 184.006 197.695 183.897 197.809 cv
183.787 197.921 183.641 198.012 183.455 198.079 cv
183.27 198.147 183.049 198.18 182.797 198.18 cv
f
186.818 198.18 mo
186.512 198.18 186.254 198.131 186.045 198.033 cv
185.836 197.935 185.67 197.787 185.551 197.588 cv
185.432 197.39 185.346 197.156 185.295 196.888 cv
185.244 196.62 185.221 196.297 185.221 195.919 cv
185.221 194.26 li
185.221 193.498 185.338 192.932 185.574 192.561 cv
185.811 192.189 186.225 192.004 186.818 192.004 cv
187.414 192.004 187.83 192.189 188.064 192.558 cv
188.299 192.927 188.416 193.494 188.416 194.26 cv
188.416 195.919 li
188.416 196.297 188.391 196.62 188.34 196.888 cv
188.291 197.156 188.205 197.39 188.086 197.588 cv
187.965 197.787 187.801 197.935 187.592 198.033 cv
187.383 198.131 187.125 198.18 186.818 198.18 cv
186.818 192.57 mo
186.689 192.57 186.578 192.588 186.484 192.621 cv
186.391 192.655 186.313 192.71 186.252 192.785 cv
186.105 193.028 li
186.068 193.114 186.039 193.227 186.021 193.364 cv
186.002 193.503 185.99 193.634 185.986 193.757 cv
185.98 193.88 185.979 194.034 185.979 194.22 cv
185.979 195.96 li
185.979 196.145 185.98 196.3 185.986 196.423 cv
185.99 196.546 186.002 196.676 186.021 196.814 cv
186.039 196.953 186.068 197.064 186.105 197.15 cv
186.252 197.394 li
186.313 197.47 186.391 197.524 186.484 197.558 cv
186.578 197.592 186.689 197.608 186.818 197.608 cv
186.971 197.608 187.098 197.581 187.203 197.525 cv
187.307 197.47 187.389 197.399 187.447 197.315 cv
187.506 197.23 187.551 197.111 187.582 196.956 cv
187.611 196.801 187.631 196.652 187.641 196.511 cv
187.648 196.369 187.652 196.186 187.652 195.96 cv
187.652 194.22 li
187.652 193.994 187.648 193.81 187.641 193.668 cv
187.631 193.526 187.611 193.378 187.582 193.223 cv
187.551 193.068 187.506 192.948 187.447 192.864 cv
187.389 192.779 187.307 192.71 187.203 192.654 cv
187.098 192.599 186.971 192.57 186.818 192.57 cv
f
192.578 198.084 mo
191.82 198.084 li
191.82 193.44 li
191.82 193.137 191.773 192.921 191.682 192.793 cv
191.588 192.665 191.443 192.601 191.248 192.601 cv
190.922 192.601 190.578 192.785 190.217 193.152 cv
190.217 198.084 li
189.457 198.084 li
189.457 192.095 li
190.217 192.095 li
190.217 192.718 li
190.658 192.242 191.139 192.004 191.658 192.004 cv
191.955 192.004 192.182 192.114 192.342 192.335 cv
192.5 192.557 192.578 192.871 192.578 193.278 cv
192.578 198.084 li
f
195.066 198.18 mo
194.592 198.18 194.211 198.026 193.926 197.72 cv
193.641 197.413 193.478 196.998 193.437 196.476 cv
194.076 196.283 li
194.115 196.738 194.221 197.073 194.389 197.287 cv
194.559 197.502 194.793 197.608 195.098 197.608 cv
195.361 197.608 195.568 197.531 195.719 197.376 cv
195.865 197.228 195.937 197.028 195.937 196.779 cv
195.937 196.743 li
195.928 196.346 195.684 195.948 195.209 195.55 cv
194.395 194.856 li
194.107 194.617 193.898 194.383 193.768 194.153 cv
193.639 193.932 193.574 193.672 193.574 193.375 cv
193.574 192.937 193.707 192.598 193.969 192.358 cv
194.226 192.122 194.572 192.004 195.006 192.004 cv
195.447 192.004 195.787 192.146 196.025 192.429 cv
196.264 192.712 196.396 193.095 196.422 193.577 cv
195.887 193.754 li
195.863 193.353 195.781 193.056 195.641 192.861 cv
195.502 192.668 195.299 192.57 195.037 192.57 cv
194.801 192.57 194.611 192.637 194.471 192.768 cv
194.332 192.896 194.264 193.068 194.264 193.284 cv
194.264 193.48 194.299 193.647 194.369 193.787 cv
194.439 193.927 194.57 194.078 194.758 194.24 cv
195.604 194.998 li
195.756 195.13 195.879 195.245 195.975 195.345 cv
196.07 195.444 196.174 195.567 196.281 195.714 cv
196.389 195.861 196.469 196.019 196.521 196.189 cv
196.574 196.36 196.602 196.543 196.605 196.738 cv
196.605 197.197 196.467 197.552 196.189 197.804 cv
195.914 198.055 195.539 198.18 195.066 198.18 cv
f
198.961 198.18 mo
198.389 198.18 197.975 198.003 197.723 197.649 cv
197.469 197.295 197.344 196.689 197.344 195.833 cv
197.344 194.32 li
197.344 193.737 197.402 193.274 197.522 192.933 cv
197.643 192.59 197.818 192.35 198.049 192.212 cv
198.279 192.073 198.586 192.004 198.967 192.004 cv
199.219 192.004 199.436 192.037 199.613 192.102 cv
199.793 192.169 199.941 192.262 200.059 192.384 cv
200.178 192.505 200.271 192.669 200.34 192.877 cv
200.408 193.084 200.457 193.313 200.484 193.564 cv
200.512 193.815 200.523 194.118 200.523 194.473 cv
200.52 195.014 li
198.102 195.014 li
198.102 195.909 li
198.102 196.529 198.162 196.968 198.281 197.224 cv
198.4 197.48 198.625 197.608 198.957 197.608 cv
199.219 197.608 199.422 197.525 199.562 197.358 cv
199.705 197.191 199.775 196.889 199.775 196.45 cv
199.775 196.035 li
200.52 196.035 li
200.52 196.369 li
200.52 196.949 200.398 197.397 200.154 197.71 cv
199.912 198.023 199.514 198.18 198.961 198.18 cv
198.961 192.57 mo
198.641 192.57 198.418 192.682 198.291 192.904 cv
198.164 193.127 198.102 193.55 198.102 194.174 cv
198.102 194.579 li
199.775 194.579 li
199.775 194.083 li
199.775 193.874 199.771 193.7 199.76 193.562 cv
199.75 193.424 199.728 193.286 199.697 193.149 cv
199.666 193.014 199.621 192.906 199.562 192.828 cv
199.506 192.751 199.426 192.688 199.326 192.642 cv
199.225 192.594 199.103 192.57 198.961 192.57 cv
f
203.037 198.18 mo
202.766 198.18 202.531 198.14 202.334 198.059 cv
202.139 197.978 201.984 197.872 201.869 197.742 cv
201.756 197.612 201.664 197.441 201.6 197.23 cv
201.533 197.017 201.49 196.802 201.467 196.584 cv
201.445 196.367 201.436 196.109 201.436 195.812 cv
201.436 194.417 li
201.436 193.982 201.459 193.62 201.506 193.332 cv
201.553 193.044 201.637 192.797 201.756 192.591 cv
201.875 192.385 202.039 192.236 202.246 192.144 cv
202.453 192.051 202.717 192.004 203.033 192.004 cv
203.283 192.004 203.498 192.034 203.68 192.095 cv
203.863 192.156 204.01 192.239 204.123 192.346 cv
204.236 192.452 204.326 192.588 204.391 192.753 cv
204.457 192.918 204.502 193.093 204.527 193.276 cv
204.553 193.46 204.566 193.675 204.566 193.921 cv
204.566 194.204 li
203.863 194.204 li
203.863 193.921 li
203.863 193.408 203.803 193.056 203.68 192.861 cv
203.559 192.668 203.346 192.57 203.043 192.57 cv
202.699 192.57 202.471 192.692 202.359 192.937 cv
202.248 193.182 202.193 193.633 202.193 194.29 cv
202.193 195.97 li
202.193 196.583 202.254 197.01 202.373 197.249 cv
202.492 197.489 202.717 197.608 203.049 197.608 cv
203.189 197.608 203.309 197.588 203.408 197.548 cv
203.506 197.508 203.584 197.452 203.643 197.381 cv
203.701 197.31 203.748 197.212 203.781 197.088 cv
203.814 196.963 203.838 196.83 203.848 196.69 cv
203.857 196.551 203.863 196.374 203.863 196.162 cv
203.863 195.833 li
204.566 195.833 li
204.566 196.127 li
204.566 196.39 204.555 196.617 204.533 196.81 cv
204.51 197.002 204.467 197.187 204.4 197.368 cv
204.336 197.549 204.248 197.695 204.139 197.809 cv
204.029 197.921 203.881 198.012 203.695 198.079 cv
203.51 198.147 203.291 198.18 203.037 198.18 cv
f
206.994 198.16 mo
206.586 198.16 206.305 198.048 206.148 197.823 cv
205.994 197.6 205.914 197.271 205.91 196.84 cv
205.91 192.601 li
205.187 192.601 li
205.187 192.095 li
205.91 192.095 li
205.91 190.244 li
206.67 190.244 li
206.67 192.095 li
207.666 192.095 li
207.666 192.601 li
206.67 192.601 li
206.67 196.769 li
206.67 197.072 206.705 197.28 206.775 197.394 cv
206.848 197.507 206.99 197.563 207.205 197.563 cv
207.344 197.563 207.486 197.55 207.631 197.522 cv
207.631 198.094 li
207.404 198.138 207.193 198.16 206.994 198.16 cv
f
209.979 198.18 mo
209.404 198.18 208.992 198.003 208.738 197.649 cv
208.486 197.295 208.359 196.689 208.359 195.833 cv
208.359 194.32 li
208.359 193.737 208.42 193.274 208.539 192.933 cv
208.658 192.59 208.834 192.35 209.065 192.212 cv
209.297 192.073 209.602 192.004 209.982 192.004 cv
210.236 192.004 210.451 192.037 210.631 192.102 cv
210.809 192.169 210.957 192.262 211.076 192.384 cv
211.193 192.505 211.287 192.669 211.355 192.877 cv
211.426 193.084 211.473 193.313 211.5 193.564 cv
211.527 193.815 211.541 194.118 211.541 194.473 cv
211.535 195.014 li
209.117 195.014 li
209.117 195.909 li
209.117 196.529 209.178 196.968 209.297 197.224 cv
209.418 197.48 209.643 197.608 209.973 197.608 cv
210.236 197.608 210.438 197.525 210.58 197.358 cv
210.721 197.191 210.793 196.889 210.793 196.45 cv
210.793 196.035 li
211.535 196.035 li
211.535 196.369 li
211.535 196.949 211.414 197.397 211.172 197.71 cv
210.93 198.023 210.531 198.18 209.979 198.18 cv
209.979 192.57 mo
209.658 192.57 209.434 192.682 209.309 192.904 cv
209.182 193.127 209.117 193.55 209.117 194.174 cv
209.117 194.579 li
210.793 194.579 li
210.793 194.083 li
210.793 193.874 210.787 193.7 210.777 193.562 cv
210.768 193.424 210.746 193.286 210.715 193.149 cv
210.682 193.014 210.637 192.906 210.58 192.828 cv
210.523 192.751 210.443 192.688 210.342 192.642 cv
210.24 192.594 210.119 192.57 209.979 192.57 cv
f
213.984 198.16 mo
213.576 198.16 213.295 198.048 213.139 197.823 cv
212.984 197.6 212.904 197.271 212.9 196.84 cv
212.9 192.601 li
212.178 192.601 li
212.178 192.095 li
212.9 192.095 li
212.9 190.244 li
213.66 190.244 li
213.66 192.095 li
214.656 192.095 li
214.656 192.601 li
213.66 192.601 li
213.66 196.769 li
213.66 197.072 213.695 197.28 213.766 197.394 cv
213.838 197.507 213.981 197.563 214.195 197.563 cv
214.334 197.563 214.477 197.55 214.621 197.522 cv
214.621 198.094 li
214.395 198.138 214.184 198.16 213.984 198.16 cv
f
216.342 198.175 mo
216.041 198.175 215.812 198.063 215.652 197.841 cv
215.494 197.618 215.416 197.304 215.416 196.895 cv
215.416 192.095 li
216.18 192.095 li
216.18 196.738 li
216.18 197.042 216.225 197.258 216.316 197.386 cv
216.406 197.514 216.551 197.578 216.746 197.578 cv
217.086 197.578 217.439 197.383 217.809 196.991 cv
217.809 192.095 li
218.566 192.095 li
218.566 198.084 li
217.809 198.084 li
217.809 197.421 li
217.363 197.924 216.873 198.175 216.342 198.175 cv
f
220.545 198.084 mo
219.785 198.084 li
219.785 192.095 li
220.545 192.095 li
220.545 192.92 li
220.726 192.616 220.939 192.392 221.184 192.247 cv
221.428 192.102 221.676 192.029 221.926 192.029 cv
222.057 192.034 li
222.057 192.853 li
221.949 192.811 221.826 192.788 221.691 192.788 cv
221.207 192.788 220.824 193.021 220.545 193.486 cv
220.545 198.084 li
f
225.961 198.18 mo
225.611 198.18 225.322 198.051 225.098 197.793 cv
224.871 197.535 224.758 197.216 224.758 196.835 cv
224.758 196.636 224.775 196.458 224.809 196.301 cv
224.842 196.145 224.906 195.997 224.998 195.858 cv
225.092 195.72 225.191 195.598 225.301 195.491 cv
225.412 195.386 225.566 195.273 225.77 195.152 cv
225.973 195.033 226.174 194.923 226.377 194.821 cv
226.578 194.721 226.844 194.598 227.17 194.452 cv
227.17 194.023 li
227.17 193.473 227.119 193.094 227.014 192.887 cv
226.91 192.68 226.713 192.575 226.428 192.575 cv
225.873 192.575 225.598 192.918 225.598 193.603 cv
225.598 193.82 li
224.85 193.795 li
224.85 193.697 224.85 193.636 224.853 193.612 cv
224.877 193.05 225.023 192.641 225.295 192.386 cv
225.564 192.132 225.955 192.004 226.467 192.004 cv
226.996 192.004 227.373 192.161 227.596 192.475 cv
227.818 192.788 227.93 193.291 227.93 193.982 cv
227.93 196.895 li
227.93 197.378 227.947 197.773 227.984 198.084 cv
227.312 198.084 li
227.201 197.255 li
227.109 197.518 226.955 197.737 226.738 197.914 cv
226.521 198.092 226.262 198.18 225.961 198.18 cv
227.17 194.953 mo
227.074 195.004 li
226.91 195.091 226.783 195.159 226.695 195.206 cv
226.607 195.253 226.502 195.312 226.379 195.383 cv
226.256 195.454 226.164 195.513 226.103 195.56 cv
225.893 195.732 li
225.721 195.922 li
225.613 196.127 li
225.537 196.372 li
225.523 196.458 225.516 196.553 225.516 196.657 cv
225.516 196.951 225.582 197.169 225.713 197.312 cv
225.846 197.456 226.01 197.527 226.209 197.527 cv
226.412 197.527 226.598 197.458 226.768 197.317 cv
226.94 197.178 227.072 197.012 227.17 196.819 cv
227.17 194.953 li
f
230.373 198.18 mo
229.857 198.18 229.486 197.986 229.262 197.599 cv
229.037 197.211 228.926 196.566 228.926 195.666 cv
228.926 194.559 li
228.926 194.228 228.938 193.938 228.961 193.688 cv
228.984 193.439 229.029 193.205 229.092 192.985 cv
229.156 192.767 229.24 192.588 229.346 192.449 cv
229.449 192.31 229.586 192.202 229.75 192.123 cv
229.916 192.044 230.111 192.004 230.338 192.004 cv
230.732 192.008 231.084 192.181 231.395 192.525 cv
231.395 189.697 li
232.152 189.697 li
232.152 198.084 li
231.395 198.084 li
231.395 197.659 li
231.09 198.003 230.75 198.177 230.373 198.18 cv
230.504 192.601 mo
230.184 192.601 229.967 192.735 229.853 193.003 cv
229.74 193.271 229.684 193.709 229.684 194.315 cv
229.684 195.727 li
229.684 196.381 229.742 196.854 229.857 197.144 cv
229.971 197.434 230.193 197.578 230.523 197.578 cv
230.818 197.578 231.107 197.446 231.395 197.184 cv
231.395 193.025 li
231.09 192.742 230.793 192.601 230.504 192.601 cv
f
234.156 198.084 mo
233.398 198.084 li
233.398 192.095 li
234.156 192.095 li
234.156 198.084 li
234.162 191.27 mo
233.398 191.27 li
233.398 190.239 li
234.162 190.239 li
234.162 191.27 li
f
236.19 200.057 mo
235.432 200.057 li
235.432 192.095 li
236.19 192.095 li
236.19 192.596 li
236.51 192.201 236.893 192.004 237.338 192.004 cv
237.561 192.004 237.756 192.05 237.922 192.141 cv
238.088 192.231 238.221 192.35 238.316 192.495 cv
238.412 192.64 238.49 192.82 238.549 193.036 cv
238.607 193.252 238.647 193.465 238.666 193.676 cv
238.684 193.887 238.693 194.125 238.693 194.392 cv
238.693 195.656 li
238.693 195.973 238.68 196.256 238.652 196.506 cv
238.625 196.756 238.578 196.987 238.512 197.201 cv
238.443 197.415 238.355 197.593 238.246 197.732 cv
238.137 197.872 237.998 197.982 237.834 198.061 cv
237.668 198.141 237.477 198.18 237.256 198.18 cv
236.869 198.18 236.514 197.989 236.19 197.608 cv
236.19 200.057 li
237.121 192.601 mo
236.813 192.601 236.504 192.755 236.19 193.062 cv
236.19 197.144 li
236.467 197.434 236.781 197.578 237.135 197.578 cv
237.269 197.578 237.385 197.551 237.479 197.495 cv
237.574 197.439 237.65 197.363 237.709 197.268 cv
237.768 197.171 237.814 197.04 237.848 196.875 cv
237.883 196.71 237.904 196.533 237.916 196.347 cv
237.928 196.159 237.935 195.933 237.935 195.666 cv
237.935 194.392 li
237.935 193.751 237.881 193.292 237.773 193.016 cv
237.664 192.739 237.447 192.601 237.121 192.601 cv
f
240.596 198.084 mo
239.838 198.084 li
239.838 192.095 li
240.596 192.095 li
240.596 198.084 li
240.602 191.27 mo
239.838 191.27 li
239.838 190.239 li
240.602 190.239 li
240.602 191.27 li
f
243.236 198.18 mo
242.76 198.18 242.381 198.026 242.096 197.72 cv
241.811 197.413 241.648 196.998 241.607 196.476 cv
242.244 196.283 li
242.285 196.738 242.389 197.073 242.559 197.287 cv
242.727 197.502 242.963 197.608 243.266 197.608 cv
243.529 197.608 243.736 197.531 243.889 197.376 cv
244.033 197.228 244.105 197.028 244.105 196.779 cv
244.105 196.743 li
244.096 196.346 243.854 195.948 243.377 195.55 cv
242.563 194.856 li
242.277 194.617 242.068 194.383 241.936 194.153 cv
241.809 193.932 241.744 193.672 241.744 193.375 cv
241.744 192.937 241.875 192.598 242.139 192.358 cv
242.395 192.122 242.74 192.004 243.176 192.004 cv
243.617 192.004 243.957 192.146 244.195 192.429 cv
244.432 192.712 244.564 193.095 244.592 193.577 cv
244.055 193.754 li
244.031 193.353 243.949 193.056 243.811 192.861 cv
243.67 192.668 243.469 192.57 243.205 192.57 cv
242.969 192.57 242.781 192.637 242.639 192.768 cv
242.5 192.896 242.432 193.068 242.432 193.284 cv
242.432 193.48 242.467 193.647 242.537 193.787 cv
242.609 193.927 242.738 194.078 242.928 194.24 cv
243.771 194.998 li
243.924 195.13 244.047 195.245 244.144 195.345 cv
244.24 195.444 244.342 195.567 244.449 195.714 cv
244.559 195.861 244.639 196.019 244.689 196.189 cv
244.742 196.36 244.77 196.543 244.773 196.738 cv
244.773 197.197 244.635 197.552 244.359 197.804 cv
244.082 198.055 243.709 198.18 243.236 198.18 cv
f
247.115 198.18 mo
246.842 198.18 246.607 198.14 246.412 198.059 cv
246.217 197.978 246.061 197.872 245.947 197.742 cv
245.832 197.612 245.742 197.441 245.676 197.23 cv
245.611 197.017 245.566 196.802 245.545 196.584 cv
245.523 196.367 245.512 196.109 245.512 195.812 cv
245.512 194.417 li
245.512 193.982 245.535 193.62 245.582 193.332 cv
245.629 193.044 245.713 192.797 245.832 192.591 cv
245.953 192.385 246.115 192.236 246.324 192.144 cv
246.531 192.051 246.793 192.004 247.109 192.004 cv
247.359 192.004 247.576 192.034 247.758 192.095 cv
247.939 192.156 248.088 192.239 248.199 192.346 cv
248.312 192.452 248.402 192.588 248.469 192.753 cv
248.533 192.918 248.58 193.093 248.605 193.276 cv
248.631 193.46 248.643 193.675 248.643 193.921 cv
248.643 194.204 li
247.939 194.204 li
247.939 193.921 li
247.939 193.408 247.879 193.056 247.758 192.861 cv
247.637 192.668 247.424 192.57 247.121 192.57 cv
246.775 192.57 246.549 192.692 246.437 192.937 cv
246.326 193.182 246.27 193.633 246.27 194.29 cv
246.27 195.97 li
246.27 196.583 246.33 197.01 246.449 197.249 cv
246.57 197.489 246.795 197.608 247.125 197.608 cv
247.268 197.608 247.387 197.588 247.484 197.548 cv
247.582 197.508 247.66 197.452 247.719 197.381 cv
247.779 197.31 247.824 197.212 247.859 197.088 cv
247.893 196.963 247.914 196.83 247.924 196.69 cv
247.936 196.551 247.939 196.374 247.939 196.162 cv
247.939 195.833 li
248.643 195.833 li
248.643 196.127 li
248.643 196.39 248.631 196.617 248.609 196.81 cv
248.588 197.002 248.545 197.187 248.479 197.368 cv
248.412 197.549 248.324 197.695 248.215 197.809 cv
248.105 197.921 247.959 198.012 247.773 198.079 cv
247.588 198.147 247.367 198.18 247.115 198.18 cv
f
250.494 198.084 mo
249.736 198.084 li
249.736 192.095 li
250.494 192.095 li
250.494 198.084 li
250.5 191.27 mo
249.736 191.27 li
249.736 190.239 li
250.5 190.239 li
250.5 191.27 li
f
254.885 198.084 mo
254.125 198.084 li
254.125 193.44 li
254.125 193.137 254.08 192.921 253.986 192.793 cv
253.894 192.665 253.75 192.601 253.555 192.601 cv
253.227 192.601 252.883 192.785 252.521 193.152 cv
252.521 198.084 li
251.764 198.084 li
251.764 192.095 li
252.521 192.095 li
252.521 192.718 li
252.965 192.242 253.445 192.004 253.965 192.004 cv
254.26 192.004 254.488 192.114 254.647 192.335 cv
254.805 192.557 254.885 192.871 254.885 193.278 cv
254.885 198.084 li
f
257.646 200.052 mo
257.328 200.052 257.049 200.035 256.809 200.001 cv
256.568 199.967 256.353 199.912 256.168 199.834 cv
255.982 199.757 255.842 199.651 255.744 199.518 cv
255.646 199.385 255.598 199.226 255.598 199.04 cv
255.598 198.75 255.693 198.484 255.885 198.243 cv
256.078 198.002 256.312 197.81 256.588 197.664 cv
256.406 197.613 256.25 197.54 256.119 197.444 cv
255.986 197.348 255.922 197.244 255.922 197.133 cv
255.922 196.816 256.158 196.413 256.635 195.924 cv
256.135 195.56 255.885 194.949 255.885 194.093 cv
255.885 193.803 255.92 193.534 255.986 193.286 cv
256.055 193.038 256.154 192.817 256.287 192.624 cv
256.42 192.43 256.596 192.278 256.811 192.169 cv
257.027 192.059 257.275 192.004 257.555 192.004 cv
258.158 192.004 258.588 192.252 258.844 192.748 cv
258.908 192.637 259.016 192.516 259.168 192.386 cv
259.32 192.256 259.482 192.154 259.654 192.08 cv
259.811 192.015 li
260.014 192.545 li
259.848 192.586 259.664 192.658 259.459 192.763 cv
259.256 192.867 259.111 192.969 259.027 193.066 cv
259.078 193.188 259.121 193.357 259.16 193.572 cv
259.199 193.788 259.219 193.969 259.219 194.113 cv
259.219 194.758 259.086 195.268 258.822 195.644 cv
258.557 196.019 258.139 196.207 257.564 196.207 cv
257.475 196.207 257.363 196.196 257.23 196.175 cv
257.1 196.152 257.008 196.132 256.957 196.111 cv
256.947 196.128 256.91 196.186 256.844 196.283 cv
256.779 196.381 256.729 196.456 256.697 196.509 cv
256.6 196.7 li
256.549 196.891 li
256.549 196.988 256.715 197.064 257.049 197.118 cv
257.119 197.138 257.289 197.168 257.555 197.206 cv
257.82 197.245 257.973 197.269 258.01 197.279 cv
258.502 197.367 258.875 197.52 259.127 197.74 cv
259.381 197.959 259.508 198.266 259.508 198.66 cv
259.508 199.136 259.34 199.486 259.006 199.713 cv
258.672 199.938 258.219 200.052 257.646 200.052 cv
257.008 197.766 mo
256.502 198.079 256.25 198.421 256.25 198.792 cv
256.25 199.021 256.357 199.187 256.574 199.29 cv
256.789 199.393 257.143 199.444 257.635 199.444 cv
258.027 199.444 258.336 199.382 258.564 199.255 cv
258.791 199.129 258.906 198.937 258.906 198.681 cv
258.906 198.462 258.828 198.291 258.672 198.17 cv
258.518 198.049 258.219 197.947 257.777 197.866 cv
257.008 197.766 li
257.57 192.545 mo
257.412 192.545 257.271 192.578 257.148 192.643 cv
257.025 192.71 256.926 192.793 256.853 192.894 cv
256.781 192.995 256.723 193.117 256.678 193.259 cv
256.631 193.4 256.602 193.537 256.586 193.671 cv
256.57 193.804 256.563 193.944 256.563 194.093 cv
256.563 195.139 256.896 195.661 257.564 195.661 cv
257.734 195.661 257.881 195.629 258.006 195.565 cv
258.129 195.501 258.227 195.42 258.293 195.322 cv
258.361 195.225 258.414 195.102 258.455 194.955 cv
258.496 194.809 258.521 194.671 258.533 194.541 cv
258.545 194.411 258.551 194.262 258.551 194.093 cv
258.551 193.062 258.225 192.545 257.57 192.545 cv
f
116.723 210.61 mo
116.416 210.61 116.158 210.561 115.949 210.464 cv
115.74 210.366 115.576 210.218 115.457 210.019 cv
115.336 209.82 115.252 209.587 115.201 209.318 cv
115.15 209.051 115.125 208.727 115.125 208.35 cv
115.125 206.69 li
115.125 205.929 115.242 205.362 115.479 204.991 cv
115.715 204.62 116.129 204.435 116.723 204.435 cv
117.32 204.435 117.736 204.619 117.971 204.988 cv
118.205 205.357 118.322 205.925 118.322 206.69 cv
118.322 208.35 li
118.322 208.727 118.297 209.051 118.246 209.318 cv
118.195 209.587 118.109 209.82 117.99 210.019 cv
117.871 210.218 117.707 210.366 117.498 210.464 cv
117.289 210.561 117.029 210.61 116.723 210.61 cv
116.723 205.001 mo
116.596 205.001 116.484 205.018 116.389 205.052 cv
116.295 205.086 116.217 205.141 116.156 205.216 cv
116.01 205.459 li
115.973 205.545 115.945 205.657 115.926 205.795 cv
115.908 205.934 115.896 206.064 115.891 206.188 cv
115.887 206.311 115.883 206.465 115.883 206.65 cv
115.883 208.391 li
115.883 208.576 115.887 208.73 115.891 208.853 cv
115.896 208.977 115.908 209.106 115.926 209.245 cv
115.945 209.384 115.973 209.495 116.01 209.581 cv
116.156 209.824 li
116.217 209.9 116.295 209.955 116.389 209.988 cv
116.484 210.023 116.596 210.039 116.723 210.039 cv
116.875 210.039 117.004 210.012 117.107 209.956 cv
117.213 209.9 117.295 209.83 117.354 209.746 cv
117.412 209.661 117.457 209.542 117.486 209.387 cv
117.518 209.231 117.537 209.083 117.545 208.941 cv
117.555 208.8 117.559 208.616 117.559 208.391 cv
117.559 206.65 li
117.559 206.425 117.555 206.24 117.545 206.099 cv
117.537 205.957 117.518 205.809 117.486 205.653 cv
117.457 205.499 117.412 205.379 117.354 205.295 cv
117.295 205.21 117.213 205.141 117.107 205.085 cv
117.004 205.029 116.875 205.001 116.723 205.001 cv
f
122.986 210.61 mo
122.412 210.61 122 210.434 121.746 210.08 cv
121.494 209.726 121.367 209.12 121.367 208.264 cv
121.367 206.751 li
121.367 206.168 121.428 205.705 121.547 205.363 cv
121.666 205.02 121.842 204.78 122.072 204.643 cv
122.305 204.504 122.609 204.435 122.99 204.435 cv
123.244 204.435 123.459 204.468 123.639 204.533 cv
123.816 204.6 123.965 204.692 124.084 204.814 cv
124.201 204.936 124.295 205.1 124.363 205.308 cv
124.434 205.515 124.48 205.744 124.508 205.995 cv
124.535 206.246 124.549 206.549 124.549 206.903 cv
124.543 207.444 li
122.125 207.444 li
122.125 208.34 li
122.125 208.96 122.185 209.398 122.305 209.654 cv
122.426 209.911 122.65 210.039 122.981 210.039 cv
123.244 210.039 123.445 209.956 123.588 209.789 cv
123.729 209.622 123.801 209.319 123.801 208.881 cv
123.801 208.466 li
124.543 208.466 li
124.543 208.8 li
124.543 209.38 124.422 209.827 124.18 210.141 cv
123.937 210.454 123.539 210.61 122.986 210.61 cv
122.986 205.001 mo
122.666 205.001 122.441 205.112 122.316 205.335 cv
122.189 205.558 122.125 205.981 122.125 206.604 cv
122.125 207.01 li
123.801 207.01 li
123.801 206.514 li
123.801 206.305 123.795 206.131 123.785 205.992 cv
123.775 205.855 123.754 205.717 123.723 205.58 cv
123.689 205.444 123.645 205.337 123.588 205.259 cv
123.531 205.182 123.451 205.119 123.35 205.072 cv
123.248 205.024 123.127 205.001 122.986 205.001 cv
f
126.414 210.515 mo
125.656 210.515 li
125.656 204.525 li
126.414 204.525 li
126.414 210.515 li
126.42 203.701 mo
125.656 203.701 li
125.656 202.67 li
126.42 202.67 li
126.42 203.701 li
f
128.564 210.605 mo
128.264 210.605 128.035 210.494 127.877 210.271 cv
127.719 210.049 127.639 209.734 127.639 209.326 cv
127.639 204.525 li
128.402 204.525 li
128.402 209.169 li
128.402 209.473 128.449 209.688 128.539 209.816 cv
128.631 209.944 128.773 210.009 128.969 210.009 cv
129.311 210.009 129.664 209.813 130.031 209.422 cv
130.031 204.525 li
130.791 204.525 li
130.791 210.515 li
130.031 210.515 li
130.031 209.852 li
129.586 210.354 129.098 210.605 128.564 210.605 cv
f
133.318 210.61 mo
132.844 210.61 132.463 210.457 132.178 210.15 cv
131.893 209.844 131.73 209.429 131.689 208.906 cv
132.328 208.714 li
132.367 209.169 132.473 209.504 132.641 209.718 cv
132.811 209.933 133.045 210.039 133.35 210.039 cv
133.613 210.039 133.82 209.962 133.971 209.807 cv
134.117 209.658 134.189 209.459 134.189 209.21 cv
134.189 209.174 li
134.18 208.776 133.936 208.379 133.461 207.98 cv
132.646 207.287 li
132.359 207.048 132.15 206.813 132.019 206.584 cv
131.891 206.362 131.826 206.102 131.826 205.806 cv
131.826 205.367 131.959 205.028 132.221 204.789 cv
132.478 204.553 132.824 204.435 133.258 204.435 cv
133.699 204.435 134.039 204.576 134.277 204.859 cv
134.516 205.143 134.648 205.525 134.674 206.008 cv
134.139 206.185 li
134.115 205.783 134.033 205.486 133.893 205.292 cv
133.754 205.099 133.551 205.001 133.289 205.001 cv
133.053 205.001 132.863 205.067 132.723 205.198 cv
132.584 205.327 132.516 205.499 132.516 205.715 cv
132.516 205.91 132.551 206.078 132.621 206.218 cv
132.691 206.357 132.822 206.509 133.01 206.671 cv
133.855 207.429 li
134.008 207.561 134.131 207.676 134.227 207.775 cv
134.322 207.875 134.426 207.998 134.533 208.145 cv
134.641 208.292 134.721 208.45 134.773 208.62 cv
134.826 208.791 134.854 208.974 134.857 209.169 cv
134.857 209.628 134.719 209.982 134.441 210.234 cv
134.166 210.485 133.791 210.61 133.318 210.61 cv
f
141.266 210.515 mo
140.547 210.515 li
140.547 205.811 li
140.547 205.483 140.496 205.256 140.395 205.128 cv
140.293 205 140.148 204.936 139.959 204.936 cv
139.578 204.942 139.203 205.149 138.832 205.558 cv
138.838 205.659 138.842 205.736 138.842 205.79 cv
138.842 210.515 li
138.135 210.515 li
138.135 205.811 li
138.135 205.483 138.082 205.256 137.977 205.128 cv
137.873 205 137.727 204.936 137.537 204.936 cv
137.156 204.942 136.783 205.149 136.42 205.558 cv
136.42 210.515 li
135.705 210.515 li
135.705 204.525 li
136.42 204.525 li
136.42 205.133 li
136.82 204.657 137.291 204.42 137.83 204.42 cv
138.33 204.42 138.643 204.683 138.771 205.209 cv
139.189 204.683 139.682 204.42 140.248 204.42 cv
140.545 204.42 140.789 204.526 140.979 204.741 cv
141.17 204.955 141.266 205.305 141.266 205.79 cv
141.266 210.515 li
f
143.865 210.61 mo
143.559 210.61 143.301 210.561 143.092 210.464 cv
142.883 210.366 142.717 210.218 142.598 210.019 cv
142.478 209.82 142.393 209.587 142.342 209.318 cv
142.291 209.051 142.268 208.727 142.268 208.35 cv
142.268 206.69 li
142.268 205.929 142.385 205.362 142.621 204.991 cv
142.857 204.62 143.272 204.435 143.865 204.435 cv
144.461 204.435 144.877 204.619 145.111 204.988 cv
145.346 205.357 145.463 205.925 145.463 206.69 cv
145.463 208.35 li
145.463 208.727 145.437 209.051 145.387 209.318 cv
145.338 209.587 145.252 209.82 145.133 210.019 cv
145.012 210.218 144.848 210.366 144.639 210.464 cv
144.43 210.561 144.172 210.61 143.865 210.61 cv
143.865 205.001 mo
143.736 205.001 143.625 205.018 143.531 205.052 cv
143.438 205.086 143.359 205.141 143.299 205.216 cv
143.152 205.459 li
143.115 205.545 143.086 205.657 143.068 205.795 cv
143.049 205.934 143.037 206.064 143.033 206.188 cv
143.027 206.311 143.025 206.465 143.025 206.65 cv
143.025 208.391 li
143.025 208.576 143.027 208.73 143.033 208.853 cv
143.037 208.977 143.049 209.106 143.068 209.245 cv
143.086 209.384 143.115 209.495 143.152 209.581 cv
143.299 209.824 li
143.359 209.9 143.438 209.955 143.531 209.988 cv
143.625 210.023 143.736 210.039 143.865 210.039 cv
144.018 210.039 144.145 210.012 144.25 209.956 cv
144.353 209.9 144.436 209.83 144.494 209.746 cv
144.553 209.661 144.598 209.542 144.629 209.387 cv
144.658 209.231 144.678 209.083 144.688 208.941 cv
144.695 208.8 144.699 208.616 144.699 208.391 cv
144.699 206.65 li
144.699 206.425 144.695 206.24 144.688 206.099 cv
144.678 205.957 144.658 205.809 144.629 205.653 cv
144.598 205.499 144.553 205.379 144.494 205.295 cv
144.436 205.21 144.353 205.141 144.25 205.085 cv
144.145 205.029 144.018 205.001 143.865 205.001 cv
f
147.84 210.61 mo
147.324 210.61 146.955 210.417 146.73 210.029 cv
146.506 209.642 146.395 208.997 146.395 208.097 cv
146.395 206.989 li
146.395 206.658 146.406 206.369 146.43 206.119 cv
146.453 205.869 146.496 205.636 146.561 205.416 cv
146.625 205.197 146.709 205.018 146.812 204.88 cv
146.918 204.741 147.053 204.633 147.219 204.554 cv
147.383 204.475 147.578 204.435 147.805 204.435 cv
148.199 204.439 148.551 204.611 148.861 204.956 cv
148.861 202.128 li
149.621 202.128 li
149.621 210.515 li
148.861 210.515 li
148.861 210.09 li
148.559 210.434 148.219 210.607 147.84 210.61 cv
147.973 205.031 mo
147.65 205.031 147.435 205.166 147.322 205.434 cv
147.209 205.702 147.152 206.14 147.152 206.746 cv
147.152 208.157 li
147.152 208.812 147.209 209.284 147.324 209.574 cv
147.439 209.864 147.662 210.009 147.992 210.009 cv
148.285 210.009 148.576 209.877 148.861 209.614 cv
148.861 205.456 li
148.559 205.173 148.262 205.031 147.973 205.031 cv
f
154.314 210.591 mo
153.906 210.591 153.625 210.479 153.471 210.254 cv
153.314 210.03 153.236 209.702 153.232 209.27 cv
153.232 205.031 li
152.51 205.031 li
152.51 204.525 li
153.232 204.525 li
153.232 202.675 li
153.99 202.675 li
153.99 204.525 li
154.988 204.525 li
154.988 205.031 li
153.99 205.031 li
153.99 209.199 li
153.99 209.503 154.027 209.711 154.098 209.824 cv
154.168 209.938 154.311 209.994 154.527 209.994 cv
154.666 209.994 154.807 209.98 154.953 209.953 cv
154.953 210.524 li
154.727 210.568 154.514 210.591 154.314 210.591 cv
f
157.299 210.61 mo
156.727 210.61 156.313 210.434 156.06 210.08 cv
155.807 209.726 155.682 209.12 155.682 208.264 cv
155.682 206.751 li
155.682 206.168 155.74 205.705 155.859 205.363 cv
155.98 205.02 156.156 204.78 156.387 204.643 cv
156.617 204.504 156.924 204.435 157.305 204.435 cv
157.557 204.435 157.773 204.468 157.951 204.533 cv
158.131 204.6 158.279 204.692 158.396 204.814 cv
158.516 204.936 158.609 205.1 158.678 205.308 cv
158.746 205.515 158.795 205.744 158.822 205.995 cv
158.85 206.246 158.861 206.549 158.861 206.903 cv
158.857 207.444 li
156.439 207.444 li
156.439 208.34 li
156.439 208.96 156.5 209.398 156.619 209.654 cv
156.738 209.911 156.963 210.039 157.295 210.039 cv
157.557 210.039 157.76 209.956 157.9 209.789 cv
158.043 209.622 158.113 209.319 158.113 208.881 cv
158.113 208.466 li
158.857 208.466 li
158.857 208.8 li
158.857 209.38 158.736 209.827 158.492 210.141 cv
158.25 210.454 157.852 210.61 157.299 210.61 cv
157.299 205.001 mo
156.979 205.001 156.756 205.112 156.629 205.335 cv
156.502 205.558 156.439 205.981 156.439 206.604 cv
156.439 207.01 li
158.113 207.01 li
158.113 206.514 li
158.113 206.305 158.109 206.131 158.098 205.992 cv
158.088 205.855 158.066 205.717 158.035 205.58 cv
158.004 205.444 157.959 205.337 157.9 205.259 cv
157.844 205.182 157.764 205.119 157.664 205.072 cv
157.563 205.024 157.441 205.001 157.299 205.001 cv
f
165.443 210.515 mo
164.725 210.515 li
164.725 205.811 li
164.725 205.483 164.674 205.256 164.572 205.128 cv
164.471 205 164.326 204.936 164.137 204.936 cv
163.756 204.942 163.381 205.149 163.01 205.558 cv
163.016 205.659 163.02 205.736 163.02 205.79 cv
163.02 210.515 li
162.313 210.515 li
162.313 205.811 li
162.313 205.483 162.26 205.256 162.154 205.128 cv
162.051 205 161.904 204.936 161.715 204.936 cv
161.334 204.942 160.961 205.149 160.598 205.558 cv
160.598 210.515 li
159.883 210.515 li
159.883 204.525 li
160.598 204.525 li
160.598 205.133 li
160.998 204.657 161.469 204.42 162.008 204.42 cv
162.508 204.42 162.82 204.683 162.949 205.209 cv
163.367 204.683 163.859 204.42 164.426 204.42 cv
164.723 204.42 164.967 204.526 165.156 204.741 cv
165.348 204.955 165.443 205.305 165.443 205.79 cv
165.443 210.515 li
f
167.32 212.487 mo
166.56 212.487 li
166.56 204.525 li
167.32 204.525 li
167.32 205.026 li
167.641 204.632 168.023 204.435 168.467 204.435 cv
168.689 204.435 168.885 204.48 169.053 204.571 cv
169.219 204.662 169.35 204.78 169.447 204.926 cv
169.543 205.07 169.619 205.251 169.68 205.467 cv
169.738 205.683 169.777 205.896 169.795 206.106 cv
169.814 206.317 169.822 206.556 169.822 206.822 cv
169.822 208.087 li
169.822 208.403 169.811 208.686 169.783 208.937 cv
169.756 209.186 169.709 209.418 169.641 209.632 cv
169.574 209.846 169.484 210.023 169.375 210.163 cv
169.266 210.303 169.129 210.413 168.963 210.492 cv
168.799 210.571 168.605 210.61 168.387 210.61 cv
167.998 210.61 167.643 210.42 167.32 210.039 cv
167.32 212.487 li
168.25 205.031 mo
167.943 205.031 167.633 205.186 167.32 205.492 cv
167.32 209.574 li
167.596 209.864 167.912 210.009 168.266 210.009 cv
168.4 210.009 168.516 209.982 168.609 209.926 cv
168.703 209.87 168.781 209.794 168.84 209.698 cv
168.898 209.602 168.945 209.471 168.978 209.306 cv
169.012 209.141 169.035 208.964 169.047 208.777 cv
169.059 208.59 169.065 208.363 169.065 208.097 cv
169.065 206.822 li
169.065 206.182 169.01 205.723 168.902 205.446 cv
168.795 205.17 168.578 205.031 168.25 205.031 cv
f
172.367 210.61 mo
172.06 210.61 171.803 210.561 171.594 210.464 cv
171.385 210.366 171.219 210.218 171.1 210.019 cv
170.981 209.82 170.895 209.587 170.844 209.318 cv
170.793 209.051 170.769 208.727 170.769 208.35 cv
170.769 206.69 li
170.769 205.929 170.887 205.362 171.123 204.991 cv
171.359 204.62 171.773 204.435 172.367 204.435 cv
172.963 204.435 173.379 204.619 173.613 204.988 cv
173.848 205.357 173.965 205.925 173.965 206.69 cv
173.965 208.35 li
173.965 208.727 173.939 209.051 173.889 209.318 cv
173.84 209.587 173.754 209.82 173.635 210.019 cv
173.514 210.218 173.35 210.366 173.141 210.464 cv
172.932 210.561 172.674 210.61 172.367 210.61 cv
172.367 205.001 mo
172.238 205.001 172.127 205.018 172.033 205.052 cv
171.939 205.086 171.861 205.141 171.801 205.216 cv
171.654 205.459 li
171.617 205.545 171.588 205.657 171.57 205.795 cv
171.551 205.934 171.539 206.064 171.535 206.188 cv
171.529 206.311 171.527 206.465 171.527 206.65 cv
171.527 208.391 li
171.527 208.576 171.529 208.73 171.535 208.853 cv
171.539 208.977 171.551 209.106 171.57 209.245 cv
171.588 209.384 171.617 209.495 171.654 209.581 cv
171.801 209.824 li
171.861 209.9 171.939 209.955 172.033 209.988 cv
172.127 210.023 172.238 210.039 172.367 210.039 cv
172.52 210.039 172.646 210.012 172.752 209.956 cv
172.855 209.9 172.938 209.83 172.996 209.746 cv
173.055 209.661 173.1 209.542 173.131 209.387 cv
173.16 209.231 173.18 209.083 173.189 208.941 cv
173.197 208.8 173.201 208.616 173.201 208.391 cv
173.201 206.65 li
173.201 206.425 173.197 206.24 173.189 206.099 cv
173.18 205.957 173.16 205.809 173.131 205.653 cv
173.1 205.499 173.055 205.379 172.996 205.295 cv
172.938 205.21 172.855 205.141 172.752 205.085 cv
172.646 205.029 172.52 205.001 172.367 205.001 cv
f
175.826 210.515 mo
175.068 210.515 li
175.068 204.525 li
175.826 204.525 li
175.826 205.351 li
176.008 205.047 176.221 204.822 176.467 204.678 cv
176.711 204.532 176.957 204.46 177.207 204.46 cv
177.338 204.465 li
177.338 205.284 li
177.23 205.241 177.109 205.219 176.975 205.219 cv
176.488 205.219 176.105 205.451 175.826 205.917 cv
175.826 210.515 li
f
181.051 210.515 mo
180.293 210.515 li
180.293 204.525 li
181.051 204.525 li
181.051 210.515 li
181.057 203.701 mo
180.293 203.701 li
180.293 202.67 li
181.057 202.67 li
181.057 203.701 li
f
185.441 210.515 mo
184.684 210.515 li
184.684 205.871 li
184.684 205.567 184.637 205.351 184.545 205.224 cv
184.451 205.096 184.307 205.031 184.111 205.031 cv
183.785 205.031 183.441 205.216 183.08 205.583 cv
183.08 210.515 li
182.32 210.515 li
182.32 204.525 li
183.08 204.525 li
183.08 205.148 li
183.521 204.673 184.002 204.435 184.522 204.435 cv
184.818 204.435 185.045 204.545 185.205 204.766 cv
185.363 204.987 185.441 205.302 185.441 205.709 cv
185.441 210.515 li
f
188.051 210.61 mo
187.779 210.61 187.545 210.57 187.348 210.489 cv
187.152 210.408 186.998 210.303 186.883 210.173 cv
186.769 210.043 186.678 209.872 186.613 209.66 cv
186.547 209.447 186.504 209.232 186.48 209.015 cv
186.459 208.798 186.449 208.54 186.449 208.243 cv
186.449 206.848 li
186.449 206.412 186.473 206.051 186.52 205.763 cv
186.566 205.475 186.65 205.228 186.769 205.021 cv
186.889 204.815 187.053 204.667 187.26 204.574 cv
187.467 204.482 187.73 204.435 188.047 204.435 cv
188.297 204.435 188.512 204.465 188.693 204.525 cv
188.877 204.587 189.023 204.67 189.137 204.776 cv
189.25 204.883 189.34 205.018 189.404 205.184 cv
189.471 205.349 189.516 205.523 189.541 205.707 cv
189.566 205.891 189.58 206.105 189.58 206.352 cv
189.58 206.635 li
188.877 206.635 li
188.877 206.352 li
188.877 205.839 188.816 205.486 188.693 205.292 cv
188.572 205.099 188.359 205.001 188.057 205.001 cv
187.713 205.001 187.484 205.123 187.373 205.368 cv
187.262 205.612 187.207 206.063 187.207 206.721 cv
187.207 208.4 li
187.207 209.014 187.268 209.44 187.387 209.68 cv
187.506 209.92 187.73 210.039 188.062 210.039 cv
188.203 210.039 188.322 210.019 188.422 209.979 cv
188.52 209.938 188.598 209.883 188.656 209.811 cv
188.715 209.741 188.762 209.643 188.795 209.519 cv
188.828 209.394 188.852 209.261 188.861 209.121 cv
188.871 208.981 188.877 208.805 188.877 208.593 cv
188.877 208.264 li
189.58 208.264 li
189.58 208.558 li
189.58 208.82 189.568 209.048 189.547 209.24 cv
189.523 209.433 189.48 209.618 189.414 209.799 cv
189.35 209.98 189.262 210.126 189.152 210.239 cv
189.043 210.352 188.895 210.442 188.709 210.51 cv
188.523 210.577 188.305 210.61 188.051 210.61 cv
f
191.43 210.515 mo
190.672 210.515 li
190.672 204.525 li
191.43 204.525 li
191.43 210.515 li
191.436 203.701 mo
190.672 203.701 li
190.672 202.67 li
191.436 202.67 li
191.436 203.701 li
f
194.035 210.61 mo
193.519 210.61 193.15 210.417 192.926 210.029 cv
192.701 209.642 192.59 208.997 192.59 208.097 cv
192.59 206.989 li
192.59 206.658 192.602 206.369 192.625 206.119 cv
192.648 205.869 192.691 205.636 192.756 205.416 cv
192.82 205.197 192.904 205.018 193.008 204.88 cv
193.113 204.741 193.248 204.633 193.414 204.554 cv
193.578 204.475 193.773 204.435 194 204.435 cv
194.395 204.439 194.746 204.611 195.057 204.956 cv
195.057 202.128 li
195.816 202.128 li
195.816 210.515 li
195.057 210.515 li
195.057 210.09 li
194.754 210.434 194.414 210.607 194.035 210.61 cv
194.168 205.031 mo
193.846 205.031 193.631 205.166 193.518 205.434 cv
193.404 205.702 193.348 206.14 193.348 206.746 cv
193.348 208.157 li
193.348 208.812 193.404 209.284 193.519 209.574 cv
193.635 209.864 193.857 210.009 194.187 210.009 cv
194.48 210.009 194.771 209.877 195.057 209.614 cv
195.057 205.456 li
194.754 205.173 194.457 205.031 194.168 205.031 cv
f
197.818 210.515 mo
197.061 210.515 li
197.061 204.525 li
197.818 204.525 li
197.818 210.515 li
197.824 203.701 mo
197.061 203.701 li
197.061 202.67 li
197.824 202.67 li
197.824 203.701 li
f
200.424 210.61 mo
199.908 210.61 199.539 210.417 199.314 210.029 cv
199.09 209.642 198.978 208.997 198.978 208.097 cv
198.978 206.989 li
198.978 206.658 198.99 206.369 199.014 206.119 cv
199.037 205.869 199.08 205.636 199.144 205.416 cv
199.209 205.197 199.293 205.018 199.396 204.88 cv
199.502 204.741 199.637 204.633 199.803 204.554 cv
199.967 204.475 200.162 204.435 200.389 204.435 cv
200.783 204.439 201.135 204.611 201.445 204.956 cv
201.445 202.128 li
202.205 202.128 li
202.205 210.515 li
201.445 210.515 li
201.445 210.09 li
201.143 210.434 200.803 210.607 200.424 210.61 cv
200.557 205.031 mo
200.234 205.031 200.02 205.166 199.906 205.434 cv
199.793 205.702 199.736 206.14 199.736 206.746 cv
199.736 208.157 li
199.736 208.812 199.793 209.284 199.908 209.574 cv
200.023 209.864 200.246 210.009 200.576 210.009 cv
200.869 210.009 201.16 209.877 201.445 209.614 cv
201.445 205.456 li
201.143 205.173 200.846 205.031 200.557 205.031 cv
f
204.244 210.605 mo
203.943 210.605 203.715 210.494 203.555 210.271 cv
203.396 210.049 203.318 209.734 203.318 209.326 cv
203.318 204.525 li
204.082 204.525 li
204.082 209.169 li
204.082 209.473 204.127 209.688 204.219 209.816 cv
204.309 209.944 204.453 210.009 204.648 210.009 cv
204.988 210.009 205.342 209.813 205.711 209.422 cv
205.711 204.525 li
206.469 204.525 li
206.469 210.515 li
205.711 210.515 li
205.711 209.852 li
205.266 210.354 204.775 210.605 204.244 210.605 cv
f
210.748 210.515 mo
209.988 210.515 li
209.988 205.871 li
209.988 205.567 209.943 205.351 209.85 205.224 cv
209.758 205.096 209.613 205.031 209.418 205.031 cv
209.09 205.031 208.746 205.216 208.385 205.583 cv
208.385 210.515 li
207.627 210.515 li
207.627 204.525 li
208.385 204.525 li
208.385 205.148 li
208.828 204.673 209.309 204.435 209.828 204.435 cv
210.123 204.435 210.352 204.545 210.51 204.766 cv
210.668 204.987 210.748 205.302 210.748 205.709 cv
210.748 210.515 li
f
213.287 210.591 mo
212.879 210.591 212.598 210.479 212.441 210.254 cv
212.287 210.03 212.207 209.702 212.203 209.27 cv
212.203 205.031 li
211.48 205.031 li
211.48 204.525 li
212.203 204.525 li
212.203 202.675 li
212.963 202.675 li
212.963 204.525 li
213.959 204.525 li
213.959 205.031 li
212.963 205.031 li
212.963 209.199 li
212.963 209.503 212.998 209.711 213.068 209.824 cv
213.141 209.938 213.283 209.994 213.498 209.994 cv
213.637 209.994 213.779 209.98 213.924 209.953 cv
213.924 210.524 li
213.697 210.568 213.486 210.591 213.287 210.591 cv
f
82.4199 223.036 mo
82.1191 223.036 81.8906 222.925 81.7325 222.702 cv
81.5741 222.48 81.4941 222.165 81.4941 221.757 cv
81.4941 216.956 li
82.2579 216.956 li
82.2579 221.6 li
82.2579 221.903 82.3047 222.119 82.3946 222.247 cv
82.4863 222.375 82.6289 222.439 82.8243 222.439 cv
83.166 222.439 83.5196 222.244 83.8867 221.853 cv
83.8867 216.956 li
84.6464 216.956 li
84.6464 222.945 li
83.8867 222.945 li
83.8867 222.282 li
83.4415 222.785 82.9532 223.036 82.4199 223.036 cv
f
87.2247 223.021 mo
86.8164 223.021 86.5352 222.909 86.3808 222.685 cv
86.2246 222.461 86.1465 222.133 86.1426 221.701 cv
86.1426 217.462 li
85.42 217.462 li
85.42 216.956 li
86.1426 216.956 li
86.1426 215.105 li
86.9004 215.105 li
86.9004 216.956 li
87.8985 216.956 li
87.8985 217.462 li
86.9004 217.462 li
86.9004 221.63 li
86.9004 221.934 86.9375 222.142 87.0078 222.255 cv
87.0781 222.368 87.2207 222.425 87.4375 222.425 cv
87.5761 222.425 87.7167 222.411 87.8633 222.384 cv
87.8633 222.955 li
87.6367 222.999 87.4238 223.021 87.2247 223.021 cv
f
91.6856 222.945 mo
90.9219 222.945 li
90.9219 214.559 li
91.6856 214.559 li
91.6856 222.945 li
f
93.9473 223.041 mo
93.5957 223.041 93.3087 222.912 93.082 222.654 cv
92.8555 222.396 92.7442 222.077 92.7442 221.696 cv
92.7442 221.497 92.7598 221.319 92.793 221.162 cv
92.8282 221.006 92.8906 220.858 92.9844 220.72 cv
93.0761 220.581 93.1777 220.459 93.2872 220.352 cv
93.3965 220.247 93.5527 220.134 93.7539 220.014 cv
93.9571 219.895 94.1602 219.784 94.3613 219.683 cv
94.5645 219.582 94.8281 219.459 95.1563 219.314 cv
95.1563 218.884 li
95.1563 218.334 95.1034 217.955 95 217.748 cv
94.8945 217.541 94.6992 217.437 94.4121 217.437 cv
93.8593 217.437 93.582 217.779 93.582 218.464 cv
93.582 218.682 li
92.834 218.656 li
92.834 218.559 92.836 218.497 92.8399 218.474 cv
92.8633 217.911 93.0098 217.502 93.2792 217.247 cv
93.5488 216.993 93.9395 216.865 94.4531 216.865 cv
94.9824 216.865 95.3574 217.022 95.58 217.336 cv
95.8028 217.649 95.9141 218.152 95.9141 218.843 cv
95.9141 221.757 li
95.9141 222.239 95.9336 222.635 95.9707 222.945 cv
95.2969 222.945 li
95.1856 222.116 li
95.0956 222.379 94.9414 222.599 94.7227 222.775 cv
94.5058 222.953 94.248 223.041 93.9473 223.041 cv
95.1563 219.814 mo
95.0605 219.865 li
94.8945 219.952 94.7676 220.021 94.6797 220.067 cv
94.5919 220.114 94.4882 220.174 94.3652 220.244 cv
94.2402 220.315 94.1484 220.374 94.0879 220.421 cv
93.8788 220.594 li
93.707 220.783 li
93.5976 220.988 li
93.5215 221.233 li
93.5078 221.319 93.502 221.414 93.502 221.519 cv
93.502 221.812 93.5684 222.03 93.6992 222.174 cv
93.83 222.317 93.9961 222.389 94.1953 222.389 cv
94.3964 222.389 94.584 222.319 94.7539 222.179 cv
94.9238 222.039 95.0585 221.873 95.1563 221.681 cv
95.1563 219.814 li
f
98.8594 223.041 mo
98.4649 223.041 98.1074 222.851 97.791 222.47 cv
97.791 222.945 li
97.0333 222.945 li
97.0333 214.559 li
97.791 214.559 li
97.791 217.452 li
98.1074 217.061 98.4902 216.865 98.9336 216.865 cv
99.1562 216.865 99.3515 216.911 99.5196 217.002 cv
99.6856 217.093 99.8164 217.211 99.914 217.356 cv
100.01 217.501 100.086 217.682 100.147 217.897 cv
100.205 218.113 100.244 218.326 100.262 218.537 cv
100.281 218.748 100.289 218.986 100.289 219.253 cv
100.289 220.518 li
100.289 220.834 100.277 221.117 100.25 221.367 cv
100.223 221.617 100.176 221.849 100.107 222.063 cv
100.041 222.276 99.9531 222.454 99.8457 222.594 cv
99.7363 222.733 99.5996 222.844 99.4355 222.923 cv
99.2695 223.002 99.0781 223.041 98.8594 223.041 cv
98.7226 217.462 mo
98.416 217.462 98.1054 217.616 97.791 217.923 cv
97.791 222.005 li
98.0683 222.295 98.3809 222.439 98.7324 222.439 cv
99.0527 222.439 99.2656 222.29 99.371 221.992 cv
99.4786 221.693 99.5313 221.205 99.5313 220.527 cv
99.5313 219.253 li
99.5313 218.612 99.4786 218.153 99.371 217.877 cv
99.2656 217.601 99.0488 217.462 98.7226 217.462 cv
f
102.818 223.041 mo
102.512 223.041 102.254 222.992 102.045 222.895 cv
101.836 222.797 101.672 222.648 101.553 222.449 cv
101.432 222.251 101.348 222.018 101.297 221.749 cv
101.246 221.481 101.221 221.158 101.221 220.78 cv
101.221 219.121 li
101.221 218.359 101.338 217.793 101.574 217.422 cv
101.81 217.051 102.225 216.865 102.818 216.865 cv
103.416 216.865 103.832 217.05 104.066 217.419 cv
104.301 217.788 104.418 218.356 104.418 219.121 cv
104.418 220.78 li
104.418 221.158 104.393 221.481 104.342 221.749 cv
104.291 222.018 104.205 222.251 104.086 222.449 cv
103.967 222.648 103.803 222.797 103.594 222.895 cv
103.385 222.992 103.125 223.041 102.818 223.041 cv
102.818 217.432 mo
102.691 217.432 102.58 217.449 102.484 217.482 cv
102.391 217.517 102.312 217.571 102.252 217.646 cv
102.105 217.89 li
102.068 217.976 102.041 218.088 102.022 218.226 cv
102.004 218.364 101.992 218.495 101.986 218.618 cv
101.982 218.741 101.979 218.896 101.979 219.081 cv
101.979 220.821 li
101.979 221.007 101.982 221.161 101.986 221.284 cv
101.992 221.407 102.004 221.537 102.022 221.676 cv
102.041 221.814 102.068 221.926 102.105 222.012 cv
102.252 222.255 li
102.312 222.331 102.391 222.386 102.484 222.419 cv
102.58 222.453 102.691 222.47 102.818 222.47 cv
102.971 222.47 103.1 222.442 103.203 222.387 cv
103.309 222.331 103.391 222.261 103.449 222.177 cv
103.508 222.092 103.553 221.973 103.582 221.817 cv
103.613 221.662 103.633 221.514 103.641 221.372 cv
103.65 221.23 103.654 221.047 103.654 220.821 cv
103.654 219.081 li
103.654 218.855 103.65 218.671 103.641 218.529 cv
103.633 218.388 103.613 218.239 103.582 218.084 cv
103.553 217.93 103.508 217.81 103.449 217.726 cv
103.391 217.641 103.309 217.571 103.203 217.516 cv
103.1 217.46 102.971 217.432 102.818 217.432 cv
f
106.279 222.945 mo
105.521 222.945 li
105.521 216.956 li
106.279 216.956 li
106.279 217.781 li
106.461 217.478 106.674 217.253 106.92 217.108 cv
107.164 216.963 107.41 216.891 107.66 216.891 cv
107.791 216.896 li
107.791 217.715 li
107.684 217.672 107.563 217.649 107.428 217.649 cv
106.941 217.649 106.559 217.882 106.279 218.348 cv
106.279 222.945 li
f
110.053 223.041 mo
109.48 223.041 109.066 222.864 108.814 222.511 cv
108.56 222.156 108.436 221.551 108.436 220.694 cv
108.436 219.182 li
108.436 218.599 108.494 218.136 108.613 217.794 cv
108.734 217.451 108.91 217.211 109.141 217.073 cv
109.371 216.935 109.678 216.865 110.059 216.865 cv
110.311 216.865 110.527 216.898 110.705 216.964 cv
110.885 217.03 111.033 217.123 111.15 217.245 cv
111.27 217.366 111.363 217.53 111.432 217.738 cv
111.5 217.945 111.549 218.175 111.576 218.426 cv
111.603 218.677 111.615 218.979 111.615 219.334 cv
111.611 219.875 li
109.193 219.875 li
109.193 220.77 li
109.193 221.391 109.254 221.829 109.373 222.085 cv
109.492 222.342 109.717 222.47 110.049 222.47 cv
110.311 222.47 110.514 222.387 110.654 222.22 cv
110.797 222.053 110.867 221.75 110.867 221.312 cv
110.867 220.897 li
111.611 220.897 li
111.611 221.23 li
111.611 221.811 111.49 222.258 111.246 222.571 cv
111.004 222.885 110.606 223.041 110.053 223.041 cv
110.053 217.432 mo
109.732 217.432 109.51 217.543 109.383 217.766 cv
109.256 217.988 109.193 218.411 109.193 219.035 cv
109.193 219.44 li
110.867 219.44 li
110.867 218.944 li
110.867 218.735 110.863 218.561 110.852 218.423 cv
110.842 218.285 110.82 218.147 110.789 218.011 cv
110.758 217.875 110.713 217.768 110.654 217.69 cv
110.598 217.612 110.518 217.55 110.418 217.503 cv
110.316 217.455 110.195 217.432 110.053 217.432 cv
f
0 0 mo
0 86.5713 li
7.89551 92.6133 18.4355 94.2598 27.9053 90.6885 cv
75.7559 72.6406 li
83.5723 69.6924 89.7422 63.5225 92.6904 55.7051 cv
110.738 7.85449 li
111.705 5.29102 112.28 2.64746 112.5 0 cv
0 0 li
cp
.147219 .0154116 0 0 cmyk
f
600 301.404 mo
533.847 342.424 li
526.469 346.981 524.182 356.656 528.738 364.034 cv
550.951 400 li
600 400 li
600 301.404 li
cp
f
84.1455 329.555 mo
82.376 323.196 77.3477 318.265 70.9561 316.618 cv
31.9551 306.572 li
25.5635 304.926 18.7783 306.814 14.1572 311.526 cv
0 325.96 li
0 400 li
76.8457 400 li
90.3369 386.244 li
94.959 381.532 96.7158 374.712 94.9463 368.354 cv
84.1455 329.555 li
cp
.657221 .328313 0 0 cmyk
f
518.639 257.902 mo
517.854 257.902 517.071 257.693 516.374 257.275 cv
502.794 249.134 li
503.616 247.763 li
517.196 255.904 li
518.074 256.433 519.172 256.438 520.054 255.92 cv
542.156 242.993 li
542.51 242.787 542.716 242.421 542.708 242.013 cv
542.701 241.605 542.481 241.248 542.123 241.055 cv
512.666 225.281 li
513.42 223.871 li
542.877 239.646 li
543.754 240.115 544.288 240.99 544.307 241.984 cv
544.324 242.979 543.821 243.872 542.962 244.373 cv
520.861 257.299 li
520.175 257.701 519.406 257.902 518.639 257.902 cv
cp
.280034 .073518 .0233463 0 cmyk
f
463.711 380.201 mo
462.752 380.201 461.794 379.962 460.931 379.481 cv
406.735 349.313 li
405.937 348.869 405.458 348.058 405.454 347.144 cv
405.451 346.229 405.925 345.414 406.721 344.964 cv
431.248 331.132 li
431.636 330.912 431.679 330.543 431.679 330.394 cv
431.68 330.245 431.639 329.875 431.253 329.652 cv
403.965 313.983 li
403.215 313.552 402.756 312.777 402.737 311.912 cv
402.719 311.047 403.145 310.254 403.876 309.79 cv
415.023 302.727 li
415.879 304.076 li
404.731 311.141 li
404.365 311.373 404.333 311.733 404.336 311.878 cv
404.339 312.022 404.387 312.381 404.762 312.598 cv
432.05 328.267 li
432.822 328.712 433.281 329.509 433.277 330.399 cv
433.274 331.291 432.81 332.085 432.034 332.523 cv
407.507 346.355 li
407.096 346.588 407.053 346.98 407.053 347.138 cv
407.054 347.296 407.1 347.687 407.513 347.917 cv
461.708 378.085 li
462.997 378.803 464.583 378.773 465.848 378.009 cv
486.455 365.34 li
486.618 365.239 486.643 365.087 486.643 365.005 cv
486.642 364.938 486.623 364.773 486.454 364.67 cv
471.539 355.604 li
472.369 354.238 li
487.284 363.305 li
487.882 363.668 488.239 364.302 488.24 365.001 cv
488.242 365.699 487.888 366.335 487.293 366.701 cv
466.681 379.373 li
465.771 379.925 464.74 380.201 463.711 380.201 cv
cp
f
487.117 258.725 mo
460.989 243.64 li
459.386 242.713 459.587 241.096 461.438 240.027 cv
486.668 225.461 li
488.52 224.392 491.32 224.275 492.924 225.202 cv
519.053 240.287 li
520.656 241.213 520.455 242.83 518.604 243.899 cv
493.374 258.465 li
491.522 259.534 488.722 259.65 487.117 258.725 cv
cp
f
527.72 228.797 mo
527.72 228.797 li
527.72 217.508 li
502.406 217.493 li
493.656 212.441 li
491.648 211.282 488.141 211.428 485.821 212.767 cv
477.658 217.479 li
452.321 217.466 li
452.321 229.076 li
452.265 229.86 452.702 230.618 453.667 231.175 cv
486.386 250.065 li
488.394 251.225 491.901 251.079 494.22 249.74 cv
525.813 231.501 li
527.15 230.729 527.795 229.729 527.72 228.797 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
490.021 211.665 mo
488.552 211.701 487.026 212.071 485.821 212.767 cv
477.658 217.479 li
452.321 217.466 li
452.321 229.076 li
452.265 229.86 452.702 230.618 453.667 231.175 cv
486.386 250.065 li
487.351 250.622 488.662 250.875 490.021 250.842 cv
490.021 211.665 li
cp
f
455.188 217.467 mo
452.321 217.466 li
452.321 229.076 li
452.265 229.86 452.702 230.618 453.667 231.175 cv
455.188 232.054 li
455.188 217.467 li
cp
.657221 .328313 0 0 cmyk
f
486.89 250.313 mo
488.621 251.054 491.127 251.013 493.152 250.24 cv
493.152 237.058 li
486.89 237.058 li
486.89 250.313 li
cp
f
486.386 238.497 mo
453.667 219.606 li
451.658 218.447 451.91 216.422 454.229 215.083 cv
485.821 196.844 li
488.141 195.505 491.648 195.359 493.656 196.519 cv
526.375 215.409 li
528.383 216.568 528.131 218.594 525.813 219.932 cv
494.22 238.172 li
491.901 239.511 488.394 239.656 486.386 238.497 cv
cp
.147219 .0154116 0 0 cmyk
f
486.975 235.097 mo
459.556 219.267 li
457.873 218.295 458.084 216.598 460.027 215.477 cv
486.502 200.19 li
488.445 199.069 491.385 198.947 493.067 199.919 cv
520.485 215.749 li
522.169 216.721 521.958 218.417 520.015 219.539 cv
493.539 234.824 li
491.597 235.946 488.657 236.068 486.975 235.097 cv
cp
.657221 .328313 0 0 cmyk
f
515.686 231.776 mo
515.686 232.619 515.094 233.644 514.364 234.065 cv
513.635 234.486 513.043 234.145 513.043 233.302 cv
513.043 232.459 513.635 231.435 514.364 231.014 cv
515.094 230.592 515.686 230.934 515.686 231.776 cv
cp
.147219 .0154116 0 0 cmyk
f
519.938 229.321 mo
519.938 230.164 519.346 231.188 518.616 231.61 cv
517.886 232.031 517.295 231.69 517.295 230.848 cv
517.295 230.005 517.886 228.979 518.616 228.559 cv
519.346 228.137 519.938 228.479 519.938 229.321 cv
cp
f
524.189 226.866 mo
524.189 227.709 523.598 228.734 522.868 229.155 cv
522.138 229.577 521.547 229.235 521.547 228.393 cv
521.547 227.55 522.138 226.525 522.868 226.104 cv
523.598 225.683 524.189 226.023 524.189 226.866 cv
cp
f
527.72 210.756 mo
527.72 210.756 li
527.72 199.467 li
502.406 199.452 li
493.656 194.4 li
491.648 193.241 488.141 193.387 485.821 194.726 cv
477.658 199.438 li
452.321 199.425 li
452.321 211.035 li
452.265 211.819 452.702 212.577 453.667 213.134 cv
486.386 232.024 li
488.394 233.184 491.901 233.038 494.22 231.699 cv
525.813 213.46 li
527.15 212.688 527.795 211.688 527.72 210.756 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
490.021 193.624 mo
488.552 193.66 487.026 194.03 485.821 194.726 cv
477.658 199.438 li
452.321 199.425 li
452.321 211.035 li
452.265 211.819 452.702 212.577 453.667 213.134 cv
486.386 232.024 li
487.351 232.581 488.662 232.834 490.021 232.801 cv
490.021 193.624 li
cp
f
455.188 199.426 mo
452.321 199.425 li
452.321 211.035 li
452.265 211.819 452.702 212.577 453.667 213.134 cv
455.188 214.013 li
455.188 199.426 li
cp
.657221 .328313 0 0 cmyk
f
486.89 232.271 mo
488.621 233.013 491.127 232.972 493.152 232.199 cv
493.152 219.017 li
486.89 219.017 li
486.89 232.271 li
cp
f
486.386 220.456 mo
453.667 201.565 li
451.658 200.406 451.91 198.381 454.229 197.042 cv
485.821 178.803 li
488.141 177.464 491.648 177.318 493.656 178.478 cv
526.375 197.368 li
528.383 198.527 528.131 200.553 525.813 201.891 cv
494.22 220.131 li
491.901 221.47 488.394 221.615 486.386 220.456 cv
cp
.147219 .0154116 0 0 cmyk
f
486.975 217.056 mo
459.556 201.226 li
457.873 200.254 458.084 198.557 460.027 197.436 cv
486.502 182.149 li
488.445 181.028 491.385 180.906 493.067 181.878 cv
520.485 197.708 li
522.169 198.68 521.958 200.377 520.015 201.498 cv
493.539 216.783 li
491.597 217.905 488.657 218.027 486.975 217.056 cv
cp
.657221 .328313 0 0 cmyk
f
515.686 213.735 mo
515.686 214.578 515.094 215.603 514.364 216.024 cv
513.635 216.445 513.043 216.104 513.043 215.261 cv
513.043 214.419 513.635 213.394 514.364 212.973 cv
515.094 212.551 515.686 212.893 515.686 213.735 cv
cp
.147219 .0154116 0 0 cmyk
f
519.938 211.28 mo
519.938 212.123 519.346 213.147 518.616 213.569 cv
517.886 213.99 517.295 213.649 517.295 212.807 cv
517.295 211.964 517.886 210.938 518.616 210.518 cv
519.346 210.096 519.938 210.438 519.938 211.28 cv
cp
f
524.189 208.825 mo
524.189 209.668 523.598 210.693 522.868 211.114 cv
522.138 211.536 521.547 211.194 521.547 210.352 cv
521.547 209.509 522.138 208.484 522.868 208.063 cv
523.598 207.642 524.189 207.982 524.189 208.825 cv
cp
f
527.72 192.715 mo
527.72 192.715 li
527.72 181.426 li
502.406 181.412 li
493.656 176.36 li
491.648 175.2 488.141 175.346 485.821 176.685 cv
477.658 181.397 li
452.321 181.384 li
452.321 192.994 li
452.265 193.779 452.702 194.536 453.667 195.093 cv
486.386 213.983 li
488.394 215.143 491.901 214.997 494.22 213.658 cv
525.813 195.419 li
527.15 194.646 527.795 193.646 527.72 192.715 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
490.021 175.583 mo
488.552 175.619 487.026 175.989 485.821 176.685 cv
477.658 181.397 li
452.321 181.384 li
452.321 192.994 li
452.265 193.779 452.702 194.536 453.667 195.093 cv
486.386 213.983 li
487.351 214.54 488.662 214.793 490.021 214.76 cv
490.021 175.583 li
cp
f
455.188 181.386 mo
452.321 181.384 li
452.321 192.994 li
452.265 193.779 452.702 194.536 453.667 195.093 cv
455.188 195.972 li
455.188 181.386 li
cp
.657221 .328313 0 0 cmyk
f
486.89 214.23 mo
488.621 214.973 491.127 214.931 493.152 214.158 cv
493.152 200.976 li
486.89 200.976 li
486.89 214.23 li
cp
f
486.386 202.415 mo
453.667 183.524 li
451.658 182.365 451.91 180.34 454.229 179.002 cv
485.821 160.762 li
488.141 159.423 491.648 159.277 493.656 160.437 cv
526.375 179.327 li
528.383 180.486 528.131 182.512 525.813 183.85 cv
494.22 202.09 li
491.901 203.429 488.394 203.574 486.386 202.415 cv
cp
.147219 .0154116 0 0 cmyk
f
525.813 181.628 mo
494.22 199.868 li
491.901 201.207 488.394 201.353 486.386 200.193 cv
453.667 181.303 li
453.219 181.044 452.89 180.741 452.665 180.414 cv
451.975 181.524 452.288 182.729 453.667 183.524 cv
486.386 202.415 li
488.394 203.574 491.901 203.429 494.22 202.09 cv
525.813 183.85 li
527.614 182.81 528.161 181.356 527.377 180.216 cv
527.062 180.723 526.539 181.209 525.813 181.628 cv
cp
0 0 0 0 cmyk
f
515.686 195.694 mo
515.686 196.537 515.094 197.562 514.364 197.983 cv
513.635 198.404 513.043 198.063 513.043 197.221 cv
513.043 196.378 513.635 195.353 514.364 194.932 cv
515.094 194.51 515.686 194.852 515.686 195.694 cv
cp
.147219 .0154116 0 0 cmyk
f
519.938 193.239 mo
519.938 194.082 519.346 195.107 518.616 195.528 cv
517.886 195.95 517.295 195.608 517.295 194.766 cv
517.295 193.923 517.886 192.897 518.616 192.477 cv
519.346 192.055 519.938 192.396 519.938 193.239 cv
cp
f
524.189 190.784 mo
524.189 191.627 523.598 192.652 522.868 193.073 cv
522.138 193.495 521.547 193.153 521.547 192.311 cv
521.547 191.468 522.138 190.443 522.868 190.021 cv
523.598 189.601 524.189 189.942 524.189 190.784 cv
cp
f
488.32 190.703 mo
473.009 181.863 li
472.069 181.321 472.188 180.373 473.272 179.747 cv
488.057 171.212 li
489.142 170.585 490.782 170.517 491.723 171.06 cv
507.033 179.899 li
507.973 180.441 507.854 181.39 506.77 182.016 cv
491.986 190.551 li
490.901 191.178 489.26 191.246 488.32 190.703 cv
cp
.657221 .328313 0 0 cmyk
f
489.786 183.302 mo
487.668 182.079 li
487.537 182.004 487.554 181.873 487.704 181.786 cv
489.749 180.605 li
489.899 180.519 490.127 180.509 490.257 180.584 cv
492.375 181.807 li
492.505 181.882 492.488 182.014 492.339 182.1 cv
490.293 183.281 li
490.143 183.367 489.916 183.377 489.786 183.302 cv
cp
.147219 .0154116 0 0 cmyk
f
473.01 181.863 mo
473.053 181.889 li
473.272 181.737 li
488.057 173.202 li
489.142 172.575 490.782 172.508 491.723 173.05 cv
506.99 181.864 li
507.855 181.244 507.901 180.4 507.033 179.899 cv
491.723 171.06 li
490.782 170.517 489.142 170.585 488.057 171.212 cv
473.272 179.747 li
472.188 180.373 472.069 181.321 473.01 181.863 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
428.262 312.857 mo
371.791 280.655 li
369.726 279.463 369.984 277.381 372.369 276.004 cv
404.861 257.244 li
407.246 255.867 410.853 255.718 412.919 256.91 cv
469.391 289.11 li
471.456 290.303 471.196 292.386 468.812 293.763 cv
436.319 312.522 li
433.935 313.898 430.327 314.049 428.262 312.857 cv
.280034 .073518 .0233463 0 cmyk
f
474.426 278.271 mo
474.426 146.436 li
422.015 132.718 li
412.36 127.144 li
410.146 125.865 406.275 126.025 403.717 127.502 cv
394.71 132.702 li
366.756 132.687 li
375.033 259.956 li
374.97 260.821 375.453 261.657 376.517 262.271 cv
428.82 301.736 li
431.036 303.016 434.906 302.855 437.464 301.378 cv
472.32 281.254 li
473.797 280.402 474.509 279.299 474.426 278.271 cv
.827268 .57586 .071809 .00112917 cmyk
f
408.351 126.287 mo
406.729 126.326 405.046 126.735 403.717 127.502 cv
394.71 132.702 li
366.756 132.687 li
366.756 264.877 li
366.692 265.743 367.175 266.578 368.239 267.193 cv
428.82 301.736 li
429.885 302.352 431.332 302.63 432.832 302.594 cv
433.456 169.577 li
408.351 126.287 li
.147219 .0154116 0 0 cmyk
f
429.377 302.009 mo
431.287 302.828 434.052 302.782 436.286 301.93 cv
436.286 168.005 li
429.377 168.005 li
429.377 302.009 li
cp
.657221 .328313 0 0 cmyk
f
428.82 169.593 mo
368.239 135.049 li
366.024 133.77 366.302 131.535 368.86 130.059 cv
403.717 109.935 li
406.275 108.457 410.146 108.297 412.36 109.576 cv
472.941 144.119 li
475.157 145.398 474.879 147.633 472.32 149.11 cv
437.464 169.234 li
434.906 170.711 431.036 170.872 428.82 169.593 cv
cp
.147219 .0154116 0 0 cmyk
f
472.32 146.659 mo
437.464 166.783 li
434.906 168.26 431.036 168.421 428.82 167.142 cv
368.239 132.598 li
367.746 132.313 367.383 131.979 367.135 131.617 cv
366.373 132.842 366.719 134.171 368.239 135.049 cv
428.82 169.593 li
431.036 170.872 434.906 170.711 437.464 169.234 cv
472.32 149.11 li
474.309 147.962 474.912 146.359 474.047 145.101 cv
473.699 145.659 473.122 146.196 472.32 146.659 cv
cp
.0124514 0 0 0 cmyk
f
430.534 155.593 mo
390.201 132.213 li
389.164 131.614 389.294 130.568 390.491 129.878 cv
406.803 120.46 li
407.999 119.769 409.811 119.694 410.848 120.293 cv
451.181 143.673 li
452.217 144.271 452.087 145.316 450.89 146.008 cv
434.579 155.425 li
433.382 156.116 431.57 156.191 430.534 155.593 cv
cp
1 .866484 .240818 .0951247 cmyk
f
408.76 133.263 mo
406.422 131.913 li
406.278 131.831 406.297 131.686 406.463 131.591 cv
408.719 130.287 li
408.885 130.191 409.136 130.182 409.278 130.265 cv
411.616 131.613 li
411.76 131.696 411.741 131.841 411.576 131.937 cv
409.319 133.239 li
409.153 133.335 408.903 133.346 408.76 133.263 cv
cp
.147219 .0154116 0 0 cmyk
f
416.567 137.753 mo
414.23 136.403 li
414.087 136.32 414.104 136.176 414.271 136.08 cv
416.527 134.777 li
416.693 134.682 416.943 134.671 417.087 134.754 cv
419.424 136.104 li
419.567 136.187 419.55 136.331 419.384 136.427 cv
417.127 137.729 li
416.962 137.825 416.711 137.835 416.567 137.753 cv
cp
f
424.376 142.242 mo
422.038 140.893 li
421.895 140.81 421.913 140.665 422.078 140.569 cv
424.335 139.267 li
424.501 139.171 424.752 139.161 424.895 139.243 cv
427.232 140.593 li
427.376 140.676 427.357 140.82 427.192 140.916 cv
424.936 142.219 li
424.77 142.314 424.52 142.325 424.376 142.242 cv
cp
f
432.184 146.731 mo
429.847 145.383 li
429.703 145.3 429.721 145.155 429.887 145.06 cv
432.144 143.757 li
432.309 143.661 432.56 143.65 432.703 143.733 cv
435.04 145.083 li
435.184 145.165 435.166 145.31 435 145.405 cv
432.743 146.709 li
432.578 146.805 432.327 146.814 432.184 146.731 cv
cp
f
390.201 132.213 mo
390.249 132.24 li
390.327 132.184 390.4 132.126 390.491 132.073 cv
406.803 122.656 li
408 121.965 409.811 121.89 410.848 122.488 cv
451.133 145.841 li
452.088 145.157 452.139 144.226 451.181 143.673 cv
410.848 120.293 li
409.811 119.694 408 119.769 406.803 120.46 cv
390.491 129.877 li
389.294 130.568 389.164 131.614 390.201 132.213 cv
cp
.657221 .328313 0 0 cmyk
f
444.27 195.712 mo
467.202 182.583 li
468.492 181.838 469.539 179.839 469.539 178.118 cv
469.539 169.917 li
469.539 168.196 468.492 167.406 467.202 168.15 cv
444.27 181.28 li
442.979 182.025 441.934 184.024 441.934 185.745 cv
441.934 193.946 li
441.934 195.667 442.979 196.457 444.27 195.712 cv
cp
1 .866484 .240818 .0951247 cmyk
f
468.337 167.903 mo
468.698 168.243 468.924 168.823 468.924 169.609 cv
468.924 177.811 li
468.924 179.531 467.878 181.53 466.587 182.275 cv
443.655 195.405 li
443.241 195.645 442.857 195.71 442.52 195.652 cv
442.948 196.056 443.569 196.117 444.27 195.713 cv
467.202 182.583 li
468.492 181.838 469.539 179.839 469.539 178.118 cv
469.539 169.917 li
469.539 168.749 469.051 168.025 468.337 167.903 cv
cp
0 0 0 0 cmyk
f
451.167 186.804 mo
453.271 185.589 li
453.552 185.427 453.78 184.991 453.78 184.616 cv
453.78 182.369 li
453.78 181.994 453.552 181.822 453.271 181.984 cv
451.167 183.198 li
450.886 183.361 450.658 183.797 450.658 184.172 cv
450.658 186.419 li
450.658 186.794 450.886 186.966 451.167 186.804 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
458.201 182.743 mo
460.305 181.528 li
460.586 181.366 460.814 180.93 460.814 180.555 cv
460.814 178.309 li
460.814 177.934 460.586 177.761 460.305 177.923 cv
458.201 179.138 li
457.92 179.3 457.691 179.735 457.691 180.11 cv
457.691 182.357 li
457.691 182.732 457.92 182.905 458.201 182.743 cv
cp
0 0 0 0 cmyk
f
444.27 254.973 mo
467.202 241.843 li
468.492 241.098 469.539 239.099 469.539 237.378 cv
469.539 229.178 li
469.539 227.457 468.492 226.666 467.202 227.411 cv
444.27 240.541 li
442.979 241.286 441.934 243.285 441.934 245.006 cv
441.934 253.206 li
441.934 254.927 442.979 255.718 444.27 254.973 cv
cp
1 .866484 .240818 .0951247 cmyk
f
468.337 227.164 mo
468.698 227.504 468.924 228.083 468.924 228.87 cv
468.924 237.07 li
468.924 238.791 467.878 240.79 466.587 241.535 cv
443.655 254.665 li
443.241 254.904 442.857 254.97 442.52 254.912 cv
442.948 255.316 443.569 255.377 444.27 254.973 cv
467.202 241.843 li
468.492 241.098 469.539 239.099 469.539 237.378 cv
469.539 229.178 li
469.539 228.009 469.051 227.285 468.337 227.164 cv
cp
0 0 0 0 cmyk
f
451.167 246.064 mo
453.271 244.85 li
453.552 244.688 453.78 244.251 453.78 243.876 cv
453.78 241.629 li
453.78 241.254 453.552 241.082 453.271 241.244 cv
451.167 242.459 li
450.886 242.621 450.658 243.057 450.658 243.432 cv
450.658 245.679 li
450.658 246.054 450.886 246.227 451.167 246.064 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
458.201 242.003 mo
460.305 240.788 li
460.586 240.626 460.814 240.19 460.814 239.815 cv
460.814 237.568 li
460.814 237.193 460.586 237.021 460.305 237.184 cv
458.201 238.397 li
457.92 238.561 457.691 238.996 457.691 239.371 cv
457.691 241.618 li
457.691 241.993 457.92 242.165 458.201 242.003 cv
cp
f
444.27 284.603 mo
467.202 271.473 li
468.492 270.728 469.539 268.729 469.539 267.009 cv
469.539 258.808 li
469.539 257.087 468.492 256.296 467.202 257.041 cv
444.27 270.171 li
442.979 270.916 441.934 272.915 441.934 274.636 cv
441.934 282.836 li
441.934 284.557 442.979 285.348 444.27 284.603 cv
cp
1 .866484 .240818 .0951247 cmyk
f
468.337 256.794 mo
468.698 257.134 468.924 257.714 468.924 258.5 cv
468.924 266.701 li
468.924 268.422 467.878 270.42 466.587 271.165 cv
443.655 284.295 li
443.241 284.534 442.857 284.6 442.52 284.542 cv
442.948 284.946 443.569 285.007 444.27 284.603 cv
467.202 271.473 li
468.492 270.728 469.539 268.729 469.539 267.009 cv
469.539 258.808 li
469.539 257.64 469.051 256.915 468.337 256.794 cv
cp
0 0 0 0 cmyk
f
451.167 275.694 mo
453.271 274.479 li
453.552 274.317 453.78 273.882 453.78 273.507 cv
453.78 271.26 li
453.78 270.885 453.552 270.712 453.271 270.874 cv
451.167 272.089 li
450.886 272.251 450.658 272.688 450.658 273.063 cv
450.658 275.309 li
450.658 275.685 450.886 275.856 451.167 275.694 cv
cp
f
458.201 271.633 mo
460.305 270.419 li
460.586 270.256 460.814 269.82 460.814 269.445 cv
460.814 267.198 li
460.814 266.823 460.586 266.651 460.305 266.813 cv
458.201 268.028 li
457.92 268.19 457.691 268.626 457.691 269.001 cv
457.691 271.248 li
457.691 271.623 457.92 271.796 458.201 271.633 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
444.27 225.343 mo
467.202 212.213 li
468.492 211.468 469.539 209.469 469.539 207.748 cv
469.539 199.548 li
469.539 197.827 468.492 197.036 467.202 197.781 cv
444.27 210.911 li
442.979 211.656 441.934 213.654 441.934 215.375 cv
441.934 223.576 li
441.934 225.297 442.979 226.088 444.27 225.343 cv
cp
1 .866484 .240818 .0951247 cmyk
f
468.337 197.534 mo
468.698 197.874 468.924 198.453 468.924 199.24 cv
468.924 207.44 li
468.924 209.161 467.878 211.16 466.587 211.905 cv
443.655 225.035 li
443.241 225.274 442.857 225.34 442.52 225.282 cv
442.948 225.686 443.569 225.747 444.27 225.343 cv
467.202 212.213 li
468.492 211.468 469.539 209.469 469.539 207.748 cv
469.539 199.547 li
469.539 198.379 469.051 197.655 468.337 197.534 cv
cp
0 0 0 0 cmyk
f
451.167 216.434 mo
453.271 215.22 li
453.552 215.057 453.78 214.621 453.78 214.246 cv
453.78 211.999 li
453.78 211.624 453.552 211.452 453.271 211.614 cv
451.167 212.829 li
450.886 212.991 450.658 213.427 450.658 213.802 cv
450.658 216.049 li
450.658 216.424 450.886 216.597 451.167 216.434 cv
cp
f
458.201 212.373 mo
460.305 211.158 li
460.586 210.996 460.814 210.561 460.814 210.186 cv
460.814 207.938 li
460.814 207.563 460.586 207.391 460.305 207.554 cv
458.201 208.768 li
457.92 208.93 457.691 209.366 457.691 209.741 cv
457.691 211.988 li
457.691 212.363 457.92 212.535 458.201 212.373 cv
cp
f
424.407 187.317 mo
371.501 156.772 li
370.316 156.088 369.356 154.254 369.356 152.675 cv
369.356 142.587 li
369.356 141.008 370.316 140.282 371.501 140.966 cv
424.407 171.512 li
425.592 172.195 426.552 174.029 426.552 175.608 cv
426.552 185.696 li
426.552 187.275 425.592 188.001 424.407 187.317 cv
.657221 .328313 0 0 cmyk
f
423.32 183.911 mo
423.188 183.911 423.042 183.869 422.889 183.78 cv
373.02 154.988 li
372.419 154.642 371.932 153.711 371.932 152.91 cv
371.932 145.325 li
371.932 144.729 372.202 144.372 372.588 144.372 cv
372.72 144.372 372.866 144.414 373.02 144.503 cv
422.889 173.295 li
423.489 173.642 423.977 174.572 423.977 175.374 cv
423.977 182.958 li
423.977 183.554 423.706 183.911 423.32 183.911 cv
.439979 .173587 0 0 cmyk
f
383.412 157.154 mo
375.97 152.857 li
375.387 152.521 374.914 151.617 374.914 150.839 cv
374.914 150.062 375.387 149.704 375.97 150.041 cv
383.412 154.338 li
383.996 154.674 384.469 155.578 384.469 156.355 cv
384.469 157.134 383.996 157.491 383.412 157.154 cv
cp
.147219 .0154116 0 0 cmyk
f
389.755 159.407 mo
389.755 160.186 389.208 160.501 388.535 160.111 cv
387.861 159.723 387.314 158.777 387.314 157.999 cv
387.314 157.221 387.861 156.906 388.535 157.295 cv
389.208 157.684 389.755 158.63 389.755 159.407 cv
cp
1 .866484 .240818 .0951247 cmyk
f
394.058 161.892 mo
394.058 162.67 393.512 162.985 392.838 162.597 cv
392.164 162.207 391.618 161.262 391.618 160.483 cv
391.618 159.706 392.164 159.391 392.838 159.779 cv
393.512 160.168 394.058 161.114 394.058 161.892 cv
cp
f
398.361 164.376 mo
398.361 165.154 397.814 165.47 397.141 165.081 cv
396.468 164.691 395.921 163.746 395.921 162.968 cv
395.921 162.19 396.468 161.875 397.141 162.264 cv
397.814 162.652 398.361 163.599 398.361 164.376 cv
cp
.147219 .0154116 0 0 cmyk
f
402.664 166.861 mo
402.664 167.639 402.118 167.954 401.444 167.565 cv
400.771 167.176 400.225 166.23 400.225 165.452 cv
400.225 164.675 400.771 164.359 401.444 164.748 cv
402.118 165.137 402.664 166.083 402.664 166.861 cv
cp
1 .866484 .240818 .0951247 cmyk
f
420.791 179.557 mo
418.284 178.109 li
417.91 177.894 417.606 177.313 417.606 176.814 cv
417.606 174.162 li
417.606 173.662 417.91 173.434 418.284 173.649 cv
420.791 175.097 li
421.166 175.313 421.47 175.893 421.47 176.392 cv
421.47 179.044 li
421.47 179.543 421.166 179.772 420.791 179.557 cv
cp
f
424.407 205.107 mo
371.501 174.562 li
370.316 173.878 369.356 172.044 369.356 170.465 cv
369.356 160.377 li
369.356 158.798 370.316 158.072 371.501 158.756 cv
424.407 189.302 li
425.592 189.985 426.552 191.819 426.552 193.398 cv
426.552 203.486 li
426.552 205.065 425.592 205.791 424.407 205.107 cv
.657221 .328313 0 0 cmyk
f
423.32 201.701 mo
423.188 201.701 423.042 201.659 422.889 201.57 cv
373.02 172.778 li
372.419 172.432 371.932 171.501 371.932 170.7 cv
371.932 163.115 li
371.932 162.519 372.202 162.163 372.588 162.163 cv
372.72 162.163 372.866 162.204 373.02 162.293 cv
422.889 191.085 li
423.489 191.432 423.977 192.362 423.977 193.163 cv
423.977 200.748 li
423.977 201.344 423.706 201.701 423.32 201.701 cv
.439979 .173587 0 0 cmyk
f
383.412 174.944 mo
375.97 170.647 li
375.387 170.311 374.914 169.407 374.914 168.629 cv
374.914 167.852 375.387 167.494 375.97 167.83 cv
383.412 172.127 li
383.996 172.464 384.469 173.368 384.469 174.146 cv
384.469 174.924 383.996 175.281 383.412 174.944 cv
cp
.147219 .0154116 0 0 cmyk
f
389.755 177.197 mo
389.755 177.976 389.208 178.291 388.535 177.901 cv
387.861 177.513 387.314 176.566 387.314 175.789 cv
387.314 175.011 387.861 174.696 388.535 175.085 cv
389.208 175.474 389.755 176.42 389.755 177.197 cv
cp
0 0 0 0 cmyk
f
394.058 179.682 mo
394.058 180.46 393.512 180.775 392.838 180.386 cv
392.164 179.997 391.618 179.052 391.618 178.273 cv
391.618 177.495 392.164 177.181 392.838 177.569 cv
393.512 177.958 394.058 178.904 394.058 179.682 cv
cp
1 .866484 .240818 .0951247 cmyk
f
398.361 182.166 mo
398.361 182.944 397.814 183.26 397.141 182.87 cv
396.468 182.481 395.921 181.536 395.921 180.758 cv
395.921 179.98 396.468 179.665 397.141 180.054 cv
397.814 180.442 398.361 181.389 398.361 182.166 cv
cp
.147219 .0154116 0 0 cmyk
f
402.664 184.65 mo
402.664 185.429 402.118 185.744 401.444 185.355 cv
400.771 184.966 400.225 184.021 400.225 183.242 cv
400.225 182.465 400.771 182.149 401.444 182.538 cv
402.118 182.927 402.664 183.873 402.664 184.65 cv
cp
1 .866484 .240818 .0951247 cmyk
f
420.791 197.347 mo
418.284 195.899 li
417.91 195.684 417.606 195.104 417.606 194.604 cv
417.606 191.952 li
417.606 191.452 417.91 191.223 418.284 191.439 cv
420.791 192.887 li
421.166 193.103 421.47 193.683 421.47 194.182 cv
421.47 196.834 li
421.47 197.333 421.166 197.563 420.791 197.347 cv
cp
f
424.407 222.897 mo
371.501 192.352 li
370.316 191.668 369.356 189.834 369.356 188.255 cv
369.356 178.167 li
369.356 176.588 370.316 175.862 371.501 176.546 cv
424.407 207.092 li
425.592 207.775 426.552 209.609 426.552 211.188 cv
426.552 221.276 li
426.552 222.855 425.592 223.581 424.407 222.897 cv
.657221 .328313 0 0 cmyk
f
423.32 219.491 mo
423.188 219.491 423.042 219.449 422.889 219.36 cv
373.02 190.568 li
372.419 190.222 371.932 189.291 371.932 188.489 cv
371.932 180.905 li
371.932 180.309 372.202 179.953 372.588 179.953 cv
372.72 179.953 372.866 179.994 373.02 180.083 cv
422.889 208.875 li
423.489 209.222 423.977 210.152 423.977 210.953 cv
423.977 218.538 li
423.977 219.134 423.706 219.491 423.32 219.491 cv
.439979 .173587 0 0 cmyk
f
383.412 192.734 mo
375.97 188.438 li
375.387 188.101 374.914 187.197 374.914 186.419 cv
374.914 185.642 375.387 185.283 375.97 185.62 cv
383.412 189.917 li
383.996 190.254 384.469 191.158 384.469 191.936 cv
384.469 192.714 383.996 193.071 383.412 192.734 cv
cp
.147219 .0154116 0 0 cmyk
f
389.755 194.987 mo
389.755 195.766 389.208 196.081 388.535 195.691 cv
387.861 195.303 387.314 194.356 387.314 193.579 cv
387.314 192.801 387.861 192.485 388.535 192.875 cv
389.208 193.264 389.755 194.21 389.755 194.987 cv
cp
0 0 0 0 cmyk
f
394.058 197.472 mo
394.058 198.25 393.512 198.565 392.838 198.176 cv
392.164 197.787 391.618 196.841 391.618 196.063 cv
391.618 195.285 392.164 194.97 392.838 195.359 cv
393.512 195.748 394.058 196.694 394.058 197.472 cv
cp
1 .866484 .240818 .0951247 cmyk
f
398.361 199.956 mo
398.361 200.734 397.814 201.05 397.141 200.66 cv
396.468 200.271 395.921 199.325 395.921 198.548 cv
395.921 197.77 396.468 197.455 397.141 197.844 cv
397.814 198.232 398.361 199.179 398.361 199.956 cv
cp
.147219 .0154116 0 0 cmyk
f
402.664 202.44 mo
402.664 203.219 402.118 203.534 401.444 203.145 cv
400.771 202.756 400.225 201.811 400.225 201.032 cv
400.225 200.254 400.771 199.939 401.444 200.328 cv
402.118 200.717 402.664 201.663 402.664 202.44 cv
cp
1 .866484 .240818 .0951247 cmyk
f
420.791 215.137 mo
418.284 213.689 li
417.91 213.473 417.606 212.894 417.606 212.394 cv
417.606 209.741 li
417.606 209.242 417.91 209.013 418.284 209.229 cv
420.791 210.677 li
421.166 210.893 421.47 211.473 421.47 211.972 cv
421.47 214.624 li
421.47 215.123 421.166 215.353 420.791 215.137 cv
cp
f
424.407 240.688 mo
371.501 210.142 li
370.316 209.458 369.356 207.624 369.356 206.045 cv
369.356 195.957 li
369.356 194.378 370.316 193.652 371.501 194.336 cv
424.407 224.881 li
425.592 225.565 426.552 227.399 426.552 228.979 cv
426.552 239.066 li
426.552 240.645 425.592 241.371 424.407 240.688 cv
.657221 .328313 0 0 cmyk
f
423.32 237.281 mo
423.188 237.281 423.042 237.239 422.889 237.15 cv
373.02 208.358 li
372.419 208.012 371.932 207.081 371.932 206.279 cv
371.932 198.695 li
371.932 198.099 372.202 197.743 372.588 197.743 cv
372.72 197.743 372.866 197.784 373.02 197.873 cv
422.889 226.665 li
423.489 227.012 423.977 227.942 423.977 228.743 cv
423.977 236.328 li
423.977 236.924 423.706 237.281 423.32 237.281 cv
.439979 .173587 0 0 cmyk
f
383.412 210.524 mo
375.97 206.228 li
375.387 205.891 374.914 204.987 374.914 204.209 cv
374.914 203.431 375.387 203.073 375.97 203.41 cv
383.412 207.707 li
383.996 208.044 384.469 208.947 384.469 209.726 cv
384.469 210.504 383.996 210.861 383.412 210.524 cv
cp
.147219 .0154116 0 0 cmyk
f
389.755 212.777 mo
389.755 213.556 389.208 213.87 388.535 213.481 cv
387.861 213.093 387.314 212.146 387.314 211.369 cv
387.314 210.591 387.861 210.275 388.535 210.665 cv
389.208 211.054 389.755 211.999 389.755 212.777 cv
cp
1 .866484 .240818 .0951247 cmyk
f
394.058 215.262 mo
394.058 216.04 393.512 216.354 392.838 215.966 cv
392.164 215.577 391.618 214.631 391.618 213.854 cv
391.618 213.075 392.164 212.76 392.838 213.149 cv
393.512 213.538 394.058 214.484 394.058 215.262 cv
cp
f
398.361 217.746 mo
398.361 218.524 397.814 218.84 397.141 218.45 cv
396.468 218.062 395.921 217.115 395.921 216.338 cv
395.921 215.56 396.468 215.244 397.141 215.634 cv
397.814 216.022 398.361 216.969 398.361 217.746 cv
cp
.147219 .0154116 0 0 cmyk
f
402.664 220.23 mo
402.664 221.009 402.118 221.324 401.444 220.935 cv
400.771 220.546 400.225 219.6 400.225 218.822 cv
400.225 218.044 400.771 217.729 401.444 218.118 cv
402.118 218.507 402.664 219.453 402.664 220.23 cv
cp
1 .866484 .240818 .0951247 cmyk
f
420.791 232.927 mo
418.284 231.479 li
417.91 231.263 417.606 230.684 417.606 230.184 cv
417.606 227.531 li
417.606 227.032 417.91 226.803 418.284 227.02 cv
420.791 228.467 li
421.166 228.683 421.47 229.263 421.47 229.762 cv
421.47 232.414 li
421.47 232.913 421.166 233.143 420.791 232.927 cv
cp
.147219 .0154116 0 0 cmyk
f
424.407 258.477 mo
371.501 227.932 li
370.316 227.248 369.356 225.414 369.356 223.835 cv
369.356 213.746 li
369.356 212.168 370.316 211.441 371.501 212.126 cv
424.407 242.671 li
425.592 243.355 426.552 245.189 426.552 246.768 cv
426.552 256.856 li
426.552 258.436 425.592 259.161 424.407 258.477 cv
.657221 .328313 0 0 cmyk
f
423.32 255.071 mo
423.188 255.071 423.042 255.029 422.889 254.94 cv
373.02 226.148 li
372.419 225.801 371.932 224.871 371.932 224.069 cv
371.932 216.485 li
371.932 215.889 372.202 215.533 372.588 215.533 cv
372.72 215.533 372.866 215.575 373.02 215.663 cv
422.889 244.455 li
423.489 244.802 423.977 245.732 423.977 246.533 cv
423.977 254.117 li
423.977 254.714 423.706 255.071 423.32 255.071 cv
.439979 .173587 0 0 cmyk
f
383.412 228.314 mo
375.97 224.018 li
375.387 223.681 374.914 222.776 374.914 221.999 cv
374.914 221.221 375.387 220.863 375.97 221.2 cv
383.412 225.497 li
383.996 225.834 384.469 226.737 384.469 227.516 cv
384.469 228.293 383.996 228.651 383.412 228.314 cv
cp
.147219 .0154116 0 0 cmyk
f
389.755 230.567 mo
389.755 231.345 389.208 231.66 388.535 231.271 cv
387.861 230.883 387.314 229.937 387.314 229.159 cv
387.314 228.381 387.861 228.065 388.535 228.455 cv
389.208 228.844 389.755 229.789 389.755 230.567 cv
cp
1 .866484 .240818 .0951247 cmyk
f
394.058 233.052 mo
394.058 233.83 393.512 234.145 392.838 233.756 cv
392.164 233.367 391.618 232.421 391.618 231.644 cv
391.618 230.865 392.164 230.55 392.838 230.939 cv
393.512 231.328 394.058 232.273 394.058 233.052 cv
cp
0 0 0 0 cmyk
f
398.361 235.536 mo
398.361 236.314 397.814 236.629 397.141 236.24 cv
396.468 235.852 395.921 234.905 395.921 234.128 cv
395.921 233.35 396.468 233.034 397.141 233.424 cv
397.814 233.813 398.361 234.759 398.361 235.536 cv
cp
.147219 .0154116 0 0 cmyk
f
402.664 238.021 mo
402.664 238.799 402.118 239.114 401.444 238.725 cv
400.771 238.336 400.225 237.39 400.225 236.612 cv
400.225 235.834 400.771 235.519 401.444 235.908 cv
402.118 236.297 402.664 237.243 402.664 238.021 cv
cp
0 0 0 0 cmyk
f
420.791 250.717 mo
418.284 249.27 li
417.91 249.053 417.606 248.473 417.606 247.974 cv
417.606 245.321 li
417.606 244.822 417.91 244.593 418.284 244.809 cv
420.791 246.257 li
421.166 246.473 421.47 247.053 421.47 247.552 cv
421.47 250.204 li
421.47 250.703 421.166 250.933 420.791 250.717 cv
cp
.147219 .0154116 0 0 cmyk
f
424.407 276.268 mo
371.501 245.722 li
370.316 245.038 369.356 243.204 369.356 241.625 cv
369.356 231.536 li
369.356 229.958 370.316 229.231 371.501 229.915 cv
424.407 260.461 li
425.592 261.145 426.552 262.98 426.552 264.558 cv
426.552 274.646 li
426.552 276.226 425.592 276.951 424.407 276.268 cv
.657221 .328313 0 0 cmyk
f
423.321 272.86 mo
423.188 272.86 423.042 272.818 422.889 272.729 cv
373.02 243.939 li
372.419 243.591 371.932 242.66 371.932 241.859 cv
371.932 234.275 li
371.932 233.679 372.202 233.322 372.588 233.322 cv
372.72 233.322 372.866 233.364 373.02 233.453 cv
422.889 262.245 li
423.489 262.592 423.977 263.522 423.977 264.323 cv
423.977 271.907 li
423.977 272.504 423.707 272.86 423.321 272.86 cv
.439979 .173587 0 0 cmyk
f
383.412 246.104 mo
375.97 241.808 li
375.387 241.471 374.914 240.566 374.914 239.789 cv
374.914 239.011 375.387 238.653 375.97 238.99 cv
383.412 243.287 li
383.996 243.624 384.469 244.527 384.469 245.306 cv
384.469 246.083 383.996 246.44 383.412 246.104 cv
cp
.147219 .0154116 0 0 cmyk
f
389.755 248.357 mo
389.755 249.135 389.208 249.45 388.535 249.062 cv
387.861 248.673 387.314 247.727 387.314 246.949 cv
387.314 246.171 387.861 245.855 388.535 246.244 cv
389.208 246.634 389.755 247.579 389.755 248.357 cv
cp
1 .866484 .240818 .0951247 cmyk
f
394.058 250.842 mo
394.058 251.619 393.512 251.935 392.838 251.546 cv
392.164 251.157 391.618 250.211 391.618 249.434 cv
391.618 248.655 392.164 248.34 392.838 248.729 cv
393.512 249.118 394.058 250.063 394.058 250.842 cv
cp
f
398.361 253.326 mo
398.361 254.104 397.814 254.419 397.141 254.03 cv
396.468 253.642 395.921 252.695 395.921 251.918 cv
395.921 251.14 396.468 250.824 397.141 251.214 cv
397.814 251.603 398.361 252.548 398.361 253.326 cv
cp
.147219 .0154116 0 0 cmyk
f
402.664 255.811 mo
402.664 256.589 402.118 256.903 401.444 256.515 cv
400.771 256.126 400.225 255.18 400.225 254.402 cv
400.225 253.624 400.771 253.309 401.444 253.698 cv
402.118 254.087 402.664 255.032 402.664 255.811 cv
cp
1 .866484 .240818 .0951247 cmyk
f
420.791 268.507 mo
418.284 267.06 li
417.91 266.843 417.606 266.263 417.606 265.764 cv
417.606 263.111 li
417.606 262.612 417.91 262.383 418.284 262.599 cv
420.791 264.046 li
421.166 264.263 421.47 264.843 421.47 265.342 cv
421.47 267.994 li
421.47 268.493 421.166 268.723 420.791 268.507 cv
cp
f
424.407 294.058 mo
371.501 263.512 li
370.316 262.828 369.356 260.993 369.356 259.415 cv
369.356 249.326 li
369.356 247.747 370.316 247.021 371.501 247.705 cv
424.407 278.251 li
425.592 278.934 426.552 280.768 426.552 282.348 cv
426.552 292.436 li
426.552 294.016 425.592 294.741 424.407 294.058 cv
.657221 .328313 0 0 cmyk
f
423.321 290.65 mo
423.188 290.65 423.042 290.608 422.889 290.52 cv
373.02 261.728 li
372.419 261.381 371.932 260.45 371.932 259.649 cv
371.932 252.065 li
371.932 251.469 372.202 251.112 372.587 251.112 cv
372.72 251.112 372.866 251.154 373.02 251.243 cv
422.889 280.035 li
423.489 280.382 423.977 281.313 423.977 282.113 cv
423.977 289.697 li
423.977 290.294 423.707 290.65 423.321 290.65 cv
.439979 .173587 0 0 cmyk
f
383.412 263.894 mo
375.97 259.597 li
375.387 259.261 374.914 258.356 374.914 257.579 cv
374.914 256.801 375.387 256.443 375.97 256.78 cv
383.412 261.077 li
383.996 261.414 384.469 262.317 384.469 263.096 cv
384.469 263.873 383.996 264.23 383.412 263.894 cv
cp
.147219 .0154116 0 0 cmyk
f
389.755 266.147 mo
389.755 266.925 389.208 267.24 388.535 266.852 cv
387.861 266.463 387.314 265.517 387.314 264.738 cv
387.314 263.961 387.861 263.646 388.535 264.034 cv
389.208 264.424 389.755 265.369 389.755 266.147 cv
cp
0 0 0 0 cmyk
f
394.058 268.632 mo
394.058 269.409 393.512 269.725 392.838 269.336 cv
392.164 268.947 391.618 268.001 391.618 267.223 cv
391.618 266.445 392.164 266.13 392.838 266.519 cv
393.512 266.908 394.058 267.854 394.058 268.632 cv
cp
1 .866484 .240818 .0951247 cmyk
f
398.361 271.116 mo
398.361 271.894 397.814 272.209 397.141 271.82 cv
396.468 271.432 395.921 270.485 395.921 269.708 cv
395.921 268.93 396.468 268.614 397.141 269.003 cv
397.814 269.393 398.361 270.338 398.361 271.116 cv
cp
.147219 .0154116 0 0 cmyk
f
402.664 273.601 mo
402.664 274.378 402.118 274.693 401.444 274.305 cv
400.771 273.916 400.225 272.97 400.225 272.192 cv
400.225 271.414 400.771 271.099 401.444 271.488 cv
402.118 271.877 402.664 272.822 402.664 273.601 cv
cp
1 .866484 .240818 .0951247 cmyk
f
420.791 286.296 mo
418.284 284.849 li
417.91 284.633 417.606 284.053 417.606 283.554 cv
417.606 280.901 li
417.606 280.402 417.91 280.173 418.284 280.389 cv
420.791 281.836 li
421.166 282.053 421.47 282.633 421.47 283.132 cv
421.47 285.784 li
421.47 286.283 421.166 286.513 420.791 286.296 cv
cp
.147219 .0154116 0 0 cmyk
f
409.02 132.011 mo
408.578 132.011 408.221 131.653 408.221 131.212 cv
408.221 98.3242 li
408.221 97.8828 408.578 97.5254 409.02 97.5254 cv
409.461 97.5254 409.818 97.8828 409.818 98.3242 cv
409.818 131.212 li
409.818 131.653 409.461 132.011 409.02 132.011 cv
cp
.657221 .328313 0 0 cmyk
f
411.876 108.586 mo
406.162 108.586 li
406.162 96.2559 li
411.876 96.2559 li
411.876 108.586 li
cp
f
411.039 109.752 mo
409.924 110.396 408.114 110.396 406.999 109.752 cv
405.884 109.107 405.883 108.063 406.999 107.419 cv
408.114 106.775 409.924 106.775 411.039 107.419 cv
412.155 108.063 412.155 109.107 411.039 109.752 cv
cp
f
413.648 98.4102 mo
404.39 98.4102 li
404.39 79.0713 li
413.648 79.0713 li
413.648 98.4102 li
cp
f
406.162 98.2842 mo
406.162 102.457 li
407.839 103.223 410.199 103.223 411.876 102.457 cv
411.876 98.2842 li
410.199 97.5186 407.839 97.5186 406.162 98.2842 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
412.293 100.3 mo
410.484 101.344 407.554 101.344 405.746 100.3 cv
403.938 99.2559 403.938 97.5635 405.745 96.5195 cv
407.554 95.4766 410.484 95.4766 412.293 96.5195 cv
414.101 97.5635 414.101 99.2559 412.293 100.3 cv
cp
.657221 .328313 0 0 cmyk
f
416.827 136.673 mo
416.386 136.673 416.028 136.315 416.028 135.874 cv
416.028 102.986 li
416.028 102.545 416.386 102.188 416.827 102.188 cv
417.269 102.188 417.626 102.545 417.626 102.986 cv
417.626 135.874 li
417.626 136.315 417.269 136.673 416.827 136.673 cv
cp
f
419.684 113.248 mo
413.971 113.248 li
413.971 100.918 li
419.684 100.918 li
419.684 113.248 li
cp
f
418.848 114.414 mo
417.731 115.059 415.923 115.059 414.807 114.414 cv
413.691 113.771 413.691 112.726 414.807 112.082 cv
415.923 111.438 417.731 111.438 418.848 112.082 cv
419.963 112.726 419.963 113.771 418.848 114.414 cv
cp
f
421.457 103.072 mo
412.198 103.072 li
412.198 83.7344 li
421.457 83.7344 li
421.457 103.072 li
cp
f
413.971 102.946 mo
413.971 107.119 li
415.647 107.885 418.008 107.886 419.685 107.119 cv
419.685 102.946 li
418.008 102.181 415.647 102.181 413.971 102.946 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
420.101 104.962 mo
418.293 106.006 415.361 106.006 413.554 104.962 cv
411.746 103.918 411.746 102.227 413.554 101.183 cv
415.361 100.139 418.293 100.139 420.101 101.183 cv
421.908 102.227 421.908 103.919 420.101 104.962 cv
cp
.657221 .328313 0 0 cmyk
f
424.636 141.336 mo
424.194 141.336 423.837 140.979 423.837 140.537 cv
423.837 107.649 li
423.837 107.208 424.194 106.851 424.636 106.851 cv
425.077 106.851 425.435 107.208 425.435 107.649 cv
425.435 140.537 li
425.435 140.979 425.077 141.336 424.636 141.336 cv
cp
f
427.492 117.91 mo
421.778 117.91 li
421.778 105.581 li
427.492 105.581 li
427.492 117.91 li
cp
f
426.655 119.077 mo
425.54 119.721 423.73 119.721 422.615 119.077 cv
421.499 118.433 421.499 117.389 422.615 116.744 cv
423.73 116.1 425.54 116.1 426.655 116.744 cv
427.771 117.389 427.771 118.433 426.655 119.077 cv
cp
f
429.265 107.734 mo
420.006 107.734 li
420.006 88.3965 li
429.265 88.3965 li
429.265 107.734 li
cp
f
421.778 107.609 mo
421.778 111.781 li
423.455 112.548 425.815 112.548 427.492 111.782 cv
427.492 107.609 li
425.815 106.843 423.455 106.843 421.778 107.609 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
427.909 109.625 mo
426.101 110.669 423.17 110.668 421.362 109.625 cv
419.554 108.581 419.554 106.889 421.361 105.845 cv
423.17 104.801 426.101 104.801 427.909 105.845 cv
429.717 106.889 429.717 108.581 427.909 109.625 cv
cp
.657221 .328313 0 0 cmyk
f
432.443 145.998 mo
432.002 145.998 431.645 145.641 431.645 145.199 cv
431.645 112.312 li
431.645 111.87 432.002 111.513 432.443 111.513 cv
432.885 111.513 433.242 111.87 433.242 112.312 cv
433.242 145.199 li
433.242 145.641 432.885 145.998 432.443 145.998 cv
cp
f
435.3 122.573 mo
429.587 122.573 li
429.587 110.243 li
435.3 110.243 li
435.3 122.573 li
cp
f
434.464 123.739 mo
433.348 124.384 431.539 124.384 430.423 123.739 cv
429.308 123.095 429.308 122.051 430.423 121.406 cv
431.539 120.763 433.348 120.763 434.464 121.406 cv
435.579 122.051 435.579 123.095 434.464 123.739 cv
cp
f
437.073 112.397 mo
427.814 112.397 li
427.814 93.0586 li
437.073 93.0586 li
437.073 112.397 li
cp
f
429.587 112.271 mo
429.587 116.444 li
431.264 117.21 433.624 117.21 435.301 116.444 cv
435.301 112.271 li
433.624 111.506 431.263 111.506 429.587 112.271 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
435.717 114.287 mo
433.909 115.331 430.978 115.331 429.17 114.287 cv
427.362 113.243 427.362 111.551 429.17 110.507 cv
430.978 109.464 433.909 109.464 435.717 110.507 cv
437.524 111.551 437.524 113.243 435.717 114.287 cv
cp
.657221 .328313 0 0 cmyk
f
468.732 128.415 mo
481.146 121.104 li
469.323 106.348 li
466.215 111.426 li
468.732 128.415 li
cp
f
378.593 47.4297 mo
398.405 36.0303 li
397.66 47.4297 li
386.278 50.9551 li
378.593 47.4297 li
cp
f
472.183 91.3096 mo
470.675 90.4385 469.235 89.9307 467.896 89.7207 cv
465.898 79.2217 458.593 68.0732 449.883 63.0439 cv
447.263 61.5313 444.771 60.7236 442.512 60.5498 cv
441.322 47.8242 432.475 33.3633 421.73 27.1602 cv
416.118 23.9199 411.025 23.5361 407.269 25.5205 cv
407.269 25.5107 li
407.087 25.6162 li
406.991 25.6689 406.896 25.7236 406.802 25.7803 cv
395.118 32.6807 li
399 35.7461 li
395.516 37.2695 393.313 41.1777 393.313 46.9551 cv
393.313 57.6094 400.793 70.5635 410.02 75.8906 cv
472.183 120.28 li
479.111 124.28 484.728 121.038 484.728 113.038 cv
484.728 105.037 479.111 95.3096 472.183 91.3096 cv
cp
f
393.89 42.2646 mo
420.704 26.5967 li
415.499 23.8828 410.796 23.6582 407.269 25.5205 cv
407.269 25.5107 li
407.087 25.6162 li
406.991 25.6689 406.896 25.7236 406.802 25.7803 cv
395.118 32.6807 li
399 35.7461 li
396.564 36.8115 394.758 39.0449 393.89 42.2646 cv
cp
f
443.41 88.3535 mo
462.975 76.8721 li
459.619 71.0684 454.999 65.998 449.883 63.0439 cv
449.206 62.6533 448.538 62.3115 447.88 62.0137 cv
422.994 76.5664 li
443.41 88.3535 li
cp
f
400.631 33.9619 mo
409.351 38.9961 li
425.318 29.5908 li
424.151 28.6855 422.954 27.8672 421.73 27.1602 cv
419.797 26.0439 417.928 25.2744 416.15 24.8164 cv
400.631 33.9619 li
cp
.147219 .0154116 0 0 cmyk
f
460.817 73.4941 mo
445.201 82.6953 li
450.633 88.7529 li
464.809 80.3828 li
463.688 77.9824 462.341 75.6611 460.817 73.4941 cv
cp
f
459.917 98.5342 mo
458.408 97.6641 456.97 97.1563 455.63 96.9463 cv
453.633 86.4473 446.327 75.2988 437.617 70.2695 cv
434.997 68.7568 432.506 67.9482 430.246 67.7754 cv
429.057 55.0498 420.209 40.5889 409.465 34.3857 cv
397.91 27.7139 388.543 33.1221 388.543 46.4639 cv
388.543 46.917 388.556 47.373 388.577 47.832 cv
380.127 43.9131 373.525 48.3281 373.525 58.3369 cv
373.525 68.9912 381.005 81.9463 390.232 87.2725 cv
459.917 127.506 li
466.845 131.506 472.462 128.263 472.462 120.263 cv
472.462 112.263 466.845 102.535 459.917 98.5342 cv
cp
f
388.577 47.832 mo
388.556 47.373 388.543 46.916 388.543 46.4639 cv
388.544 46.4072 li
383.876 44.5928 379.864 45.3828 377.347 48.2949 cv
380.082 46.0439 384.059 45.7363 388.577 47.832 cv
cp
0 0 0 0 cmyk
f
460.937 97.54 mo
459.429 96.6699 457.989 96.1611 456.65 95.9512 cv
454.652 85.4531 447.348 74.3037 438.637 69.2754 cv
436.018 67.7627 433.525 66.9541 431.266 66.7803 cv
430.076 54.0557 421.229 39.5947 410.484 33.3906 cv
403.286 29.2354 396.938 29.7686 393.173 33.9873 cv
397.008 30.71 402.88 30.584 409.465 34.3857 cv
420.209 40.5889 429.057 55.0498 430.246 67.7744 cv
432.506 67.9482 434.997 68.7568 437.617 70.2695 cv
446.327 75.2988 453.633 86.4473 455.63 96.9463 cv
456.97 97.1563 458.408 97.6641 459.917 98.5352 cv
466.845 102.535 472.462 112.263 472.462 120.263 cv
472.462 123.149 471.722 125.405 470.462 126.937 cv
472.341 125.489 473.482 122.864 473.482 119.269 cv
473.482 111.269 467.865 101.54 460.937 97.54 cv
cp
f
387.104 51.0088 mo
392.342 53.4385 li
392.075 47.6709 li
392.057 47.2656 392.045 46.8633 392.045 46.4639 cv
392.045 41.3154 393.6 37.583 396.422 35.9521 cv
399.244 34.3242 403.255 34.8447 407.713 37.418 cv
417.303 42.9551 425.668 56.4316 426.759 68.1006 cv
427.033 71.041 li
429.977 71.2666 li
431.786 71.4063 433.768 72.0908 435.866 73.3027 cv
443.482 77.7002 450.348 87.9189 452.189 97.6006 cv
452.65 100.023 li
455.087 100.405 li
456.058 100.558 457.094 100.948 458.166 101.567 cv
464.017 104.946 468.96 113.507 468.96 120.263 cv
468.96 122.791 468.259 124.646 467.036 125.352 cv
465.814 126.057 463.857 125.736 461.668 124.473 cv
391.983 84.2402 li
383.877 79.5605 377.028 67.6982 377.028 58.3369 cv
377.028 54.6641 378.111 51.8652 380 50.6592 cv
380.777 50.1631 381.717 49.916 382.777 49.916 cv
384.067 49.916 385.535 50.2813 387.104 51.0088 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
421.882 94.6836 mo
423.721 93.7607 li
421.911 92.3896 li
421.882 94.6836 li
cp
.657221 .328313 0 0 cmyk
f
416.361 69.8516 mo
418.146 68.9492 li
418.179 69.8828 li
416.361 69.8516 li
cp
f
427.126 88.8789 mo
428.988 87.9424 li
425.404 84.5332 li
427.126 88.8789 li
cp
f
423.183 93.7012 mo
414.479 88.5752 li
414.038 88.3154 413.681 87.6602 413.683 87.1123 cv
413.711 77.0361 li
424.014 83.1045 li
423.985 93.1807 li
423.983 93.7285 423.624 93.9619 423.183 93.7012 cv
cp
f
418.127 68.96 mo
408.727 75.0088 li
408.328 75.2656 408.65 76.2217 409.256 76.5791 cv
418.856 82.2334 li
428.456 87.8867 li
429.063 88.2441 429.389 87.6699 428.993 86.9443 cv
419.658 69.8623 li
419.255 69.124 418.533 68.6992 418.127 68.96 cv
cp
f
421.316 94.6416 mo
412.613 89.5156 li
412.171 89.2549 411.814 88.5996 411.816 88.0518 cv
411.845 77.9766 li
422.147 84.0439 li
422.119 94.1201 li
422.117 94.668 421.758 94.9014 421.316 94.6416 cv
cp
.147219 .0154116 0 0 cmyk
f
416.261 69.8994 mo
406.86 75.9482 li
406.462 76.2051 406.784 77.1621 407.39 77.5186 cv
416.99 83.1729 li
426.59 88.8271 li
427.196 89.1836 427.522 88.6094 427.126 87.8838 cv
417.792 70.8018 li
417.389 70.0645 416.667 69.6387 416.261 69.8994 cv
cp
f
452.752 273.284 mo
451.686 273.284 li
451.686 213.717 li
458.72 209.655 li
458.72 180.333 li
459.786 180.333 li
459.786 210.271 li
452.752 214.332 li
452.752 273.284 li
cp
0 0 0 0 cmyk
f
283.653 286.153 mo
283.033 286.153 282.413 285.994 281.851 285.676 cv
262.414 274.67 li
261.824 274.337 261.471 273.732 261.467 273.055 cv
261.464 272.377 261.813 271.77 262.398 271.431 cv
310.881 243.386 li
313.663 241.777 317.119 241.78 319.899 243.385 cv
375.314 275.413 li
374.514 276.798 li
319.1 244.77 li
316.813 243.449 313.97 243.449 311.681 244.77 cv
263.199 272.813 li
263.082 272.882 263.065 272.989 263.065 273.047 cv
263.065 273.105 263.084 273.213 263.201 273.279 cv
282.639 284.285 li
283.309 284.664 284.123 284.642 284.77 284.223 cv
292.983 278.912 li
293.851 280.254 li
285.637 285.565 li
285.032 285.956 284.344 286.153 283.653 286.153 cv
cp
.280034 .073518 .0233463 0 cmyk
f
308.963 290.406 mo
282.834 275.32 li
281.23 274.395 281.432 272.777 283.283 271.709 cv
308.513 257.143 li
310.364 256.073 313.165 255.957 314.769 256.883 cv
340.897 271.969 li
342.501 272.895 342.3 274.512 340.448 275.58 cv
315.219 290.146 li
313.367 291.216 310.566 291.332 308.963 290.406 cv
cp
f
349.565 260.479 mo
349.565 260.479 li
349.565 249.189 li
324.251 249.175 li
315.501 244.123 li
313.493 242.964 309.985 243.109 307.667 244.448 cv
299.503 249.161 li
274.166 249.147 li
274.166 260.758 li
274.109 261.542 274.547 262.3 275.512 262.856 cv
308.23 281.747 li
310.238 282.906 313.746 282.761 316.064 281.422 cv
347.657 263.182 li
348.995 262.41 349.64 261.409 349.565 260.479 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
311.866 243.347 mo
310.396 243.382 308.871 243.753 307.667 244.448 cv
299.503 249.161 li
274.166 249.147 li
274.166 260.758 li
274.109 261.542 274.547 262.3 275.512 262.856 cv
308.23 281.747 li
309.195 282.304 310.507 282.557 311.866 282.523 cv
311.866 243.347 li
cp
f
277.034 249.148 mo
274.166 249.147 li
274.166 260.758 li
274.109 261.542 274.547 262.3 275.512 262.856 cv
277.034 263.735 li
277.034 249.148 li
cp
.657221 .328313 0 0 cmyk
f
308.734 281.993 mo
310.466 282.735 312.972 282.694 314.997 281.922 cv
314.997 268.739 li
308.734 268.739 li
308.734 281.993 li
cp
f
308.23 270.178 mo
275.512 251.288 li
273.504 250.129 273.755 248.104 276.074 246.765 cv
307.667 228.524 li
309.985 227.187 313.493 227.041 315.501 228.2 cv
348.22 247.09 li
350.228 248.25 349.976 250.274 347.657 251.613 cv
316.064 269.854 li
313.746 271.192 310.238 271.338 308.23 270.178 cv
cp
.147219 .0154116 0 0 cmyk
f
308.819 266.778 mo
281.4 250.948 li
279.718 249.977 279.929 248.279 281.872 247.157 cv
308.347 231.872 li
310.29 230.75 313.229 230.629 314.912 231.601 cv
342.331 247.431 li
344.014 248.401 343.803 250.099 341.859 251.221 cv
315.385 266.506 li
313.441 267.628 310.502 267.75 308.819 266.778 cv
cp
.657221 .328313 0 0 cmyk
f
337.53 263.458 mo
337.53 264.301 336.938 265.325 336.209 265.746 cv
335.479 266.168 334.888 265.826 334.888 264.983 cv
334.888 264.141 335.479 263.116 336.209 262.694 cv
336.938 262.273 337.53 262.615 337.53 263.458 cv
cp
.147219 .0154116 0 0 cmyk
f
341.782 261.003 mo
341.782 261.846 341.19 262.87 340.461 263.292 cv
339.731 263.713 339.14 263.371 339.14 262.528 cv
339.14 261.687 339.731 260.661 340.461 260.24 cv
341.19 259.818 341.782 260.16 341.782 261.003 cv
cp
f
346.034 258.548 mo
346.034 259.391 345.442 260.416 344.713 260.837 cv
343.983 261.258 343.392 260.917 343.392 260.074 cv
343.392 259.231 343.983 258.206 344.713 257.785 cv
345.442 257.363 346.034 257.705 346.034 258.548 cv
cp
f
349.565 242.438 mo
349.565 242.438 li
349.565 231.148 li
324.251 231.134 li
315.501 226.082 li
313.493 224.923 309.985 225.068 307.667 226.407 cv
299.503 231.12 li
274.166 231.106 li
274.166 242.717 li
274.109 243.501 274.547 244.259 275.512 244.815 cv
308.23 263.706 li
310.238 264.865 313.746 264.72 316.064 263.381 cv
347.657 245.141 li
348.995 244.369 349.64 243.368 349.565 242.438 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
311.866 225.306 mo
310.396 225.341 308.871 225.712 307.667 226.407 cv
299.503 231.12 li
274.166 231.106 li
274.166 242.717 li
274.109 243.501 274.547 244.259 275.512 244.815 cv
308.23 263.706 li
309.195 264.263 310.507 264.516 311.866 264.482 cv
311.866 225.306 li
cp
f
277.034 231.107 mo
274.166 231.106 li
274.166 242.717 li
274.109 243.501 274.547 244.259 275.512 244.815 cv
277.034 245.694 li
277.034 231.107 li
cp
.657221 .328313 0 0 cmyk
f
308.734 263.952 mo
310.466 264.694 312.972 264.653 314.997 263.881 cv
314.997 250.698 li
308.734 250.698 li
308.734 263.952 li
cp
f
308.23 252.138 mo
275.512 233.247 li
273.504 232.088 273.755 230.063 276.074 228.724 cv
307.667 210.484 li
309.985 209.146 313.493 209 315.501 210.159 cv
348.22 229.049 li
350.228 230.209 349.976 232.233 347.657 233.572 cv
316.064 251.813 li
313.746 253.151 310.238 253.297 308.23 252.138 cv
cp
.147219 .0154116 0 0 cmyk
f
308.819 248.737 mo
281.4 232.907 li
279.718 231.936 279.929 230.238 281.872 229.116 cv
308.347 213.831 li
310.29 212.709 313.229 212.588 314.912 213.56 cv
342.331 229.39 li
344.014 230.361 343.803 232.058 341.859 233.18 cv
315.385 248.465 li
313.441 249.587 310.502 249.709 308.819 248.737 cv
cp
.657221 .328313 0 0 cmyk
f
337.53 245.417 mo
337.53 246.26 336.938 247.284 336.209 247.706 cv
335.479 248.127 334.888 247.785 334.888 246.942 cv
334.888 246.1 335.479 245.075 336.209 244.653 cv
336.938 244.232 337.53 244.574 337.53 245.417 cv
cp
.147219 .0154116 0 0 cmyk
f
341.782 242.962 mo
341.782 243.805 341.19 244.829 340.461 245.251 cv
339.731 245.672 339.14 245.331 339.14 244.488 cv
339.14 243.646 339.731 242.62 340.461 242.199 cv
341.19 241.777 341.782 242.119 341.782 242.962 cv
cp
f
346.034 240.507 mo
346.034 241.35 345.442 242.375 344.713 242.796 cv
343.983 243.218 343.392 242.876 343.392 242.033 cv
343.392 241.19 343.983 240.165 344.713 239.744 cv
345.442 239.322 346.034 239.664 346.034 240.507 cv
cp
f
349.565 224.396 mo
349.565 224.396 li
349.565 213.107 li
324.251 213.093 li
315.501 208.041 li
313.493 206.882 309.985 207.027 307.667 208.366 cv
299.503 213.079 li
274.166 213.065 li
274.166 224.676 li
274.109 225.46 274.547 226.218 275.512 226.774 cv
308.23 245.665 li
310.238 246.824 313.746 246.679 316.064 245.34 cv
347.657 227.1 li
348.995 226.328 349.64 225.327 349.565 224.396 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
311.866 207.265 mo
310.396 207.3 308.871 207.671 307.667 208.366 cv
299.503 213.079 li
274.166 213.065 li
274.166 224.676 li
274.109 225.46 274.547 226.218 275.512 226.774 cv
308.23 245.665 li
309.195 246.222 310.507 246.475 311.866 246.441 cv
311.866 207.265 li
cp
f
277.034 213.066 mo
274.166 213.065 li
274.166 224.676 li
274.109 225.46 274.547 226.218 275.512 226.774 cv
277.034 227.653 li
277.034 213.066 li
cp
.657221 .328313 0 0 cmyk
f
308.734 245.911 mo
310.466 246.653 312.972 246.612 314.997 245.84 cv
314.997 232.657 li
308.734 232.657 li
308.734 245.911 li
cp
f
308.23 234.097 mo
275.512 215.206 li
273.504 214.047 273.755 212.021 276.074 210.683 cv
307.667 192.443 li
309.985 191.104 313.493 190.959 315.501 192.118 cv
348.22 211.009 li
350.228 212.168 349.976 214.192 347.657 215.531 cv
316.064 233.771 li
313.746 235.11 310.238 235.256 308.23 234.097 cv
cp
.147219 .0154116 0 0 cmyk
f
347.657 213.31 mo
316.064 231.55 li
313.746 232.889 310.238 233.034 308.23 231.875 cv
275.512 212.984 li
275.063 212.726 274.734 212.423 274.51 212.096 cv
273.819 213.206 274.133 214.41 275.512 215.206 cv
308.23 234.097 li
310.238 235.256 313.746 235.11 316.064 233.771 cv
347.657 215.531 li
349.459 214.491 350.006 213.038 349.222 211.897 cv
348.907 212.403 348.384 212.891 347.657 213.31 cv
cp
0 0 0 0 cmyk
f
337.53 227.376 mo
337.53 228.219 336.938 229.243 336.209 229.665 cv
335.479 230.086 334.888 229.744 334.888 228.901 cv
334.888 228.059 335.479 227.034 336.209 226.612 cv
336.938 226.191 337.53 226.533 337.53 227.376 cv
cp
.147219 .0154116 0 0 cmyk
f
341.782 224.921 mo
341.782 225.764 341.19 226.788 340.461 227.21 cv
339.731 227.631 339.14 227.29 339.14 226.447 cv
339.14 225.604 339.731 224.579 340.461 224.158 cv
341.19 223.736 341.782 224.078 341.782 224.921 cv
cp
f
346.034 222.466 mo
346.034 223.309 345.442 224.334 344.713 224.755 cv
343.983 225.177 343.392 224.835 343.392 223.992 cv
343.392 223.149 343.983 222.125 344.713 221.703 cv
345.442 221.282 346.034 221.623 346.034 222.466 cv
cp
f
310.165 222.385 mo
294.854 213.545 li
293.914 213.003 294.032 212.055 295.117 211.429 cv
309.901 202.893 li
310.986 202.267 312.628 202.198 313.567 202.741 cv
328.878 211.581 li
329.817 212.123 329.7 213.071 328.615 213.697 cv
313.831 222.232 li
312.746 222.859 311.104 222.927 310.165 222.385 cv
cp
.657221 .328313 0 0 cmyk
f
311.631 214.983 mo
309.513 213.761 li
309.383 213.686 309.398 213.554 309.549 213.468 cv
311.594 212.286 li
311.744 212.2 311.972 212.19 312.102 212.266 cv
314.22 213.488 li
314.35 213.563 314.333 213.694 314.184 213.781 cv
312.138 214.962 li
311.988 215.049 311.761 215.059 311.631 214.983 cv
cp
.147219 .0154116 0 0 cmyk
f
294.854 213.545 mo
294.897 213.57 li
295.117 213.419 li
309.901 204.884 li
310.986 204.257 312.628 204.188 313.567 204.731 cv
328.835 213.546 li
329.701 212.926 329.746 212.082 328.878 211.581 cv
313.567 202.741 li
312.628 202.198 310.986 202.267 309.901 202.893 cv
295.117 211.429 li
294.032 212.055 293.914 213.003 294.854 213.545 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
306.122 237.396 mo
306.122 237.963 305.724 238.192 305.232 237.909 cv
304.741 237.625 304.343 236.936 304.343 236.368 cv
304.343 235.802 304.741 235.571 305.232 235.855 cv
305.724 236.139 306.122 236.828 306.122 237.396 cv
cp
.147219 .0154116 0 0 cmyk
f
303.362 235.813 mo
303.362 236.38 302.965 236.61 302.474 236.326 cv
301.982 236.043 301.584 235.354 301.584 234.786 cv
301.584 234.219 301.982 233.989 302.474 234.272 cv
302.965 234.557 303.362 235.246 303.362 235.813 cv
cp
f
306.122 240.725 mo
306.122 241.292 305.724 241.521 305.232 241.238 cv
304.741 240.954 304.343 240.265 304.343 239.698 cv
304.343 239.131 304.741 238.9 305.232 239.185 cv
305.724 239.468 306.122 240.157 306.122 240.725 cv
cp
f
303.362 239.143 mo
303.362 239.71 302.965 239.939 302.474 239.656 cv
301.982 239.372 301.584 238.683 301.584 238.115 cv
301.584 237.549 301.982 237.318 302.474 237.603 cv
302.965 237.886 303.362 238.575 303.362 239.143 cv
cp
f
306.122 255.347 mo
306.122 255.914 305.724 256.144 305.232 255.86 cv
304.741 255.576 304.343 254.887 304.343 254.319 cv
304.343 253.753 304.741 253.522 305.232 253.807 cv
305.724 254.09 306.122 254.779 306.122 255.347 cv
cp
f
303.362 253.765 mo
303.362 254.331 302.965 254.562 302.474 254.277 cv
301.982 253.994 301.584 253.305 301.584 252.737 cv
301.584 252.17 301.982 251.94 302.474 252.224 cv
302.965 252.508 303.362 253.197 303.362 253.765 cv
cp
f
306.122 258.676 mo
306.122 259.243 305.724 259.473 305.232 259.189 cv
304.741 258.906 304.343 258.217 304.343 257.649 cv
304.343 257.082 304.741 256.853 305.232 257.136 cv
305.724 257.419 306.122 258.109 306.122 258.676 cv
cp
f
303.362 257.094 mo
303.362 257.661 302.965 257.891 302.474 257.607 cv
301.982 257.323 301.584 256.634 301.584 256.066 cv
301.584 255.5 301.982 255.27 302.474 255.554 cv
302.965 255.837 303.362 256.526 303.362 257.094 cv
cp
f
306.122 273.298 mo
306.122 273.865 305.724 274.095 305.232 273.812 cv
304.741 273.528 304.343 272.838 304.343 272.271 cv
304.343 271.704 304.741 271.475 305.232 271.758 cv
305.724 272.041 306.122 272.731 306.122 273.298 cv
cp
f
303.362 271.716 mo
303.362 272.283 302.965 272.513 302.474 272.229 cv
301.982 271.945 301.584 271.256 301.584 270.688 cv
301.584 270.122 301.982 269.892 302.474 270.176 cv
302.965 270.459 303.362 271.148 303.362 271.716 cv
cp
f
306.122 276.628 mo
306.122 277.194 305.724 277.425 305.232 277.141 cv
304.741 276.857 304.343 276.168 304.343 275.601 cv
304.343 275.033 304.741 274.804 305.232 275.087 cv
305.724 275.371 306.122 276.061 306.122 276.628 cv
cp
f
303.362 275.045 mo
303.362 275.612 302.965 275.842 302.474 275.559 cv
301.982 275.275 301.584 274.585 301.584 274.019 cv
301.584 273.451 301.982 273.222 302.474 273.505 cv
302.965 273.788 303.362 274.478 303.362 275.045 cv
cp
f
312.291 303.832 mo
311.354 303.832 310.419 303.59 309.585 303.106 cv
293.098 293.538 li
292.537 293.212 292.203 292.631 292.203 291.983 cv
292.203 291.336 292.538 290.755 293.099 290.43 cv
303.941 284.142 li
304.744 285.524 li
293.901 291.813 li
293.802 291.984 li
293.9 292.155 li
310.388 301.724 li
311.552 302.398 313 302.402 314.168 301.738 cv
346.461 283.336 li
348.124 282.39 350.186 282.398 351.839 283.358 cv
378.89 298.982 li
380.064 299.666 381.523 299.668 382.696 298.988 cv
395.739 291.445 li
396.54 292.83 li
383.497 300.373 li
381.827 301.339 379.756 301.335 378.088 300.365 cv
351.038 284.742 li
349.872 284.064 348.422 284.059 347.252 284.725 cv
314.959 303.127 li
314.135 303.597 313.213 303.832 312.291 303.832 cv
cp
.280034 .073518 .0233463 0 cmyk
f
455.517 364.705 mo
429.388 349.62 li
427.784 348.694 427.985 347.077 429.837 346.008 cv
455.066 331.441 li
456.918 330.373 459.719 330.257 461.322 331.183 cv
487.451 346.268 li
489.055 347.193 488.854 348.811 487.002 349.88 cv
461.772 364.446 li
459.921 365.515 457.12 365.631 455.517 364.705 cv
cp
f
496.119 334.777 mo
496.119 334.777 li
496.119 323.488 li
470.805 323.475 li
462.055 318.423 li
460.047 317.263 456.539 317.408 454.221 318.747 cv
446.058 323.46 li
420.721 323.446 li
420.721 335.057 li
420.663 335.842 421.101 336.599 422.065 337.155 cv
454.784 356.046 li
456.792 357.205 460.3 357.06 462.618 355.721 cv
494.211 337.481 li
495.549 336.709 496.194 335.709 496.119 334.777 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
458.42 317.646 mo
456.95 317.682 455.426 318.052 454.221 318.747 cv
446.058 323.46 li
420.721 323.446 li
420.721 335.057 li
420.663 335.842 421.101 336.599 422.065 337.155 cv
454.784 356.046 li
455.749 356.603 457.061 356.855 458.42 356.822 cv
458.42 317.646 li
cp
f
423.588 323.448 mo
420.721 323.446 li
420.721 335.057 li
420.663 335.842 421.101 336.599 422.065 337.155 cv
423.588 338.034 li
423.588 323.448 li
cp
.657221 .328313 0 0 cmyk
f
455.288 356.293 mo
457.021 357.035 459.525 356.993 461.551 356.222 cv
461.551 343.038 li
455.288 343.038 li
455.288 356.293 li
cp
f
454.784 344.478 mo
422.065 325.587 li
420.058 324.428 420.31 322.402 422.628 321.064 cv
454.221 302.824 li
456.539 301.485 460.047 301.34 462.055 302.499 cv
494.773 321.39 li
496.782 322.549 496.53 324.574 494.211 325.913 cv
462.618 344.152 li
460.3 345.491 456.792 345.637 454.784 344.478 cv
cp
.147219 .0154116 0 0 cmyk
f
455.373 341.077 mo
427.954 325.247 li
426.271 324.275 426.482 322.579 428.426 321.457 cv
454.9 306.172 li
456.844 305.05 459.783 304.928 461.466 305.899 cv
488.885 321.729 li
490.567 322.701 490.356 324.398 488.413 325.52 cv
461.938 340.806 li
459.995 341.927 457.056 342.049 455.373 341.077 cv
cp
.657221 .328313 0 0 cmyk
f
484.085 337.757 mo
484.085 338.6 483.493 339.624 482.763 340.046 cv
482.033 340.467 481.441 340.126 481.441 339.283 cv
481.441 338.44 482.033 337.415 482.763 336.994 cv
483.493 336.572 484.085 336.914 484.085 337.757 cv
cp
.147219 .0154116 0 0 cmyk
f
488.337 335.302 mo
488.337 336.145 487.745 337.17 487.015 337.591 cv
486.285 338.013 485.693 337.671 485.693 336.828 cv
485.693 335.985 486.285 334.961 487.015 334.539 cv
487.745 334.118 488.337 334.459 488.337 335.302 cv
cp
f
492.588 332.848 mo
492.588 333.69 491.997 334.715 491.267 335.136 cv
490.537 335.558 489.945 335.216 489.945 334.373 cv
489.945 333.53 490.537 332.506 491.267 332.084 cv
491.997 331.663 492.588 332.005 492.588 332.848 cv
cp
f
496.119 316.736 mo
496.119 316.736 li
496.119 305.447 li
470.805 305.434 li
462.055 300.382 li
460.047 299.222 456.539 299.367 454.221 300.706 cv
446.058 305.42 li
420.721 305.405 li
420.721 317.016 li
420.663 317.801 421.101 318.558 422.065 319.115 cv
454.784 338.005 li
456.792 339.164 460.3 339.019 462.618 337.681 cv
494.211 319.44 li
495.549 318.668 496.194 317.668 496.119 316.736 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
458.42 299.604 mo
456.95 299.641 455.426 300.011 454.221 300.706 cv
446.058 305.42 li
420.721 305.405 li
420.721 317.016 li
420.663 317.801 421.101 318.558 422.065 319.115 cv
454.784 338.005 li
455.749 338.563 457.061 338.814 458.42 338.781 cv
458.42 299.604 li
cp
f
423.588 305.407 mo
420.721 305.405 li
420.721 317.016 li
420.663 317.801 421.101 318.558 422.065 319.115 cv
423.588 319.993 li
423.588 305.407 li
cp
.657221 .328313 0 0 cmyk
f
455.288 338.252 mo
457.021 338.994 459.525 338.952 461.551 338.181 cv
461.551 324.997 li
455.288 324.997 li
455.288 338.252 li
cp
f
454.784 326.437 mo
422.065 307.546 li
420.058 306.387 420.31 304.361 422.628 303.023 cv
454.221 284.783 li
456.539 283.444 460.047 283.299 462.055 284.458 cv
494.773 303.349 li
496.782 304.508 496.53 306.533 494.211 307.872 cv
462.618 326.111 li
460.3 327.45 456.792 327.596 454.784 326.437 cv
cp
.147219 .0154116 0 0 cmyk
f
455.373 323.036 mo
427.954 307.206 li
426.271 306.234 426.482 304.538 428.426 303.416 cv
454.9 288.131 li
456.844 287.009 459.783 286.887 461.466 287.858 cv
488.885 303.688 li
490.567 304.66 490.356 306.357 488.413 307.479 cv
461.938 322.765 li
459.995 323.886 457.056 324.008 455.373 323.036 cv
cp
.657221 .328313 0 0 cmyk
f
484.085 319.716 mo
484.085 320.559 483.493 321.583 482.763 322.005 cv
482.033 322.426 481.441 322.085 481.441 321.242 cv
481.441 320.399 482.033 319.374 482.763 318.953 cv
483.493 318.531 484.085 318.873 484.085 319.716 cv
cp
.147219 .0154116 0 0 cmyk
f
488.337 317.261 mo
488.337 318.104 487.745 319.129 487.015 319.55 cv
486.285 319.972 485.693 319.63 485.693 318.787 cv
485.693 317.944 486.285 316.92 487.015 316.498 cv
487.745 316.077 488.337 316.418 488.337 317.261 cv
cp
f
492.588 314.807 mo
492.588 315.649 491.997 316.674 491.267 317.095 cv
490.537 317.517 489.945 317.175 489.945 316.332 cv
489.945 315.489 490.537 314.465 491.267 314.043 cv
491.997 313.622 492.588 313.964 492.588 314.807 cv
cp
f
496.119 298.695 mo
496.119 298.695 li
496.119 287.406 li
470.805 287.393 li
462.055 282.341 li
460.047 281.182 456.539 281.326 454.221 282.665 cv
446.058 287.379 li
420.721 287.364 li
420.721 298.975 li
420.663 299.76 421.101 300.517 422.065 301.074 cv
454.784 319.964 li
456.792 321.123 460.3 320.978 462.618 319.64 cv
494.211 301.399 li
495.549 300.627 496.194 299.627 496.119 298.695 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
458.42 281.563 mo
456.95 281.6 455.426 281.97 454.221 282.665 cv
446.058 287.379 li
420.721 287.364 li
420.721 298.975 li
420.663 299.76 421.101 300.517 422.065 301.074 cv
454.784 319.964 li
455.749 320.521 457.061 320.773 458.42 320.74 cv
458.42 281.563 li
cp
f
423.588 287.366 mo
420.721 287.364 li
420.721 298.975 li
420.663 299.76 421.101 300.517 422.065 301.074 cv
423.588 301.952 li
423.588 287.366 li
cp
.657221 .328313 0 0 cmyk
f
455.288 320.211 mo
457.021 320.953 459.525 320.911 461.551 320.14 cv
461.551 306.956 li
455.288 306.956 li
455.288 320.211 li
cp
f
454.784 308.396 mo
422.065 289.505 li
420.058 288.346 420.31 286.321 422.628 284.982 cv
454.221 266.742 li
456.539 265.403 460.047 265.258 462.055 266.417 cv
494.773 285.308 li
496.782 286.467 496.53 288.492 494.211 289.831 cv
462.618 308.07 li
460.3 309.409 456.792 309.555 454.784 308.396 cv
cp
.147219 .0154116 0 0 cmyk
f
494.211 287.609 mo
462.618 305.849 li
460.3 307.188 456.792 307.333 454.784 306.174 cv
422.065 287.283 li
421.618 287.025 421.289 286.722 421.063 286.395 cv
420.374 287.505 420.687 288.709 422.065 289.505 cv
454.784 308.396 li
456.792 309.555 460.3 309.409 462.618 308.07 cv
494.211 289.831 li
496.013 288.791 496.561 287.337 495.775 286.196 cv
495.461 286.703 494.938 287.189 494.211 287.609 cv
cp
0 0 0 0 cmyk
f
484.085 301.675 mo
484.085 302.518 483.493 303.542 482.763 303.964 cv
482.033 304.385 481.441 304.044 481.441 303.201 cv
481.441 302.358 482.033 301.333 482.763 300.912 cv
483.493 300.49 484.085 300.832 484.085 301.675 cv
cp
.147219 .0154116 0 0 cmyk
f
488.337 299.22 mo
488.337 300.063 487.745 301.088 487.015 301.509 cv
486.285 301.931 485.693 301.589 485.693 300.746 cv
485.693 299.903 486.285 298.879 487.015 298.457 cv
487.745 298.036 488.337 298.377 488.337 299.22 cv
cp
f
492.588 296.766 mo
492.588 297.608 491.997 298.633 491.267 299.055 cv
490.537 299.476 489.945 299.134 489.945 298.291 cv
489.945 297.448 490.537 296.424 491.267 296.002 cv
491.997 295.581 492.588 295.923 492.588 296.766 cv
cp
f
456.719 296.684 mo
441.408 287.844 li
440.469 287.302 440.586 286.354 441.671 285.728 cv
456.455 277.192 li
457.54 276.565 459.182 276.498 460.121 277.04 cv
475.432 285.88 li
476.372 286.423 476.254 287.37 475.169 287.996 cv
460.385 296.532 li
459.3 297.158 457.658 297.227 456.719 296.684 cv
cp
.657221 .328313 0 0 cmyk
f
458.185 289.282 mo
456.066 288.06 li
455.937 287.984 455.953 287.854 456.103 287.767 cv
458.148 286.586 li
458.299 286.499 458.525 286.489 458.655 286.564 cv
460.773 287.788 li
460.903 287.862 460.888 287.994 460.737 288.08 cv
458.692 289.262 li
458.542 289.348 458.314 289.357 458.185 289.282 cv
cp
.147219 .0154116 0 0 cmyk
f
441.408 287.844 mo
441.451 287.869 li
441.671 287.718 li
456.455 279.183 li
457.54 278.556 459.182 278.488 460.121 279.03 cv
475.389 287.846 li
476.255 287.226 476.3 286.381 475.432 285.88 cv
460.121 277.04 li
459.182 276.498 457.54 276.565 456.455 277.192 cv
441.671 285.728 li
440.586 286.354 440.469 287.302 441.408 287.844 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
408.142 106.448 mo
408.142 107.016 407.744 107.245 407.253 106.962 cv
406.762 106.678 406.363 105.988 406.363 105.422 cv
406.363 104.854 406.762 104.624 407.253 104.908 cv
407.744 105.191 408.142 105.881 408.142 106.448 cv
cp
.147219 .0154116 0 0 cmyk
f
415.976 111.198 mo
415.976 111.766 415.577 111.995 415.086 111.712 cv
414.595 111.428 414.196 110.738 414.196 110.172 cv
414.196 109.604 414.595 109.374 415.086 109.658 cv
415.577 109.941 415.976 110.631 415.976 111.198 cv
cp
f
423.809 115.948 mo
423.809 116.516 423.41 116.745 422.919 116.462 cv
422.428 116.178 422.03 115.488 422.03 114.922 cv
422.03 114.354 422.428 114.124 422.919 114.408 cv
423.41 114.691 423.809 115.381 423.809 115.948 cv
cp
f
431.642 120.698 mo
431.642 121.266 431.244 121.495 430.753 121.212 cv
430.262 120.928 429.863 120.238 429.863 119.672 cv
429.863 119.104 430.262 118.874 430.753 119.158 cv
431.244 119.441 431.642 120.131 431.642 120.698 cv
cp
f
413.602 115.926 mo
413.602 116.368 413.243 116.726 412.802 116.726 cv
412.36 116.726 412.002 116.368 412.002 115.926 cv
412.002 115.484 412.36 115.126 412.802 115.126 cv
413.243 115.126 413.602 115.484 413.602 115.926 cv
cp
f
420.905 120.301 mo
420.905 120.743 420.547 121.101 420.105 121.101 cv
419.663 121.101 419.306 120.743 419.306 120.301 cv
419.306 119.859 419.663 119.501 420.105 119.501 cv
420.547 119.501 420.905 119.859 420.905 120.301 cv
cp
f
428.208 124.676 mo
428.208 125.118 427.85 125.476 427.408 125.476 cv
426.967 125.476 426.608 125.118 426.608 124.676 cv
426.608 124.234 426.967 123.876 427.408 123.876 cv
427.85 123.876 428.208 124.234 428.208 124.676 cv
cp
f
435.512 128.881 mo
435.512 129.322 435.153 129.681 434.712 129.681 cv
434.27 129.681 433.912 129.322 433.912 128.881 cv
433.912 128.439 434.27 128.081 434.712 128.081 cv
435.153 128.081 435.512 128.439 435.512 128.881 cv
cp
f
92.673 211.392 mo
92.853 211.284 92.979 211.167 93.051 211.032 cv
93.132 210.897 93.168 210.726 93.168 210.519 cv
92.709 210.519 li
92.709 209.385 li
93.564 209.385 li
93.564 210.438 li
93.564 210.771 93.51 211.032 93.393 211.23 cv
93.285 211.428 93.096 211.59 92.826 211.725 cv
92.673 211.392 li
111.186 210.033 mo
110.961 209.646 110.853 208.998 110.853 208.098 cv
110.853 206.991 li
110.853 206.658 110.862 206.37 110.889 206.118 cv
110.907 205.866 110.952 205.632 111.015 205.416 cv
111.078 205.2 111.168 205.02 111.267 204.876 cv
111.375 204.741 111.51 204.633 111.672 204.552 cv
111.843 204.471 112.032 204.435 112.266 204.435 cv
112.653 204.435 113.004 204.615 113.319 204.957 cv
113.319 202.131 li
114.075 202.131 li
114.075 210.519 li
113.319 210.519 li
113.319 210.087 li
113.013 210.438 112.68 210.609 112.293 210.609 cv
111.78 210.609 111.411 210.42 111.186 210.033 cv
111.78 205.434 mo
111.663 205.704 111.609 206.136 111.609 206.748 cv
111.609 208.161 li
111.609 208.809 111.663 209.286 111.78 209.574 cv
111.897 209.862 112.122 210.006 112.446 210.006 cv
112.743 210.006 113.031 209.88 113.319 209.61 cv
113.319 205.452 li
113.013 205.173 112.716 205.029 112.428 205.029 cv
112.104 205.029 111.897 205.164 111.78 205.434 cv
104.796 210.033 mo
104.571 209.646 104.463 208.998 104.463 208.098 cv
104.463 206.991 li
104.463 206.658 104.472 206.37 104.499 206.118 cv
104.517 205.866 104.562 205.632 104.625 205.416 cv
104.697 205.2 104.778 205.02 104.877 204.876 cv
104.985 204.741 105.12 204.633 105.291 204.552 cv
105.453 204.471 105.642 204.435 105.876 204.435 cv
106.272 204.435 106.623 204.615 106.929 204.957 cv
106.929 202.131 li
107.685 202.131 li
107.685 210.519 li
106.929 210.519 li
106.929 210.087 li
106.623 210.438 106.29 210.609 105.912 210.609 cv
105.39 210.609 105.021 210.42 104.796 210.033 cv
105.39 205.434 mo
105.273 205.704 105.219 206.136 105.219 206.748 cv
105.219 208.161 li
105.219 208.809 105.273 209.286 105.39 209.574 cv
105.507 209.862 105.732 210.006 106.065 210.006 cv
106.353 210.006 106.641 209.88 106.929 209.61 cv
106.929 205.452 li
106.623 205.173 106.326 205.029 106.038 205.029 cv
105.723 205.029 105.507 205.164 105.39 205.434 cv
100.746 210.078 mo
100.494 209.727 100.368 209.124 100.368 208.26 cv
100.368 206.748 li
100.368 206.172 100.431 205.704 100.548 205.362 cv
100.674 205.02 100.845 204.777 101.079 204.642 cv
101.304 204.507 101.61 204.435 101.997 204.435 cv
102.249 204.435 102.465 204.471 102.645 204.534 cv
102.816 204.597 102.969 204.696 103.086 204.813 cv
103.203 204.939 103.302 205.101 103.365 205.308 cv
103.437 205.515 103.482 205.74 103.509 205.992 cv
103.536 206.244 103.554 206.55 103.554 206.901 cv
103.545 207.441 li
101.133 207.441 li
101.133 208.341 li
101.133 208.962 101.187 209.394 101.313 209.655 cv
101.43 209.907 101.655 210.042 101.988 210.042 cv
102.249 210.042 102.447 209.952 102.591 209.79 cv
102.735 209.619 102.807 209.322 102.807 208.881 cv
102.807 208.467 li
103.545 208.467 li
103.545 208.8 li
103.545 209.376 103.428 209.826 103.185 210.141 cv
102.942 210.456 102.537 210.609 101.988 210.609 cv
101.412 210.609 100.998 210.438 100.746 210.078 cv
101.322 205.335 mo
101.187 205.56 101.133 205.983 101.133 206.604 cv
101.133 207.009 li
102.807 207.009 li
102.807 206.514 li
102.807 206.307 102.798 206.127 102.789 205.992 cv
102.78 205.857 102.753 205.713 102.726 205.578 cv
102.69 205.443 102.645 205.335 102.591 205.263 cv
102.537 205.182 102.456 205.119 102.357 205.074 cv
102.249 205.02 102.132 205.002 101.988 205.002 cv
101.664 205.002 101.448 205.11 101.322 205.335 cv
96.957 210.15 mo
96.669 209.844 96.507 209.43 96.462 208.908 cv
97.101 208.71 li
97.146 209.169 97.245 209.502 97.416 209.718 cv
97.587 209.934 97.821 210.042 98.127 210.042 cv
98.388 210.042 98.595 209.961 98.748 209.808 cv
98.892 209.655 98.964 209.457 98.964 209.214 cv
98.964 209.178 li
98.955 208.773 98.712 208.377 98.235 207.981 cv
97.425 207.288 li
97.137 207.045 96.93 206.811 96.795 206.586 cv
96.669 206.361 96.606 206.1 96.606 205.803 cv
96.606 205.371 96.732 205.029 96.993 204.786 cv
97.254 204.552 97.596 204.435 98.037 204.435 cv
98.478 204.435 98.811 204.579 99.054 204.858 cv
99.288 205.146 99.423 205.524 99.45 206.01 cv
98.91 206.181 li
98.892 205.785 98.811 205.488 98.667 205.29 cv
98.532 205.101 98.325 205.002 98.064 205.002 cv
97.83 205.002 97.641 205.065 97.497 205.2 cv
97.362 205.326 97.29 205.497 97.29 205.713 cv
97.29 205.911 97.326 206.082 97.398 206.217 cv
97.47 206.361 97.596 206.505 97.785 206.667 cv
98.631 207.432 li
98.784 207.558 98.91 207.675 99 207.774 cv
99.099 207.873 99.198 207.999 99.306 208.143 cv
99.414 208.296 99.495 208.449 99.549 208.62 cv
99.603 208.791 99.63 208.971 99.63 209.169 cv
99.63 209.628 99.495 209.979 99.216 210.231 cv
98.937 210.483 98.568 210.609 98.091 210.609 cv
97.623 210.609 97.236 210.456 96.957 210.15 cv
81.81 210.078 mo
81.558 209.727 81.432 209.124 81.432 208.26 cv
81.432 206.748 li
81.432 206.172 81.486 205.704 81.603 205.362 cv
81.729 205.02 81.9 204.777 82.134 204.642 cv
82.368 204.507 82.674 204.435 83.052 204.435 cv
83.304 204.435 83.52 204.471 83.7 204.534 cv
83.88 204.597 84.024 204.696 84.141 204.813 cv
84.267 204.939 84.357 205.101 84.429 205.308 cv
84.492 205.515 84.546 205.74 84.573 205.992 cv
84.6 206.244 84.609 206.55 84.609 206.901 cv
84.609 207.441 li
82.188 207.441 li
82.188 208.341 li
82.188 208.962 82.251 209.394 82.368 209.655 cv
82.485 209.907 82.71 210.042 83.043 210.042 cv
83.304 210.042 83.511 209.952 83.646 209.79 cv
83.79 209.619 83.862 209.322 83.862 208.881 cv
83.862 208.467 li
84.609 208.467 li
84.609 208.8 li
84.609 209.376 84.483 209.826 84.24 210.141 cv
83.997 210.456 83.601 210.609 83.043 210.609 cv
82.476 210.609 82.062 210.438 81.81 210.078 cv
82.377 205.335 mo
82.251 205.56 82.188 205.983 82.188 206.604 cv
82.188 207.009 li
83.862 207.009 li
83.862 206.514 li
83.862 206.307 83.853 206.127 83.844 205.992 cv
83.835 205.857 83.817 205.713 83.781 205.578 cv
83.754 205.443 83.709 205.335 83.646 205.263 cv
83.592 205.182 83.511 205.119 83.412 205.074 cv
83.313 205.02 83.187 205.002 83.043 205.002 cv
82.728 205.002 82.503 205.11 82.377 205.335 cv
90.414 210.258 mo
90.261 210.033 90.18 209.7 90.18 209.268 cv
90.18 205.029 li
89.451 205.029 li
89.451 204.525 li
90.18 204.525 li
90.18 202.671 li
90.936 202.671 li
90.936 204.525 li
91.935 204.525 li
91.935 205.029 li
90.936 205.029 li
90.936 209.196 li
90.936 209.502 90.972 209.709 91.044 209.826 cv
91.116 209.934 91.26 209.997 91.476 209.997 cv
91.611 209.997 91.755 209.979 91.899 209.952 cv
91.899 210.528 li
91.674 210.564 91.458 210.591 91.26 210.591 cv
90.855 210.591 90.576 210.483 90.414 210.258 cv
87.813 210.519 mo
87.813 204.525 li
88.569 204.525 li
88.569 210.519 li
87.813 210.519 li
85.734 210.519 mo
85.734 202.131 li
86.499 202.131 li
86.499 210.519 li
85.734 210.519 li
87.813 203.697 mo
87.813 202.671 li
88.578 202.671 li
88.578 203.697 li
87.813 203.697 li
107.712 200.061 mo
107.712 192.096 li
108.468 192.096 li
108.468 192.6 li
108.792 192.204 109.17 192.006 109.62 192.006 cv
109.836 192.006 110.034 192.051 110.205 192.141 cv
110.367 192.231 110.502 192.348 110.601 192.492 cv
110.691 192.636 110.772 192.816 110.826 193.032 cv
110.889 193.248 110.925 193.464 110.943 193.68 cv
110.961 193.887 110.97 194.121 110.97 194.391 cv
110.97 195.66 li
110.97 195.975 110.961 196.254 110.934 196.506 cv
110.907 196.758 110.862 196.983 110.79 197.199 cv
110.727 197.415 110.637 197.595 110.529 197.73 cv
110.412 197.874 110.277 197.982 110.115 198.063 cv
109.953 198.144 109.755 198.18 109.539 198.18 cv
109.152 198.18 108.792 197.991 108.468 197.604 cv
108.468 200.061 li
107.712 200.061 li
108.468 193.059 mo
108.468 197.145 li
108.747 197.433 109.062 197.577 109.413 197.577 cv
109.548 197.577 109.665 197.55 109.764 197.496 cv
109.854 197.442 109.935 197.361 109.989 197.271 cv
110.052 197.172 110.097 197.037 110.133 196.875 cv
110.16 196.713 110.187 196.533 110.196 196.344 cv
110.205 196.155 110.214 195.93 110.214 195.669 cv
110.214 194.391 li
110.214 193.752 110.16 193.293 110.052 193.014 cv
109.944 192.735 109.728 192.6 109.404 192.6 cv
109.098 192.6 108.783 192.753 108.468 193.059 cv
112.257 197.721 mo
111.978 197.415 111.816 197.001 111.771 196.479 cv
112.41 196.281 li
112.446 196.74 112.554 197.073 112.725 197.289 cv
112.896 197.505 113.13 197.604 113.436 197.604 cv
113.697 197.604 113.904 197.532 114.057 197.379 cv
114.201 197.226 114.273 197.028 114.273 196.776 cv
114.273 196.74 li
114.264 196.344 114.021 195.948 113.544 195.552 cv
112.725 194.859 li
112.437 194.616 112.23 194.382 112.104 194.157 cv
111.969 193.932 111.906 193.671 111.906 193.374 cv
111.906 192.933 112.041 192.6 112.302 192.357 cv
112.563 192.123 112.905 192.006 113.337 192.006 cv
113.778 192.006 114.12 192.15 114.363 192.429 cv
114.597 192.708 114.732 193.095 114.759 193.581 cv
114.219 193.752 li
114.201 193.356 114.111 193.059 113.976 192.861 cv
113.832 192.672 113.634 192.573 113.373 192.573 cv
113.139 192.573 112.941 192.636 112.806 192.771 cv
112.662 192.897 112.599 193.068 112.599 193.284 cv
112.599 193.482 112.635 193.644 112.707 193.788 cv
112.77 193.923 112.905 194.076 113.094 194.238 cv
113.94 194.994 li
114.093 195.129 114.21 195.246 114.309 195.345 cv
114.408 195.444 114.507 195.57 114.615 195.714 cv
114.723 195.858 114.804 196.02 114.858 196.191 cv
114.912 196.362 114.939 196.542 114.939 196.74 cv
114.939 197.199 114.804 197.55 114.525 197.802 cv
114.246 198.054 113.877 198.18 113.4 198.18 cv
112.923 198.18 112.545 198.027 112.257 197.721 cv
92.979 197.649 mo
92.727 197.298 92.601 196.686 92.601 195.831 cv
92.601 194.319 li
92.601 193.734 92.664 193.275 92.781 192.933 cv
92.898 192.591 93.078 192.348 93.312 192.213 cv
93.537 192.069 93.843 192.006 94.23 192.006 cv
94.482 192.006 94.698 192.033 94.869 192.105 cv
95.049 192.168 95.202 192.258 95.319 192.384 cv
95.436 192.501 95.535 192.672 95.598 192.879 cv
95.67 193.086 95.715 193.311 95.742 193.563 cv
95.769 193.815 95.787 194.121 95.787 194.472 cv
95.778 195.012 li
93.357 195.012 li
93.357 195.912 li
93.357 196.533 93.42 196.965 93.537 197.226 cv
93.663 197.478 93.888 197.604 94.221 197.604 cv
94.482 197.604 94.68 197.523 94.824 197.361 cv
94.968 197.19 95.031 196.893 95.031 196.452 cv
95.031 196.038 li
95.778 196.038 li
95.778 196.371 li
95.778 196.947 95.661 197.397 95.418 197.712 cv
95.175 198.027 94.77 198.18 94.221 198.18 cv
93.645 198.18 93.231 198 92.979 197.649 cv
93.555 192.906 mo
93.42 193.131 93.357 193.554 93.357 194.175 cv
93.357 194.58 li
95.031 194.58 li
95.031 194.085 li
95.031 193.878 95.031 193.698 95.022 193.563 cv
95.013 193.428 94.986 193.284 94.959 193.149 cv
94.923 193.014 94.878 192.906 94.824 192.825 cv
94.77 192.753 94.689 192.69 94.59 192.645 cv
94.482 192.591 94.365 192.573 94.221 192.573 cv
93.897 192.573 93.681 192.681 93.555 192.906 cv
86.211 198.036 mo
86.004 197.937 85.842 197.784 85.725 197.586 cv
85.599 197.388 85.518 197.154 85.464 196.884 cv
85.41 196.623 85.392 196.299 85.392 195.921 cv
85.392 194.256 li
85.392 193.5 85.509 192.933 85.743 192.564 cv
85.977 192.186 86.391 192.006 86.985 192.006 cv
87.588 192.006 88.002 192.186 88.236 192.555 cv
88.47 192.924 88.587 193.491 88.587 194.256 cv
88.587 195.921 li
88.587 196.299 88.56 196.623 88.506 196.884 cv
88.461 197.154 88.371 197.388 88.254 197.586 cv
88.137 197.784 87.975 197.937 87.759 198.036 cv
87.552 198.135 87.291 198.18 86.985 198.18 cv
86.679 198.18 86.427 198.135 86.211 198.036 cv
86.652 192.618 mo
86.562 192.654 86.481 192.708 86.418 192.789 cv
86.274 193.032 li
86.238 193.113 86.211 193.23 86.193 193.365 cv
86.175 193.5 86.157 193.635 86.157 193.761 cv
86.148 193.878 86.148 194.031 86.148 194.22 cv
86.148 195.957 li
86.148 196.146 86.148 196.299 86.157 196.425 cv
86.157 196.542 86.175 196.677 86.193 196.812 cv
86.211 196.956 86.238 197.064 86.274 197.154 cv
86.418 197.397 li
86.481 197.469 86.562 197.523 86.652 197.559 cv
86.751 197.595 86.859 197.604 86.985 197.604 cv
87.138 197.604 87.264 197.577 87.372 197.523 cv
87.48 197.469 87.561 197.397 87.615 197.316 cv
87.678 197.226 87.723 197.109 87.75 196.956 cv
87.777 196.803 87.804 196.65 87.813 196.515 cv
87.822 196.371 87.822 196.182 87.822 195.957 cv
87.822 194.22 li
87.822 193.995 87.822 193.806 87.813 193.671 cv
87.804 193.527 87.777 193.374 87.75 193.221 cv
87.723 193.068 87.678 192.951 87.615 192.861 cv
87.561 192.78 87.48 192.708 87.372 192.654 cv
87.264 192.6 87.138 192.573 86.985 192.573 cv
86.859 192.573 86.751 192.591 86.652 192.618 cv
105.678 198.081 mo
105.678 192.096 li
106.434 192.096 li
106.434 198.081 li
105.678 198.081 li
101.646 198.081 mo
101.646 193.383 li
101.646 193.05 101.592 192.825 101.493 192.699 cv
101.394 192.573 101.25 192.501 101.061 192.501 cv
100.674 192.51 100.305 192.717 99.936 193.131 cv
99.936 193.23 99.945 193.302 99.945 193.356 cv
99.945 198.081 li
99.234 198.081 li
99.234 193.383 li
99.234 193.05 99.18 192.825 99.072 192.699 cv
98.973 192.573 98.829 192.501 98.64 192.501 cv
98.253 192.51 97.884 192.717 97.524 193.131 cv
97.524 198.081 li
96.804 198.081 li
96.804 192.096 li
97.524 192.096 li
97.524 192.699 li
97.92 192.231 98.388 191.988 98.928 191.988 cv
99.432 191.988 99.738 192.249 99.873 192.78 cv
100.287 192.249 100.782 191.988 101.349 191.988 cv
101.646 191.988 101.889 192.096 102.078 192.312 cv
102.267 192.528 102.366 192.87 102.366 193.356 cv
102.366 198.081 li
101.646 198.081 li
89.685 198.081 mo
89.685 192.096 li
90.45 192.096 li
90.45 192.924 li
90.63 192.618 90.846 192.393 91.089 192.249 cv
91.332 192.105 91.575 192.033 91.827 192.033 cv
91.962 192.033 li
91.962 192.852 li
91.854 192.807 91.728 192.789 91.593 192.789 cv
91.107 192.789 90.729 193.023 90.45 193.482 cv
90.45 198.081 li
89.685 198.081 li
81.693 198.081 mo
81.693 189.693 li
82.485 189.693 li
82.485 197.496 li
84.87 197.496 li
84.87 198.081 li
81.693 198.081 li
105.678 191.268 mo
105.678 190.242 li
106.443 190.242 li
106.443 191.268 li
105.678 191.268 li
/0 /CSA get_res setcolorspace
gsave
eclp
[1 0 0 -1 0 400 ]ct
[34.08 0 0 22.8 81.12 187.84 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 142 
/H 95 
/M[142 0 0 -95 0 95 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&_Z9X\_uR.ErBo$6V#^H+iW+Q1LB.9u!!%TNpAk.ZO9"JEr=PY%JcNpnrHZ'VjT,7)gAq1>
bQ-2orBo<>r=Rca`rQ&M^]9AprH\2=W;umBh>mNTrBm7YrBorPmf<:uT`G$'quD<Kd/a,j[K,XorH[,t
rBnO(h#RC@gAq0ae,[bor=QR?PlUc.nc5lorH[,trBm7YrBo]Ip&P%'T`G$'o`0RDg&V-QrHY(:rH[`0
n,WDST`G$YqZ,RTr=Pn,quH[-MZCWprHZ<]ZiL%ldf?3Er=S#hJcLQ+rHSACJcPNFrBlYHkQ(PnT)aHC
aoMBc^&S.Y!."A?s*;TarBnd/o)SeXq#LF^`W5rLgAp:7rt5&,rt2:3NWB$'q#L9lpj)`:rH\DCr-A5@
pj)`:rHSACqK`&?qK_W3rH\>ArHSACqK_l:q0Dr>rW)mao)SPQqZ-R^rrDsar;cU[qZ-R^!!)j_rW)d^
nc8VUr;cd`!!)j_r;ccrq*Y#Zr=SW$p_!B'r=T&0r"8l-p_!B'r=K#0q@W],q@W8ur=Su.!"o2B!!)j-
q#L4&SH.%;rH\#8p3HQ9rHSACqg&/@p3HQ9oQ^K<H$T73o)S`7r;cJ8qZ-A9quH[_oDnSPquH[_!!)m`
rW)XZqu?^aog8]Zpd=WQrBpM`oL&KUpI"iYr=SZ%p(@3&r=K#0q[rf-rt5#<quH@$!!)d+o)S_$r;cI%
qZ-@&g&RB<rH\&9rd"6`r;cP:rrD_;quGu,oDni8r;cG7r;cM9r;cd`o`4VOr;cOYrrD^ZquGtKoDnhW
r;cFVr;ca_qEt2]r=S]&oF_$%p(@<)ob%*%kn3Ofr=Su.q%<K9r;cL&QiPh?rrE"Co`4o8rW)kAr;cP:
rrDtBrW)kAr;c_?rW)e?rW)kAoDni8r;c_?rW)kArVuour-A8ArH\>ArBp5Xr'UG`r'UD_p-\i[r'UG`
r'UD_qa:>_qEt5^r'U)VrBpM`s$Q`PrW)j`r;ca_rW)mar;cd.o`4n%rW)j.r;cO'rrDs/rW)j.r;c^,
rW)d,rW)j.q#L<mr=Su.q[rf-r"8l-r"8o.r=Q.3_Z9X\o`4r9quH\@r;c_?q>gJ>quH\@r;ckCrd"DA
r-A2?rH\#8rH\>Ar-A2?rH\>ArH\;@rd"GBrBp5XrBpJ_rBpM`qa:2[rBpJ_rBpM`r'UA^r'UA^rBp2W
rBpM`r'UA^rBpM`rBpJ_r^6Var=S]&r=Sr-r=Su.rt52Aq>gI+quH[-r;ca-quHX,quH[-oDnh%r;ca-
quH[-r;cd.quH^.kl?J=rHSACp&P&:quH\@r;cb@q#LA=quH\@r;ceAqZ-S?qZ-S?oDni8r;ceAqZ-P>
rW)nBrrE#urH\ABrBp5XrBpJ_rBpM`r'U8[rBpJ_rBpM`rBpG^rBpG^rBp2WrBpM`rBpJ_!!)parW)ma
quH[_rW)m/o`4q&quH[-r;ca-q#L@*quH[-r;cd.qZ-R,qZ-R,oDnn'rt520r=So,r"8o.r=Sr-r=Pq-
aoMBcp&P#9quH\@r;ceAq#L><quH\@r;ceAqu?]srH\8?rH\#8rH\>ArH\8?r-A8ArH\;@rH\ABrBp8Y
r'UA^rBpM`rBpA\r'UA^s$QfRr;cd`qZ-R^qZ-R^oDnhWr;cd`qZ-O]rW)maquH[_rW)m/p&P"&quH[-
r;cd.quH]rr"8i,r=Su.r=So,r=So,r=SZ%r=Su.r=So,r"8o.r=Sr-r=S&iNWB$'q#LBor-A2?r-A8A
rH\2=r-A2?r-A8ArH\8?rH\8?rH\#8rH\>ArH\5>rH\ABr-A5@s*=VErW)map&P"XquHX^rW)maq#L=[
quHX^rW)maqZ-R^qZ-R^oDnhWr;cd`q>gI]!!*$!r'UD_s$Q\ar=S`'r"8i,r"8o.r=Si*r"8i,r"8o.
r=So,r=So,r=SZ%r=Su.!"o2Bq>gI+rW)j.r;cj0ScI.<rH\):rH\8?r-A8ArH\2=r-A2?r-A8ArH\8?
rH\DCr;ceAoDni8r;ceAq>gJ>rW)kAp&P%Yp&P%YqZ-O]rW)maq#L=[quHX^rVupcr^6P_rBpG^rBp2W
rBpM`rBpD]rBpPar'U/Xr=S`'r=So,r"8o.r=Si*r=K#AquHX,rW)m/qZ-R,qZ-R,oDnh%r;cd.q>gI+
rW)j.e,Ya6rH\):rH\8?r-A8ArH\2=r-A2?r-A8ArH\8?rH\8?rH\#8rH\>ArH\5>rH\>Ar-A#:rBp8Y
rBpG^r'UG`rBpA\r'UA^r'UG`rBpG^rBpG^rBp2WrBpM`rBpD]rBpM`rBgQPpAk.(p&P%'qZ-O+rW)m/
q#L=)quHX,rW)m/qZ-R,qZ-R,oDnh%r;cd.r;cfsr=Su.r"5(lg&V-QrH\):rH\8?r-A8ArH\2=np137
rH\8?rH\8?rH\#8rH\>ArH\5>rH\DCrrDn@q#L@\p&P%YqZ-O]rW)maq#KtQrW)maqZ-R^qZ-R^oDnhW
r;cjbs$QV_rBpM`qEt&Yr=S`'r=So,r"8o.r=Si*ne(j$r=So,r=So,r=Si*quH[-r;cd.q>gI+r;c[+
W;sg9rH\):rH\8?r-A8ArH\2=np137s*=WiqZ-S?qZ-S?oDni8r;ceAq>gJ>quHS=q>gI]p&P%YqZ-O]
rW)maq#L=[pI"o[rBpG^rBpG^rBp2WrBpM`rBpD]rBpJ_qEt)Zr=S`'r=So,r"8o.rt58Cq#KstrW)m/
qZ-R,qZ-R,oDnh%r;cd.q>gI+quHR*joC/:rHSACpAk/;qZ-P>rW)nBq#Ku2rW)nBqZ-S?qZ-S?oDni8
r;ceAq>gJ>qZ-V@rH\8?rBp8YrBpG^r'UG`rBpA\njEBVrBpG^rBpG^rBp2WrBpM`rBpJ_rrE!bqZ-I[
qZ-R,p&P%'qZ-O+rW)m/q#KstrW)m/qZ-R,qZ-R,oDnn'rt520r=Sl+r=So,q@TM'aoMBcp&P&:qZ-P>
rW)nBq#L><oDni8qu?]srH\8?rH\#8rH\>ArH\5>rH\5>qK_u=rBp8YrBpG^r'UG`rBpA\r'U;\qZ-R^
qZ-R^qZ-R^oDnhWr;cd`q>gI]q>g@ZquH[-p&P%'qZ-O+rW)m/quH]rr"8Q$r=So,r=So,r=SZ%r=Su.
r=Sl+r=Sl+q@VZdNWB$'q#LBorH\8?r-A8ArH\2=r-@o7rH\8?rH\8?rH\#8rH\>ArH\5>rH\/<qfr/A
rW)map&P%YqZ-O]rW)maq#L=[oDnhWqZ-R^qZ-R^oDnhWr;cd`q>gI]!!)fpqa:;^r=S`'r=So,r"8o.
r=Si*r"8Q$r=So,r=So,r=SZ%r=Su.!"o2Bq>gI+p]11'T)d7=rH\):rH\8?r-A8ArH\2=r-@o7rH\8?
rH\DCr;ceAoDni8r;ceAq>gJ>pAk,:r;cd`p&P%YqZ-O]rW)maq#L=[oDekYr^6P_rBpG^rBp2WrBpM`
rBpD]rBp;Zr'UD_r=S`'r=So,r"8o.r=Si*r=K#AoDnh%qZ-R,qZ-R,oDnh%r;cd.q>gI+pAk+'gAmK=
rH\):rH\8?r-A8ArH\2=r-A2?r-A8ArH\8?rH\8?rH\#8rH\>ArH\5>rH\):r-A8ArBp8YrBpG^r'UG`
rBpA\r'UA^r'UG`rBpG^rBpG^rBp2WrBpM`rBpD]rBpA\rW)j`rW)m/p&P%'qZ-O+rW)m/q#L=)quHX,
rW)m/qZ-R,qZ-R,oDnh%r;cd.r;cfsr=S`'r"5=sg&V-QrH\):rH\8?r-A8ArH\2=r-A2?r-A8ArH\8?
rH\8?rH\#8rH\>ArH\5>rH\DCrrE(EqZ-S?rW)map&P%YqZ-O]rW)maq#L=[quHX^rW)maqZ-R^qZ-R^
oDnhWr;cjbs$QV_rBpM`s$QY`rBpPar=S`'r=So,r"8o.r=Si*r"8i,r"8o.r=So,r=So,r=Si*quH[-
r;cd.q>gI+r;cj0qZ-R,XoQ?>rH\):r-A2?r-A8ArH\2=r-A2?r-A8As*=WiqZ-S?qZ-S?oDni8r;ceA
q>gJ>rrE"CqZ-S?rW)map&P"XquHX^rW)maq#L=[quHX^rW)maqZ-R^qZ-R^oDnhWr;cd`q>gI]rrE!b
qZ-R^rW)m/p&P"&quHX,rW)s1rt5&,r"8i,r"8o.r=So,r=So,r=SZ%r=Su.r=Sl+r=T&0r=So,r=S;p
LB.9u!!)`nr-A2?rH\>ArH\/<rH\;@r-A8ArH\8?rH\8?rH\#8rH\>ArH\8?r-A;BrH\ABr;chBrW)ma
p&P"XquH[_r;cd`p]17[quHX^rW)maqZ-R^qZ-R^oDnhWr;cd`qu?]sr'UJarBpD]r^6Ybr=S`'r"8i,
r=Su.r=Sf)r=Sr-r"8o.r=So,r=So,r=SZ%rt58Cr;cd.qZ-O+rrE!0q>gL,VZ=j>rH\&9rH\;@rH\>A
rH\/<rH\;@rH\>ArH\;@!!)tCqZ-S?oDni8r;ceAqZ-P>rrDtBquH\@rW)mao`4qXquH[_r;cd`p]17[
quHaas$Q_brBpG^rBpG^rBp2WrBpM`rBpG^r'UJar'UA^rBpPar=S]&r=Sr-r=Su.r=Sr-r;cd.quH[-
r;cd.qZ-R,qZ-R,oDnh%r;cd.qZ-O+rrDs/quH[-irG)>rH\2=r;ceAquH\@r;ceAp]18<quH\@r;ceA
qZ-S?qZ-S?oDni8r;cb@quH\@r;ceAquH\@rW)mao`4qXquH[_r;cd`p]17[quH[_r;cd`qZ-R^qZ-R^
oDnhWr;ca_quH[_rrE'!rBpJ_rBpPar=S]&r=Sr-r=Su.r=Sf)r=Sr-r=Su.r=So,r=So,r=SZ%r=Su.
!"o/AquH[-r;cd.quH[-TE*@>o6L?9r-A8Ar-A5@rH\/<qg&2Ar-A5@rH\8?rH\DCr;ceAoDni8r;c\>
!!)nAr;cb@rW)kArW)OWrrDsarW)j`r;cd`p]11YrrDsar;Zgbr^6P_rBpG^rBp2WrBpM`qEk5_qa:;^
r'UG`r'UG`o+D!&r"8o.r"8l-r=Sf)rXo,ArrDs/r;cd.qZ-R,qZ-R,oDnh%r;c[+!!)m.r;ca-rW)j.
g]3T>o6L<8s*=BbquH\@pAjl3r;ceAqZ-S?qZ-S?oDni8r;cJ8qZ-;7rW)mapI"o[p-\`XrBp;ZogAZX
rBpG^rBpG^rBp2WrBpM`oL&KUrBpBJrW)O%rW)X(quH[-pAjjur;cd.qZ-R,qZ-R,oDnh%r;cX*r"8f+
ob!Slg&V-Qo6L<8pNcW9rH\,;p3HQ9rH\8?rH\8?rH\#8rH\>AoQgB8rrDb<r;cFVrW)[[qZ-R^pAjnS
quH[_qZ-R^qZ-R^oDnhWr;cjbp-\]Wp-\cYo+Cs%pC[9&r=Sc(p(@3&r=So,r=So,r=Si*quH[-r;cI%
qZ-=%XT66=o6L66qK_o;rH\&9q0Di;s*=WiqZ-S?qZ-S?oDni8r;ceA!!)k@p]1/9qZ-4TquHR\q>gI]
o`+tZqEt,[rBpG^rBpG^rBp2WrBpM`rBgPbqEt#XqEt,[o+Cm#q@WQ(rt58Co`4e"qZ-R,qZ-R,qZ-R,
oDnh%r;cd.!!)j-p]1.&k5^)6RK3;3m/W%ErBpJ_JcPZJr=OtgJcOU,rHYCCc2df1\H'AEr=R*NJcMJE
rH[N*OoYGJo`0UE!"o2BK`H])j8f.(UB&gErBmjj`W5rL_#T&eVuZdAhZ0&ErBouQM?*Ser;_ELg&R<:
rH\#8KE2$>s$MG>oDnh%P5p17ec>YoYlMfErBn@#\,cI>cN&OsRK3;3m/W%ErBpJ_JcPZJr=OtgJcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&g&Q^)JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcP]KrHYLFrH[Z.rH\ABm/[)PXT8;enc8IcrBoiMr=Q.3r=S;pr=PS#^]==Y`rP9&rH[Z.rH[Z.
rBo-9fDtk;l2^cMl2^bpjT*C&r=S;pr=R]_KE2$ts*=PCr-A2?rHZ-XrH[Z.rH\,;oDnhWr;ca_quH[_
^B"4"lMpnbrBoiMr=Su.r"8i,r=QdEr=Sl+nGrM"Q2oV=mK!32r;cb@quH\@^B"4XnGrCcrH[Z.rBpM`
r'UA^rBn="rBgPblN$lNl2^bpr;ca-quH[-aT2&8r=S;pr=Q(1Z2jiKr;cb@quH\@k5a08rH[Z.rH[Z.
rBpM`r'UA^rBp8YaoMB-l2^cMl2^bpr;ca-quH[-^B"3El2^bpk5^)6o`4r9r;cb@quH\@^B"4Xl2^d.
l2^cMr;ca_quH[_^B"4"q#KscrBoiMr=Su.r"8i,r=QmHrW)m/l2^bpU]@q*rH\>Ar-A2?rH[<$huN_$
l2^d.l2^cMr;ca_quH[_mf:`8rBoiMrBoiMr=Su.r"8i,r=T#/_>sNHl2^bphuJ?/quH\@o)S`7^B"4X
l2^d.rW)<crBp/VrBn="rBp,Uq#L@\l2^bpo)S_$^B"3El2^bpSH-G*rH[u7rH[&rk5bI+l2^d.l2^cM
o)S_VkQ'68rBoiMrBoiMr=SW$r=Sc(aT28Ol2^bpf`7-7rH\/<s*=Wio)S`7joG=)o`4r9oDnl9rrE"C
n,WH5rW)nBpAk.Zp]17[o)S_VjoG<Ho`4qXoDnkXrrE!bn,WGTrr<$!rBp;Zr=Sf)r=SW$r=S/lr"8T%
r=SZ%rXo/1r=Sl+pAk1)rW)m/Q2oV=rW)_=q>gJ>r;cb@rrD_;m/Zp,q>g;9q#L)5nc/Z8p3HK7pd=lX
rBpM`r'UJaogA*Hpd=lXpd=iWog8]Zo)SGNq>g:&q>gI+r;ca-rrD^(m/Znnq>g:&qZ-Wrob$`pob"5)
_Z9CUqZ-S?r;cb@rrD_;mK!94pj)c;p3HN8oQg$.oQg<6p-\]WrBpM`r'UJaogATVoDnSPquHFXqZ-7U
o)SDMqZ-=%qZ-R,r;ca-rrE$1p^uoop(@3&p(@0%oF^ZpoF^6dLB.6tqK_u=rH\>Ar-A;Bom-!+om-H8
om-H8oQg'/pNc^_qZ-:VquH[_r;ca_rrD^Zmf<#JquHCWquH@Vq#L<mo0`BTob%*%r=Su.r"8r/ob$Wm
ob%*%ob%*%q[rZ:oDnIpU]AR<r-A5@rH\;@rH\>Ar-A2?rH[Z.r-A8As*=Wir;cb@r;ceAr;cb@r;cb@
oDnf7rW)h@quHX^r;cd`quH[_r;ca_quH[_mf<7cr'UG`rBpM`r'UD_rBpM`r'UD_r'U)Vr'UG`qa:8]
r"8l-r=Sr-r=Su.r"8i,r=T#/m/[%rrW)m/r;ca-r;cd.r;ca-r;ca-oDne$rW)g-huJf<r-A5@rHSBg
r;ceAr;cb@quH\@l2^d.quH\@rW)nBquHY?rW)kAquH\@oDni8qZ-S?rW)rur'UD_r'UD_rBpM`r'UA^
rBoiMrBpJ_rBpParBpJ_r'UG`r'UA^rBp2Ws$QfRqZ-R^quHX,r;ca-r;cd.r;ca-quH[-l2^bpquH[-
rW)m/quHX,rW)j.quH[-oDnh%qZ-R,SH.(<rH\8?rH\>ArH\>Ar-A2?rH[Z.rH\;@rH\AB!."QhqZ-S?
rW)nBqZ-S?oDni8qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:M!<5Fd6i6r_6iI)a6i-l^6iI)a6i-l^
6hCBW6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-pAjgcr=Sr-r=T#/r=So,r=T#/r=So,r=SZ%r=So,
r=T#/!"n#eQ2pl/qZ-S?r;ckCs*=PCr-A2?rH[Z.rH\8?rd"JCrH\8?rH\ABrH\8?rH\#8rH\8?rH\AB
!I4\D6N@,a!<#:`!<#:`!;o4^!<#:M!<#:^!<,@b!<#:^!<#:a!<#:^!<#:W!<#:_!!!#t6iI&d6NI&s
qZ-R,r;cd.r;ca-quH[-l2^bpqZ-U-rW)m/qZ-R,rW)m/qZ-R,q>gBmr=So,r=T#/!"kY"g&M*QrH\8?
rH\>ArH\>Ar-A2?rH[Z.r-A2?!."JBrH\8?rH\ABrH\8?rH\&9rHSBgqZ-S?rVutE!<#:^!<#:`!<#:`
!;o4^!<#:M!;o4^!!#Ca!<#:^!<#:a!<#:^!<#7b!;6Ej6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-
l2^_oqu?^/quH[-qZ-R,rW)m/qZ-R,o`4n%qZ-R,rVup1Y5lK@rH\8?rH\>ArH\>Ar-A2?rH[Z.rd"Kg
pAk/;qZ-S?rW)nBqZ-S?o`4o8qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:Y!;-?h6h^TZ6i-l^6iI)a
6i-l^6hLHW6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-l2^\npAk.(qZ-R,rW)m/qZ-R,o`4n%qZ-R,
rVup1lMu_@rH\DCr;ceAr;ceAr;cb@quH\@klCU+p]18<qZ-S?rW)nBqZ-S?o`4o8qZ-S?rVutE!<#:^
!<#:`!<#:`!;o4^!<#:L!;f.Y!<#:^!<#:a!<#:^!<#:\!;uoq6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-
quH[-klCSmp]17)qZ-R,rW)m/rW)otr=S]&r"8f+r=T#/!"l.0b5h-Zr;ceAr;cb@quH\@kQ(L*rrDor
o6L<8rH\8?rH\&9r-A/>rH\AB!I4\:6i@#`6i@#_6i6r_6gk$O!;f.Z!:rSW!<#:^!<#:X!;o4]!<#:a
!!,Feo+Cp$r=Su.r"8i,r=T#/lN$eoq#L!urW)m/qZ-R,o`4n%qZ-R,rVup1j8b5@oQ^F^r;ceAr;cb@
quH\@k5bC)q>g,4rW)nBqZ-S?o`4o8qZ-S?rVutE!:rSV!<#:`!;o4^!<#:J!;f.[!:rSW!<#:^!<#:X
!<,@c6i-l^6iI&d6NH]ir;cd.r;ca-quH[-k5bAkq>g+!rW)m/qZ-R,o`4n%qZ-R,rVup1T`EL@o6L97
rH\>Ar-A2?rH[N*qg&&=!."3^rW)nBqZ-S?o`4o8qZ-S?rVutE!:rSV!<#:`!;o4^!<#:K!<3&r6i-lT
6iI)a6i-l^6hLHW6i-l^6iI&d6NH]ir;cd.r;ca-quH[-pAj[_q[r]*o+Cs%r=So,r=S]&r"8f+r=T#/
!"n#eQ2pl/o)Sf9s*=PCr-A2?rH[K)qg&)>rH\#8rH\8?rH\&9r-A/>rH\AB!I4\D6N@,Y!<#:`!;o4^
!<#:H!;f.]!<#:W!<#:^!<#:X!;o4^!!!#t6iI&d6NI&so)S_$r;ca-quH[-jT,/iquH[-oDnh%qZ-R,
q>gEnr"8f+r=T#/!"kY"g&M*QrH[u7rH\>Ar-A2?rH[H(qg&,?rH\#8rH\8?rH\&9rHSBgqZ-S?rVutE
!<#:V!<#:`!;o4^!<#:G!;f.^!<#:W!<#:^!<#7b!;6Ej6i-l^6iI&d6NI&so)S_$r;ca-quH[-j8f&h
r;cd.oDnh%qZ-R,o`4n%qZ-R,rVup1Y5lK@rH[u7rH\>Ar-A2?rH[Q+r;c_?rW)nBoDni8qZ-S?o`4o8
qZ-S?rVutE!<#:V!<#:`!;o4^!<#:Y!:Bja6iI)a6hCBW6i-l^6hLHW6i-l^6iI&d6NI&so)S_$r;ca-
quH[-irJrgrW)m/oDnh%qZ-R,o`4n%qZ-R,rVup1lMu_@rH\DCr;ceAr;ceAr;cb@quH\@iW/n%rW)nB
qZ-S?rW)nBqZ-S?o`4o8qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:E!;o4`!<#:^!<#:a!<#:^!<#:\
!;uoq6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-iW/lgrW)m/qZ-R,rW)m/rW)otr=S]&r"8f+r=T#/
!"l.0b5hKdqZ-S?r;ceAr;cb@quH\@klCa/qZ$VArd"JCrH\8?rH\ABrH\8?rH\&9r-A/>rH\AB!I4\D
6i-l^6i@#`6i@#_6i6r_6gk$P!<5F`!<#:a!<#:^!<#:a!<#:^!<#:X!;o4]!<#:a!!,Fer=So,r=Su.
r=Su.r"8i,r=T#/li@%tqZ-R,rW)m/qZ-R,rW)m/qZ-R,o`4n%qZ-R,rVup1j8b5@rH\8?rcnKhr;ceA
r;cb@quH\@lN$m/qZ-P>rrE"CqZ-S?rW)nBqZ-S?o`4o8qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:N
!<#:^!;o4a!<#:^!<#:a!<#:^!<#:X!<,@c6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-lN$kqqZ-O+
rrE!0qZ-R,rW)m/qZ-R,o`4n%qZ-R,rVup1T`EL@rH\8?rH\>ArH\>Ar-A2?rH[Z.rH\8?rHSGE!."Qh
qZ-S?rW)nBqZ-S?oDni8qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:M!<5Fd6i-l^6iR/b6i-l^6iI)a
6i-l^6hCBW6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-pAjgcr=So,r=T&0r=So,r=T#/r=So,r=SZ%
r=So,r=T#/!"n#eQ2pl/qZ-S?r;ckCs*=PCr-A2?rH\5>rH\&9rH\8?rH\DCrH\8?rH\ABr-A2?rH\#8
rH\8?rH\AB!I4\D6N@,a!<#:`!<#:`!;o4^!<#:]!<#:X!<#:^!<#:b!<#:^!<#:a!;o4^!<#:W!<#:_
!!!#t6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-q>gI+o`4q&qZ-R,rrE!0qZ-R,rW)j.quH[-q>gBmr=So,
r=T#/!"kY"g&M*Qr-A5@r-A5@rH\>Ar-A2?r-A/>rH\&9r-A5@rH\ABr-A5@r-A8Ar-A5@r-@o7rd"Nh
r;cb@quHX^r;ca_r;cd`r;ca_quHX^qZ-R^o`4nWr;cd`rW)j`r;ca_rW)j`r;ca_!!)Zlr'UD_r'UA^
r"8l-r"8l-r=Su.r"8i,r"8f+r=S]&r"8l-r=T#/r"8l-r"8o.r"8l-r"8Q$r"8l-r"5t0_Z9U[rrDtB
quH\@r;cb@quHP<rW)nBo`4u:rd"MDr-A5@r-A;Br-A2?oQg'/o6L35r'UJar'UA^rBpM`r'UA^q*Y,]
rBp5Xqa:A`r'UD_r'UJar'UA^oL&6No0`BTr"8r/r"8i,r=Su.r"8i,q%<T+r=S]&q[ri.r"8l-r"8r/
r"8i,oF^]qo+C-cLB.6tqK_u=rH\>Ar-A/>qK`&?rH\#8om-K9om-H8oQg$.pj)g`qZ-:VquH[_r;ca_
qZ-I[rW)maoDnPOr;cLXquH@Vq#L9loL&KUob%*%r=Su.r"8f+q@W],r=SZ%ob%-&ob%*%q[rZ:o)SCp
U]AL:pNcW9rH\>Ar-A/>qK`&?rH[u7q0E!cqZ-A9q>g26o)SE.q>g7WqZ-R^r;ca_qZ-I[rW)maq>g?l
pI"fXpI"cWogA<NoL&HTpC[9&r=Su.r"8f+q[if?rW)m/o)SLsqZ-@&q>g1#o)SCphuJ]9q0Du?quH\@
r;cb@q>gD<rW)nBnGrH3p]1,8p]12:!!)tCnGrH3!!)tCrW)irq*XuYrBpM`r'U;\qa:>_rBp)Tqa:,Y
q*XoWqa1>`rBp,U!!)m`!!)sbq#L4&q>gI+r;ca-q>gC)rW)m/nGrFup]1+%p]11'!!)s0nGrFu!!)s0
SH,Aard!Q)P5tSLo)OFDrt,5CK)gK'joG@*T`E[ErBmdha8l/N^Aricg&TM#rHYgO_>sO%`;m4Er=RNZ
JcM&9rd"#6L&h3?!!%TNp&P((O8sk4fDtqsXT6HCs$OF!\cDaBb5d+oJcLB&JcLB&O8se~>

%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (cloud_technology_03.eps)
%%CreationDate: 12/18/2018 1:00 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B3Q=sdP1TJ^9?l##C2kZ5b8t2!<n-J"p6d/G`W,k&JA-s4['sZhu6[?mcdRgqlGi(<o+":RSHjgWN3(HmbTP(HHfX,H!Y=c
%HR7iY\Rdk,SXelsnBJ6*J,S9\].`ITEMp!FhD-X;$JTjX2E[q3@#fbGh/]RM]8E*6rH>4[G<2R$UXee6j@VY2Ao9OgLF5seIGAMC
%rlPrp;=tRe'K4d29"bg<>4&AhS+H1T!UUQ#r2'S(TE4sCi1%u+UK<BJTmg8$]Ro;eHK(RD+,=jF$Nl/j9cR#Ep\hNaR['D*pRT[?
%9_dWCTc#o``;ga&#n>@'rS5iA:Jg&7ms:URa+@(l52B#KDt9fa56cT:quD'mCjJ5#_tZ9-8)8Kl$0-OZ^jf#H0NX:\U0aV<Lua^s
%n?r-9LJ9nRm9Ls46aaRs6'YlCi]mFc$ktu+[qt((8[6*Mpta*G3J[Lbh_/I]()QJ!SE%Ir92mSM3^Cb!%?dTbh7C=Xg6\A&i!ZW1
%'OP-)U2EXEAOA2EMg;ap2mDQYR&gY]6.M:7+RcqV#=Uu6baV_Zp[,WX;)R*Oo3kNK@E/)gHMlAemU[BgijRdU6G%SHrt"UbB)i)D
%6\#\nNO\qa=mlE@(;W>/g"f[\DD5"GlBOhlCo1.#IZ"h/;>WKDJh4;J4e1/i>bHCge[sOlI`1W6CbS!)]8i@NXg^.6A^es%+lVZf
%!E7RlgKr1tD)W9BY2f]6JKINt&D7.DLQ0DnI%:(^OH7(urOgul=Uot!4NeG5ZdGr-'$9[G>en)[TmWO3K^qWl)lV-N`_D;GBq:K3
%PElV%^O%C*34e<ZSMm6(;UGhl!W8"2.`O06En$'KCtQOg0B7QFMEeZtecu&YD>`dHpcAoSGGuj]0]t@n`i$8):MlSn<[q(>X*Ga%
%o/uroo<=VF@56*/<+Mb4Lh4F7bCoAGWeV`5$UZJ"hs`Q?/![>@WJ"8E-%&T?@@9^kT2mG58(B+)/5W<b,p"lRR7G2Dnl)V>T9CVA
%%kNH[iGU9%GY)`I)'XdLYm_h1^Bo*U%^(b8iG\W%Oi$#.'GHCo7\oN4iJq7VN-Jd79N)u5(.6U@2jUFB&12%H#1&NG=u*)H2cjSW
%)$(dBO,j+8_98g@7JIr?6QGVT2T6?OR.E*gEVK]q+c^T?R5A.dEQ$c0(F$qJJA9(]&VRp((ug@dGqtdnR(,6[lr3HV%:4(<S2q]8
%diOE%nK_rgHU`MicU6`a\SX?D>X\S/15MUa;+-MG1ZnTPEQ$a:N-QF`A@c_kr/G8!6)ZEH>Y5WmO8E<[Qg?8k7e.Q/Slpf964/R>
%>GaTFO(lp'1\#/JEag;C4FA\,qrd+P!Ii>o`8FcpRBq2,R6]OqL&NeW-dp=`TXpBE7*['_&ij>pQSOYA,#qFK8P4FegQL.0CuC[+
%3N7<k&ij2WAD&atbZ.BdTRZ_c<2D&C=Va4o55Ci2nDD>8s+BU>bFmp[s7nkYSUC"C+Q1"e5kQ1SIt[qg8j<&XZ,hDBTDT5"Qcfe0
%55F+43rbaunioM?'7(__&:a<Lo&'!kr^7_XVrY@Q8ceoBKUG'J?9m$K@A36J5?tHY9jr27Fn2H/W&9j>GGnOZNX5;A!k1L-+sI-&
%=3AUFDS[n-:>k-hQ8]_UTt!H'lV&9)JVF5>aQXcW=!*&PO!S`IX9u)^Sm,#c<CjF$bVD'i3,ZR4fS40Odtf,G%pWekSkQ$2R#4ia
%#9Pr)3jra&n@q</?\]dC6o:r"JJV4[K2tV[C7l.7le%ltd9o>5$b%7IbXsqLUq^4b)kg9Ja[G+h+fQWRpIo$_bol8<I/Jh-"FPp^
%ddRNP1Fj=nAZT5#<YP&G:JclhP#5V(r#F=Bg^oY[#A_4t"5*qB*uh)&YE[<)/Al&M6$<8a\k'h-5\u&T"\oD].1N.)2*$DQ%^Zt\
%Joj[`IO(nNnqKA2fIROT+&?.pnSrFmfruW]1.V>'lrfuALPAD^-RSFkG)D6H7J,`n&K1R0iB*o9U2@,Y)B;Yk2OF^pGliaK%Qj/o
%l<*JAH(_aae3ToRHbb6/EEle>"C_Bf/s\m)9h^=H5Z)Mg3R@JW<8^5C7<n,\kP--^2BYpH#)Yj2*KWNmRAUA5jfaRH.Y4(.4HGN`
%4fq^e9bp8g+it'+8O?)>)ej[D*\/aS(E(X6psOPr&JKe.@]#-<O>naIJ.RIUX^f,"OK29a5`AEV**.[^2WITCA$;\".nlO&J=(VT
%l&b.^jOA!A;%0$6<`T>9"k3c7CsYiu3aBcNqP/]Lh!n1iiq-U!T@?tn`DEiOc=NqZKuK@f%Z>:;DO$\AW1l!4Jg;L5U1S+ES%+L#
%L*U<t9@Ta@EWBX%PrP^\)o#nI63'4Q-d#ZC'2(J]51.r)6`brWMa)(b:IBLVV3/<K>)0rI=HnS5`'h%U,m1B1W<ma9a?&EsW#"Y<
%m+KDIfI6A3i$XQd3^D:&*FM,<WWNg4d-qD;(u(t)L\QL%jm]fp/.^:S7T%5gCNuX*Z`Km<LpA\94DQ05:nRfh$O$'n8.>K.U:E+;
%^i:)9PX-oUTFoOa6AkKp,9@n,KcsAp`!lOK=S!5p6:a`D$2KcAXUp8F'GWA6`2LU6_EG,N*$J!X.*,#ELP%69Ka0&bN65(fN6aqa
%#R+?EpOER&/`PZ*a9-$k_s3)W;*a84U*c<eOQq_r\J.PUaKT#%`0nXeiB,*\E[gZeZ)!tpO?F?W#L&i#"sREi5KKqI&'P&6(93BS
%OsDLQ8p1sAFneo#>c"qtW@BEWT:?#B[0;@!b;`-Zr*:)1N'$<MqMLpQ>8knad-(0_p4K5.p'Ug'(83+W$p=)_NgOXc0HCc0rOZ:P
%Z!p(PlO\+rABfj@Jha'u\1uEL32%VE/l*RT-2.C^]]#PJ-&*]J"N;?u9T"f"DoA0([>Z5pnf%ur+X)9cMA$qeEi)s^<7mWe;oMcH
%$0W.]==!LT*k:PbYYGmiR\a:"%V^K=(8r/2M4Z'l+j'pO,>A^\f-Njr1&X0HcU_1t3UamE@[LVbM<[4L"ulW,.l$2UPY@0POg`XA
%*YbDY'VC*?Z_G8;jj2,R>_F/RU0'qgo`q!a7]%A1'8)gokTp/?FG@a+O`,e%bd]_[hh(-044slTPV!Wi1/.^B&got!W--q%9?U[5
%YnYMF$+MK60;V<5Q-_>ZS*$,m"IgX5&u-0G)Ta=]NB^Mj@2/'dpl'rd0WHAY]rZQ5jJ`rLgR%ED,;#V7gl+=oIH>3u6@`oED'?t)
%Q4[;W(G&Hpi(mE6.%sb`Gq@G>WU*k4>rCu<g]\V/-Y3SjLJhJ%4j#gXcnWV^(.M7S_h^fSA.kX+lARi-0nDG;]%UPk@l[71XuKU[
%'nd&@IE8bQin/'CW(NWLjQ)E+7AF:H<A>1P%@+MDa[@Vq3(t<#f*[AWk%9:`,^5d`Y;hM@##`qoGto+^$"pJtLX1X1A/Q"laO0Zd
%+dDh`'mHs,V9^?h@6Ikt@mqH)6ej$s>Jq'-X1lSTMOJ(r8W9A8hcX5Vf*-+&O;DjK/[8Qh\2l]^Z<scY==4kaH=+fhU^kne-\g8*
%G\3[cf[#aF+4ET[Y(URi&Iu%e::Mej5iY%BS]`0NDMtp9>\FMa5a/#6KQ%PL56t8WkSb-QE^'X!R^)*F#Eb0Aei=nWhb.K9MVLmk
%:T.b0OcbmITh,X<>X5<We0FjPm.9L9V'aJ3T+SW+1j^Cn1G$gL@EI%^`cVQ2en`L]X9*ZE`bQOE3*6mVcSUJ'/!;A=moTSpAZOpA
%75>*`F$e)j2&jJ%VV]_^'5TpfE!7m!/87dM)41:g',Q>EP'S1aP%#b\.+dWaP\D[OQM$5FAP^sg5&O,`8e;Z8^'`:SYpp`+&Cl&3
%80Pt%dMK;ONs&%0,Jgc9ko,=cK(;#lafLAF^#\Xh6Bg+8ot588QmoNO-0([Ff,-IcZEr!Jl4_fY5:BMH'm*j_&:?fF!IK%G6K7d&
%5e:cAAKt4uFWLd=aF"6F"Gr(QM7%AXR8IX'Q_f5,-q7ZKV"9+2e)82S^eOG?LRjN4>Z)isJb!WEZpNWG2BsY;$1md;$ML(p?Xt9i
%0\e%%5i]e8<!$m/D^E%ue\#p^$=YHYHO\c>e1bX"THXUU@I"QP8d/F@G=;"rF@g_6+N%[jG82?uMQXl\:bIk#jjfO8jZ&%fXGBP\
%Gc<1a\8i%K,b!\t.LDLI,"aE<%>A>=Jc^]H*GI]?<CrCo-,g30<MJe7[SeZ4!_fC4EL`EUX<!.>&lVBlMMU-B"uM`me&;3rZYIV/
%LN<DEEj\RfaON:FaoE'76^'JZ=q6>gV[+U>,K]6q4t;:>D6"EuQA0sbV4m7<X]XLRTAK:)0%d@*-;m9_`IphEP^KbB61_6aYcn;,
%W"EL8HS'7I$1/].$Aqms\ucWNQSsIODCfuu/0WinRg!i$RD>UN%#ss9:-FCuqNIEeT5`uDZ1RG9BI0\aP]j<*kmMGX,,;6^YYQ,<
%=11T:Xf8mNF^6$hoTP/`-_J;<&8"66+icTLV';HD*.0Lpd\+.ELf#+$p>%&U.YrG6%>#gH=Q3=OouNSUQR++r+pE./pL3ua,mMh\
%9Ij+@61)haKI(FZ@[P(,-M3]G5D<Q.0BAZ9'n"r=P.fOT@M"Cr't4&S.Wo$n:mm7o0*\+_8'7C>SXChpjH@U6n0q@4.18[)=-WHZ
%'7J*#$Q2U2ZA\Q)%f8rH&M'j.(e`OXClIfPM']C"(7h4ML/"I?Q2Qb7YK>]q779os0o,-f9bP]ZT58)]:-j3Qd^g_M*.uH`<B9hG
%aHQhh6Q)72Zi?U+!TDLJ5]IdoLPsLZj_;?H(p<61,st]$*uo->NS2Zib"0s?+<'W<fqXp9`,4.:)#d)9\3h2`=#d79h(Y:P]Bd][
%-6%iGV:HBYLgmA--R.uf>E.4EGaeOrcOSuQn+pC]?V,d3="U@IDdp$4^]*[:57:6[)a/GUd;JW[2k+H^J,S8&U"28aF$'&,SE#Ab
%HMSbnoZ9"N:UY'1O7.M&4VN8qp]7l,59@UFq"/uL!:"COi[@Bdc:@Qn#8;DI]SsJQMuTeqDW7"/IiDJ$X`jY-E@nYDq@3Fs^+I#?
%PCKeiKXoI5"4(6\TBH!#j,4.S;UN=q?%BP-T[:.40?`9'NMnFA"mXO.nhWr;EdS(E8/h7+[ZAI]j781?Cp&VN3!'E]oH`Oh*4N?4
%r%i5tY-EIo2Tl*o)c8D+CQnV\rVln`J[iEWa9fW_49LUS)+1$j5G2X/8DJW[C!:S/Et,HTs)UFJ-5OrLAa1c1?K@!'\68.qpXCpG
%Y"2O.:KNiP!pm^a\>N"Uq;^bIeYm\p&kR2oFJf^1$%mSjO;:1mR@Af3,TAa<0MEN*eT(,1R7h(L>.(jCiogZ8CES2'G.1dp`.pQ<
%h)H&UQD-jDIbp*f0C%(mZ/+_NjGmEG`ns%"94Ks'FLJ&**2,1L]U4j*"ioUEY*"grVhrjB9>e`rAn7cVghuO;RB-<V9J&>'E1Y"h
%8EP:.2MH=@#P:e\7Fh6]Gu'eGh\$Q8nOTXq"WF0/>*V(J*skkdKVm\kDkG(%7Y_S=HHD:a9jfN"!ak4HMii\D7@,rQQpOJfla8eK
%1a@t@fJ8537Gt]Ce5%Go-(O2*HF!f43UG;.0fs)]RN.?pqLTDt=r^6m$gm<8$LOYJ_dio<$2E,`s1H!,dBb_?IX(X2"!#Z?*p%^B
%^?8PTYBRT?Y?J?$^6e.c4E_IIInY*oRToX_<MKj2Q[t7cqJ!,PK<Ob]$5V@_W4u%!U>DiVj!L%qE_eT_h;faYlMa$Z%N[71aP57j
%;Ei/b3J8HBkNNn77ZF"<E^n-s!ONGmS'_t;Ke]Dr5FrLRL!::X;2/%5bR]_R@SXqO?H[jE(7H"V`nea-r5aE+O4d!2'P$DVr-N`<
%Qpqi:0&la'75k;qZJ]Poo2iWV]uY_`./,^ULhBFN>*B9?ls9!Y]@!6j(6,7/T%<g_HgT;(BXQkqYE=NEA\k>pOM'OI7cuVn`0GND
%]b`W.=YsSpq.V#(C`R]b'\Jk-@#)n`=nF7mQmt6n7dN!__!tt-\CO'\<9+#'W6K=WT'RZ?8!EGj7Qd:91TV\`bu)&,jW%^.C%9e`
%X4OMo)]VDjJl*kJVMEL=!GY04Y2a[.bH),N,XnU^0;[7MFfRlF\d[ThRmo\:Q,s,Q;NB(DX,E8!/?eE1`QE)'Z<OEsIMJE'`l]od
%P$"gPVS0:Y&>NG\lt10EGLhd>'H4/Yp!.#\2bQb]Z*[^dm1r@,\R+"#7LmmTZ6=XXa_#3tVoA]9U]kO@RZo$qX/lu><H![M#ZINe
%aNPirW$8Mgh7n@KEut;TG'o9Nm7nur<3+P(.k^ubP+pF3#IX?.hAiXW;uZ];*-KH</;?G@4#Q2?JnEH/9_SCA:ma@`l13;-AnSo]
%Q>+'Je"!CLX-lDZWn#s+&+<9=1.,7(WD-16>d]N\l,%?`#=#9Y*BmQpK&XoIdap#s7i%U1St51:4j*t/UIH!%O3W8R;KQY.JIJ8q
%)P:Y_pdM`-Tb96^MLK)$V]Bum;*/:'L.b8LV077:)JNX/^0;hOe(0oW&ghAEY;3)c)-lS+=b9;SEr9R@0)Ns/?.+X,GO]$R>[KlX
%@-N0p)!M@NA'd+Q3e-n(jEJQr2PONU;idBdd9+Z%%f#9Rg!#6N1,@L`MuE+'pe:pcWXSRfog\2Fs&,K6:EX`0Zp9@*d:F*0^RV%R
%B*`fiNl!T+K/poIB*K@B/3):g4V+;Gf2FXgF5oR3]M8;ah)k5:0l#=P(KYT8MoRT^2DTn;pr=;pH/+5Nagq?f+e7\bm`+Yc(l:8t
%*F'Z)@LmahLV28,rk%od1E:C=llf$BA?gp&fL'!3+YWPNab&M)Z=U+L[&.oNDiD<J;2,YJ@c)F8DnO^]*i77"qo4PBiu-JS>O3;)
%625B6^2\l5<ipgof'C8N<YMQ)1CK6Qe<l^%Q9iF]g1RW:49X7^MhdKK4tXEr`/R7PYK=jCn/Nnl=K](NR6p*8'rJDjb,Y!;c<I=@
%N9e2\[n&iuDidi=N6rh9[YU$i<.lfdL;*at13X<WS)H%=q]i0)m5T!dJsD6q60.=oXjoZ%X[_)OD9''7<]b&VgtQ&OcPH&W7Jn]h
%H!\G8B#e'F1@,4`%JVG`oLpbs2*2af^a]+UrMl4Kl6')Ib$g`ZSH9Bbg$Wd)r&Y-M$]Q1c[EU#PRl<4)!aa"Y%]S6Fhug]8#JAmd
%D``A$V)3]21*nXSM*UE8Q0BmYZ6QmYmqZ#Pr=jiTPssVB&U7F]?5A*YIn&?bKNU;(,,-b*Ioun\(4hf@i+3LF=Ti(1nU[%k\OSS+
%cY$hk8;CZj1Y357Rs$@WVd^8p+(;^"2cfkMOO5mBdsPM)Ol_aW=hh0bb@M3jIUP[2H!"<R0h[@:ZYpRsg>2-Tp9oiJ]t5B:8&j:"
%`c6_BbH)Z'`GJ?Xj#ElHf$#)Sm!<ka)lGhhMd)]heh'W]0s?KSS/+%C9oDaG@<Wa&T")YYj(jYDXs;PNLQ99=+Q4>2Nl@W8kE.8I
%7.NkD?ba,&0GQ>oRlB8BYh>,*p%Q;62sYmrRF#*L%p#hhk4d;^RhKXC>^J3A6qu.\SGR(T12)5B()p8CU63TM6Pa=.2FVQCL)`g!
%SXjo_/kSJmY%>gmQlFSpaP@it[5SSffiD<iNE3+")<WNJNMq06RU]1[3i^cC5?<_j-NE3u[Sp=6DH_FS0sQ1Fj<u6:o--X=AA#I;
%U0l=!F0M3sQ+pqeR,5@NZQ&9PF=s:kl`\a]dVUp,Dd[R_hoqWTs6ClX1!-shJ%iG@Dh`,si_$u#bpL](2=PMA@4=9j&X^&F;H%g)
%bO9JDB'-JM9t5(RiU>!g^N2b)K,]-o:'RD\lg&_Ci]a&cicR<jVeA8aU4lD8[h!"hJp`fF?(<$E7.@,8">,5]^H+61'BHK>88`F!
%Ho;JV/P_DRY$J^1VrSW5EOLhdiWT'n(rsT%o%>^WM\G.ZgGlfdoT-D>o,'dm[3X2e69*5HrOJ-QZSjVS7k)a0I/MPmbU#d7X;?J$
%g"U<9Y4emOkg)rs\a+sIL"&u'IG/JTbq-'6R%%CD]THVqmPO4IQ$3)=#KUO<Y1Ha(>.?FoLY[9c3bg0"Fkd8G*Ru*sQn_Te>0*8B
%,7o[NX&_AV,`V+a`(W$Q9iEfEc=U:ERlNk62sd#c9V/T$H.g0_.)qZ6>oQVP1F>b3*gQY'"O1MfQY2ns"<H[Y*J`9`X,3<oai@+q
%A:OW9\7s+4gu"7!HkS-S=O,iUcho@4^G!_d'm00K8*=<Y.K+=8ai(AVcQ);:r.ON!o+H0*''sQf!BCWk4#]qQb]sge50FP6H$#s6
%NpC:`/*Q2-3))AN;De+XohD_WaD:7iic_0Tr_:5!H/'+BEZ+R_]$Y4:I[`4oQmt8$fqq'jX:SI0f;p%;V&IJQ3?u"@Zh\%9NVR*@
%F.ph?M9CcT9b*jC%NYp?C.HOo=dD!#bTP73oRVX_O*^_oT/Q:YkD]mt0\9%NP?ro+L<U4)]G2?E`<td0q/qg/q0Q!jJ("Z=02J%_
%QRA38G\N<chMm1A:<MM/ht5+\WdjX;h%g=3J(r3FV?lj:cGjGK,$?2frmML.B3)6S]%YIUO([k2<>HfT`MTP9r![u+b/0FGl!_u"
%Y8^?)%-FKhX*<lZAs'Bpkk'H=[J6i[b]Jgj:`te0jX`K[HJ*#+QGlnhdjBEk7;,Ad]6*j_@HifX;gNIlVCAQ?F0_7:Aerdo<dRo]
%7[,25P:A[HZl8UL*+cWH[2Lp&]<*V7GHL)9OGXs+76`Q3*I+sIW1D?1jc\(kmT6NQ)EYX@*Yh63>?!O:4!)-a$kbG`=./.1pB>$g
%rLh_9]:^mB=$>l#K\s=e1-_6:MpU^!:8+>TKeH]O+.iXn^AZ1I/:Qipj5MTDD(ac"r&/`rEK$(ik=0@c!q^t]!,\/+pX?+/$^pn:
%17'.VE78AN!so_u[ue/J15DUb)_>cr_&I*kX(6.u"b$Cn&^*FkG#YO:ZGccS_.bpI2skY=>('(\B?hOqh,aFLU=EqJB@o.IBYM5e
%o6C_gQ[o8Ic*u&I$dCU`RL_6HCN7deYA67e259Q3nA7g^n=>ao\O8ZU#,cMaL1T/2N(0-*PUWK*A4%QaeKe)+RDa3Q+E8!+HXW-g
%38<Zp<Nft[qj8cjVp<0=qPeaZ)m[/MF5@C3bl'!dRrI[m(*$rbd]"2Vrn?G)p7!GqF*u)/qCTrB).*U(l2JctL2/D#/Y9SRYO&tH
%.KSE.ZZr$`#,YV;c?`5$*3^Q?J!4U=T+"-`cP5"(Ai;JX4Zq\8_BO>S@[]L#I]L2-C\8l#o"QuV1[bt3\9fNNX,f&2I5Kgt8h=;i
%WSt(++m3d9LO"+fk=p4>k=s]3?bDNmT5,G0E=r+)OkuRQ/^^ZEaPopa^MssGI%\G9;*UWEoNMutk0[jQ37bW2eX3ou\k(A=8c-4m
%eQAV^r"]NdnQrGh]KH'SYHjXiA\kImb\mnpc-N1:enU,Ng+9GXroRE*Vj-)thOX]5N_E!fqV`*7EVO&i2Y2@l,f<4(77:YNCRmm^
%@jYL?i!)S+ZJ_sCB[#h3GMZkZ&^a]K1hLT:((lNp6t6hVR)Ojc?!E-ZD4(7W[?E"okOFO!^AiE7[5OTRbk[<Bgk9H$N11RHaFqi'
%,LV]_Tegnr`Tm0NV`3gIWf]4UDoS6h2e-tX]mi:7O)%J.9/Sn-++!H`K`N90RYN5ql+<>ooISk#YZU?GepG0GhTOh&/Co0SJ\km0
%2gacd1Y-mj;KWfA]kO\E1/-,*\MnlY^#/]2jMc^hZ/Ah;p_F7O`IdPj0DJed:`gL!pusa^I2W(!&\$q9atoUY7GdT0aBuYiQfjir
%<M#pR5/U6Q3IBB':!$T<h/D#8c94ZVB`4KUao:EA*Ia>&qNGh]>,\]?o@60Q9d<O7"t?`,EIii7qVSAqDSd9S)kaN41T[&.8%tm?
%hph*-n2Ysj8u?<iFhu.\0JI]tJYuX5`d&/>,E)T6fEqJRm0(_9@*OVgRIfgi$jV,?=l5&njd0Ce@B/#<O1c.^^hF"]RN'G<"dte9
%.6GVT`DjF)Ra&?^(cUGh[Wou'Q"f2YaKQ-KoCrbqRBj4Lf/qTDW#B$^c0fIk4dRM9aN=I&"(0=&f?&)+?aI7_ZJ\D,OdT;:)8]3k
%UXlUmBJ)[Ca*`-]).mJe4R*QnJTc7mm*)nebOY5MH+`Vs'9CDN$Hj!ZRN!!-"dtkZ_LN'CG1LP:A]`]%@agdh$rbhrA[+V)l/C!L
%aZ5oN8Q;b@]CeCpf[Ze]['7]GXEE$'kH>/JanV^U:Q><B3RR[5A!Taj\^\"5BXX@4fWSKG?1l3J+/C5S.m,Dj)YI\^A[m8o)E"P,
%XXs3DBgnqRP`^OY:?1q>/qk]4/QAIa?dXoCk^^RtNS57U$SFFkPg8!&r1=D'FB3<:Z6dIKVS'3jRe<^T,6.F^NSk"GaLZaDDDSs,
%$^p9Sb!a@'be/T^ju=##dko:[@$hhK`cIK(;S?54.#Ua>(:bhL&in8^=n?*KjuaG+K53Ip\L<l5CA)^GDM15N]h,a_=cceIU+C=^
%rYO/J7cpG4s+"@=9M/jXebUI+AQCtZ74ua,kdR%MMirq;AmU2IUg0-8aNTRls.-bYo9`I?BeFm%\u%KSoDR[M9Gq/pR@(`.2s+`s
%Id8DZ3J&2mX!-<nB=iQ%45KSms/q]4c(d_N&d+Yj]75:ib7pk+:Y["nMWXj1et9TuAteGf4%5Lp<U2SLd:FH:6I@A!h*TM?U:XX^
%1l[^lAka^:K"2.JH.?Zt6RuGUBR*arMjS(W5P`q2]t1(R!C,=Wo\fHbh(Xi"Wn'4jF2`=+F-54:RaF-oe@g#7`]33kNh;W37\bFX
%![*@A[9AP;n@Mc8)"RIDK3V^k#`qRfk;T%l@XO!JW"J#Fgf^nPS7ri4KE#)ee+35D5NHI2G5&6<UCh]8)Rc-;^RFd2MSrDdfkTY3
%"'n;WK0]Q[=MMFb`2\cYgOijYgG]Pq`8.*!kBNSL?X2(L9H1^u6"&@u,*=fi0C\>`]*N2@@Lq_Z&,^2N^3p+9?\!E>2tujKOfSEg
%*Zf:JG;\T356;gd5nfGEI)sUO+k*qP`rbho/^q-pPBXA(?>,_"LL9tp!M"W9=P_*[F_orY*?(Li>/'AK.7;#I!i3.+<"0FKg:lZX
%)94VOi-15E0II;L`uB8p'0&Nn`s>?YY7\>m%F^E'[K%`i^Gu6,Op>"lmL[""pttN]:'UM$/DoI/p>#]tAb]kFi1q<HBj1;N!Z@ad
%Nr7nq5Q<YPs5PKaoKW/SQi#ij2LKN6&,:_E*^"BMq!Q!0I/;^_?_KLj#XgGP%%fr9EBIbYcON3Zi/;N/%Z:G[5!hph%[QF6\T`b"
%_VQ8l4fM+OZ^Sb$XEjQ87bmCNN84C]@cKPDDippe6Sg!(HimdG"U)\^I5+bJY@TIX*K-o_!&]1g5:'k](FVq_p)fliXHieXJ,@c)
%<+#L_)mVHIUlR<Ib0p=GA8pk#c`MPG5>jWqQ(Ggf^s@B&fmX-;:d!A`-3RC\rAbh+;t"gXJSteVSf@Mp_[EU^4ZrX^FkUS<;u`KX
%EqM^gocR']\#MU81FYh"+R\'L-PCr=Kn#t)GQ;FVrK,'p?"GFcSE9cN1Oi=VUR^V]-Y&JhG>FOm2*3187d\Ld`5N#s`Wm/YO(pMB
%oUg2#Wma#B2J2No3g9f2*ld"ekC@87HL]$3JS_44Zr!pQWa<[Y""Q2@=nM/nMZ97ZA(R8q:U85f4Z^iLb)aH]1:pJWr1@$t.t;/4
%$WqR1QlPXtp,_$\eI8Ckho_ZDSI"%K[%X.+Z?,=26>d8\+.<"5O6:,3Ep)em);ssDd,^`e]m=bLpp(pmG2BV90DFNMNZ)C=T,>/9
%@JlK)]tNceB&4'sa`pP(guM>V#[W)N9Z/@6Hdl^?g7-ThO.0iDPEF&\<](d`nm8^A5V;`+fP6D`la51G+(HZ^lgD1H)/_=*_$jA5
%)0^]),]D)Xb;<kLT)^Z+'B?T[]29"WXhS9uiI="XgGKQpai&7(B`]/MA;cF,Xs#I4eJbn+ot7LHk4X,WlWuMo&9YR(]D`mE'@.];
%SQ;M`1<+mZDQ;-&gpreOAa/5&gG4'/hf4j(RF6:<-QX+p%j28UiY)^2o_l*cK#4C!k#<H04MKZpY0m<$MOSTI\)33-EAseta3?ln
%`3>+\;=hF:S]A;>eogFbb$r+,ZB_u3NbYtNh9icNBgcT9e>RTf@96=h;SX8,UhZsXen9Yd[Hi-&RFf;fY0cLC'VQgVY2ralAmm<,
%G>DF?]9]MWiJ3qg4&'<k%=q%m)'sL[KOoQ>k5DsK;TMXMpUhLW8DIT=;8@6YgE#+=R;8k-_Si/e65'Tl1i$gE]'ZHL\W5Bgf)X`+
%YN7eO5puB0,<g^RF^Y6J)oGK^$9/K\%Wg7L2=P=X::HF$_NekufXUlmS3)W.h9E(RlJ:[2hPbXp+(ooX+f`@NVCk<^5GQMt`[$^c
%2]AgIW,WAUpDTTuca8]l5bCDF''[G,X_[mo0Oq6E^$t7-qS04<m4PQa$69]"c?B+q#c`@AY]kL)fQM;U(NgkVhOefb)PbCeKg6)W
%5Ak\Jj!rn9\,he;JkBnYhq^7b=[F`@f[8hbkRZ/rYBpl03O]\%))m9YfZ9U4AHT5jGJ*#uh0/*^RIVZIbStj+ki$)]ZdNVG,^J7`
%fRS#3F9jf7CVL6N0T,4FNl,;\GStXt-bq<ODjEKWGdrs2b3lX:;$0g1WjH*l#j2f3*m,Binosq47q(Im(e)\e4U2+M2!l]VZZU9o
%RZu-9[;#dr=s%U]NVYMg-AG"h%H;gH1m)YOM&<.jZq5s(s%*H8F!(u*h755JRqjI//]j@$iYb9`D7+/!D915fT"Jf\e'A,qZ$'Lp
%"ef3[bJPkdBRodS_qY_s5*Q2UeQ<KD\&kAu#,ZpE3l5WJV>I<iHa@a#AU_3HWg09]T/XQ_XtQ9HK_Ds&PNKO.WHXW"oPlgmeU(A$
%a*m@W%<S+uOQKTN\B(NNACEr'Ri826RD"'(crl/sP`S=,Jjg2>Z7&Keg\3(6R5p0MR?L;4$-dFVdQC#!#\:387"OPb;jhVGV[7tr
%&#5(<Ed1d&Aj=.rkr0U(an*dEO.5W1U+3S!P@U6XjBLq,Ip2;I7ApjI*3Q)(07SD!FdYH_p"2;ebO^ln\f)g:?UaA*c9QYraDfSP
%pGt#7(+J:(0&cu`rdC>U%uc!?qbXNNC;Ls5ft-Dt?s)CZbcQIrr4^]I?Y@WJOH2\*1U//3[]Z[58L8,bnKlQ[7;:_cL6q64YNRW]
%MH\Vq3pmDZfVQ*SPODaE[C@7O)rCQlE>OUA'=o5lY[O7MNlDY?8ca(HZlM00:bt:re7I$;R^s]#N+XgmGZmVJ*n/bEZO?CgmDuQe
%,;@V0^erA+)V=A_<hdJe89S2Fm1$s`S%VEVTF>[\FUjh8MY$p[BY+:OFu%jHXOY?G.+Ta-pNn=*2LKL(l/.3`T$JT4`KtYLL5@Rb
%]C=)[Qu@C15D3L:DBiMHc_=a@9*Q].IeE2RZ+)3[WJ<3>YA6*:NFql]>h:=2b+"_hae;shh%o+lEBFpJrJFL(A*--okZgF,<,?h>
%]0N@l'f]e$gq08L+5*M4e"+ir_Q%*MjMEsYNlR%#Vl]"nE$7!-T/JB64)E/rTM7^!203"f)BBVFP@JSuH#1HB7PH?Q+`2$"a'$YT
%WbSt6iaOKZD<[ik;rrb%*;",>-r*31GU-3cK+plp;[Akn`LZjN;ibo,-QSMD@&MQ=>%dLtVLh[#IC4'N1tm4Lc&O9J(*BH6W%%mo
%Q9Va$]9[BCEB+`0]u-NQ9D8c/]onWJLdl*p1SI5cFp>,"7B?BZZ2?js4O6YA1l".$=H'ECbE$::dFt4&'GNK+D(9loZ-,?Zi7Y)9
%2l](hNXMf?Lor,6eu^l/CRO^p?&WKW$tnA6=NPdi5Qt;s:LIicftk&@aUJ=CGO+),c&j@r$frsaU^mH;"W(Qp.Vj:((kR=(_Bd-6
%bhHVj=t4S&qRkZICQ4gMZsTRGX3j(?FQkVsGHs0^*BVhqXki62nr^o:HHk_7:PoO:AS\2":8G&`1,)_AqJeNU_3:%amY14j7Pq-E
%_kf<f_gLl350]?r;&:"fT9]tJp\$g7aSfh4EnITL>sf,Y1f+H`Y9^nF]IfjHe82QK'MGu-r\,?"CSZ'^DcOd00re37-$*7GF"lf5
%-D!"BTJ2>]M61MLjCUbl/@JL[O.8Y`oC;YW9?K0cd\CV*qV"ej;Q7rQr>MbFo5Y6Uku^YnXpkc?Fsh1Tn[W*"ZIM"l";R"k#G1%Y
%=@Nosgop`>DX>F2ZZpHg%\(l=nHEmn+W-PF4Kn5LDX1)CI+!ktZ-@j(<.?o1r*G=7<,P3UV9FgQIc]btNEV>QaQ5,(SP-C\2"V9Q
%5N?$glKc6'Kg,34&oeSCf21\VqMmO`\6lD3-"pS.R6T/_:`sIiO!!Te0g>rN-uHP_[\*1BEO0u_ZI.n<L\6nQb?<\<?KU`26(cf/
%D4/+?nTE>$glgpZkeRReUFk'Y8.13Lc-=$U_e<h-aQK_t@di0o7o,2<h-Z/u4l3L5m4B.+g)F*0/*G/]>ErERQgU4*;8.+lHh2:6
%]=kNDB&i]io3u:oe,A+1G-C14eudcdY3@pT%AQl$<^)"Lgf[k[P(1"8o^R':Xg;k-JSs%>GAag"WNC(.r8m78[AQcI=K4T4?7k@3
%pWj*@g8Vc@%fLG0mY_$QUKd`k\`eECIU'Btm<!k3\egF!Hae?eZ?,3=poSQ9(qM/g)-a"+>J&pNBE$Z;+$UL#9)5rkHe$<AHsV/G
%=o#_=d`GiZ.R1Z%X"8,;cCc,N=68bi?E\bMq:I>Yef+!XcAEFodY7_;9Msm:]lMZYq7cRp`Vj:a#R9*6I6%>UJoCCtQT&]L[u/AF
%[l];]jkEKN`4Mu!K5SPE996+=<VQ/al,#G`I9O-rhg8=Mp%[jJ[F5"4Pu?Caq#'O1m>KM027g_Eoge=\3u?\[Bfq7MG5]_<Q26iL
%>-W)A`VnolUJJS?cJcJ*LqnYNeZB2u](&hYIU4N]X7re=4kj7jia7+[<qlP?SMRn)Y&9\h/lt`sA@9)#Gmfl.n&PF4D:DVOV'cjK
%ZFTjKC&)aRD#!m/N5PO`]5+7fVmh`=+,;J?_^]SRoPQnf9<Bk.T"_=T>d7%BJ#7C]2t$f?cb5+CEEYPPa56,/P3R>_nq"8$)"_Z^
%a"Ta8hCUsKT&-O'HM!njh0A_Q$ai;iTGuq`O%kE/GkAZ><.'%=]Y;YP997]>Ebj6QCD/]&Sakq>oC^.)q8N.cdEqEiVlR4DYJ/A"
%WY%UFHUV"Z"/UlZC'^Gq+dbpK%^8q!&Bqgf/>!KabAl^!j*gF2<=;=YDi`%R:U\$A8(%8s7ITlnlYuml]/PGW;K9I!G$+dYpAOU*
%3HS2AhB/:B5sKV%&*kV*UUN\T?"'p7rcWZeWdjW3XI`_R4g1*q*h#@3k?iZ;T[l^r$kC$ZD&;nh*c>'%%r0im*D(#^!G$cLFoM'/
%(N6);N7)c#Lt5Uf\pkES[^s.<jSF\5;*n$t]Cmi0e0.B0?4"qeXad;*4h&-hI8MmPT@Ri<K;W(K<m&3&%j+"c[_a]ro9CZ*5.P\h
%R!i:GFF$>&`'u-)f$6bDABQ74H2?`NokS.'CcbuXSfW<a*o-S^PXgn6Lt=]oj3#f`lNa6on)/6bd8%E=n12Srq\CWM_t=p'l5E4F
%eNH1cp4Lfh`HoR3XhHeDp`HTtrd!.Gfm'!$r/Zj1ji=:XY\=Csj6[J$;`NL54T]3d4=h:mhHpa30,<$[D7oVh5^:j3_qK'Q#MH#e
%?[8m5=KRhD&([N=)di-B>(R[N<B[CaQX.Ai/apA!h30d)^3r\gQCiQ<ITZO!X^)Y\c*sgldD`^Zd)Pc(e\LkSj45`]Ec9Y2=?&:P
%\.@+Rh^a#6FtSI5Hr*#=s3cPi[OtZ.Y.oDZ;JL=;@JfYY?!07=p($cofCGn^EEma0\(XE?]2psOqUc(f23sktG"_0'G*<VRD&H--
%QV5s'b0pf@8Q5:(%N\)#=hqIZWnT@*Hg=>N^)n_gVsc&ioMX:*LB5DM!sO:[O&e2$B;!#?\)!e3CO@ZQIbcK1Vd\QMg=)Cb4;@Vf
%(A,Gg]qY=rG>^Ee*BD5?.Z?Ct+BN@GlH28]10m`6?EJZoRLS03Nc(>a(G?<ClLNI5Z[2@S`RoM:/;-6kfAP!,LLrDn^FYu53I_OC
%=&A\[XV-&7DQ&_)1Ol;JM_8q`YF#.Y-Ts>q/o,$.qa%_FI[T(cn>fT??fslQ's/A.9CJI159CRM$&7)Oj*.ZWoPS>m4S%mkU=\L%
%JHdMagj'6$7Kq2nd`30nX&]p1]6d>IaI="8lXM+&L/;=l*$'lR#a,%#`;]`sI(NC3?cP[26RnW+n4#<d<8ulp""lq#I!s((,MK6f
%l'.B[8IVj/_Fs3E\WWBd*%)03f_TRe'j!I[n!'eQmUkhTBb2_>60"MFWX&HeJ+ZtuP!Y2?8`;UYgkT)qZ6o,OdhRY%TFUQch$e8[
%SSu`<geGY>e;tNXV#K\4<-9*C[=O<1(6mjtC)X67=D0?rkQDi-?$)HU1W\e_>Y=Y?R_!)l;)_aDk'(%)mk;gSMTd?.0D?bNEkEgB
%/2BUR68Le%)S_(_ko?5C8;I77(`Pjp@GZhd(r.4Q;J-4%)U$8%)4P&>V>*pRMb&rfE:kES+Y!?KJ7YAF!E47-)EA6j^W?OK2];oE
%#njt_H`*C.i@$$K.26CX1nQ,sO?ip?nYW/oPSO<)eMqD2)lJo\d0n^ZW1QbrciU.Y5,DQ7LP;M4gJ-n/Z?AGrJsFHGV-C=2cie]E
%^/Oj=qgPA^lXBe0Leh(Rl&[IR!V`UA\TWAtc$?;fji#TuHtEZMT^AIt*uqs!YK7r>DV-<tg?Lg><V-_[aR8O$SaJp0qbZ-a5Q'6E
%:d^HgTq@(?'jS=6L?7BLV^X:9\@qV0r_g"+C[?EqgY18=^\VB:;K16Z]ICU#C>LRZ^HZP3Sjo?bp?S'd!c(SurBJG/O)DS/'e6;>
%EB-2%d3tTXQfEke4"4DF.[?2&[k7pk=?.CM0C3U@pk79.oeq]*]O66]r:]D1Nt']iDPqbVA=*"&4FH_KI`]_3.1[N3q*c['O:t8+
%oAuljeD*$<-.(4SA_i#Nl_,+uL=s.Np_UF"/TqB4LMARD]PqCM&,JgC(J8#=noXh/?7c?Pj-P?(@0FtI0*SU<hgb5XhCbG6mMnEi
%msbHt\c0:\=PMCK+31R&M(h<[-G?uRralPHG]WUW\?D=P6%VkQcq(2-q=9.SbUB[^n#aJ#n[gk*7ZY7o;!ptr(T/B0bjEk_V,Y'Q
%:Q.LtP'F08.?n<TEqH%kc4@jP&64d`/LR:>^U2CT5h_H?'H>p)a(/26`$JHmXQ:b5nBfkma1HIpWd!`7q/#le^@gFXk"@8r7.aY:
%5-ELhl5)-)d7`fklGJ$tC95pf)MYN)@;_2?l]X!g7Mi<SIr0?*r?!!1IpCc,/?j`,Q+b&n7dV.6g9\5qp?#DsK(A]^PE4%UH<+9u
%H$&M6+"3]k)Ys)"oC5^-**D3$f%TML2pTS6nI')FeTe@q'piPZj")`uMKhY[rS>?IFn'%jknO[!nXGOOhTpIDU*%,a_U\$bp#$+N
%KAZ:nJd<kH4cGB&Q[c(<c1?us:KK1H^Sbl2Am"LH\eYq6*u_FK>i%)=I(H]e9@8re'OLV&ioTU'4/<&Rc^aViHmrB*cYb$>PV'8b
%nZCEHMN,,ZQKkqCh?WFOHsJYu>SPbiQf%8ZN.g*B@AWPVD#JgZn9Pb4rPn.L[?@u2_EFTnhea*BQ2bChi)9Xq\!&f5TO'7<ZCDWh
%<)Y?fBF#qVo#kTU'dnfWfVl1&L5@Y]!e$65%gF;)j77'rU@A".#!m*IUU8k@D\@[D]!smPek6f$9-EZZmT6g7e_<g=-f0?%.(Xm,
%r<cN?q5q'n0<2:IaSWY;E-crX&IMp#,ERoVpZ8aZ/XK'*CocAH2Eu(A,qU6Uf)!NiFIJP9QWFC`FnFnZZVQVL[TG1Ih(Kb5p(#:A
%KA,nMb,`^3@_rcGj)FM$QNusdro`!*dV5i>?6O^EGaPib@[Ij1fP;OJCa3\d^4F;)R\M1O'jDM_ZG2^7[p,o0YEqZ_*"6bh]NK[T
%)IQ(V!l@A;6[2is^Si\"%XUiu"Ga&0+4a5[)!CDS6[e(Hq.b?Vo]Y0+[!P.Ek$r@Pn'5A'jS$9>b/o++MrFBYAF,JQ`N[YV?G\OR
%Ipb8&,rE1#(*!8=8".W=`lWS=[+8OnH\L&^b@efUQ2%qof+g*Oor@T@rI,QQ.^Q#L!]uI7D83*9CKKKTUhdbbBaG3g]jhW:VbZNn
%rJN$>nX$GbJQR7+F1?2t`3]/Km<d7!/&FP3fsfS"Drn\3\OdNa^2d9,hB#m3e,0,TeJ]ja34qn*EsY1Ds)IARHM,6?\%KD"lS.,/
%qlR0Tg"Q6k7>8#bjJ>cQO#rqpa-Cca7.L+n5D.m+$Yk7aa%n>=hO_D0i_3_FStfuddDfi!_39KJo(-JII20(1e;M`NQ\tI5n9Xd&
%Y3$a_M%!7ZQ+&gO9osEL^N"JXdn-7DnKplKdmRuqGkp&sGk%c[!*LrC((QAU^?][I(t]MkCNgg8r(jAi[?]e@Fm-h0[dCSD<+l`^
%NTFJq0=h\,%u'/hLYjUX/(K["0@-89[V-Hb9@oC,r01ZU(Rl>@V&@7ar<J9+5%!nbGMX'AhedY^c,W>sa*M@8o'"'Sg=,6:Y6o3>
%Cd22i^$gt4nePBdbLqLXg;eeC:.W`u[k";lkB$F+Hr;E^mok?\F<7WnQB,@(n>orXG`9QU<G-odg>1*pqH3_"Ne[E<aSl#\R4?S1
%gIJ(J\%=:\\lX$fn`+6l(lX*mqP/feD0fpA48`9r4t1q`H[D[F:!)eS?F[cCiNn7mWau!Eou]p@c/-)Ua"*p(f_no*TA=kI^dXsO
%?9P1!V:G@arl#G_n^+"IK'mo/Y>Qj)&(,rT"V+n5]cMV#\>2o7Ffe_/^]!C[XA,"\lW*Didt7+;lO$pX1uGIUDld]!C\Q(8d&esf
%J[I^[Ur@!NjQkhHp:I?n?CepR2nIpi^AD*jH=gCI?hR5ZQd:\\q4pmOk3:([aU;:&Jn\??&t=0NQ5ESg?c0`eX*Pf#E_j,O>+,]S
%KWZC3r:&W,/X5/F21f`_jEDn#!q5ho_<sK<(ClnGjn7*/P@oO(5S7WXg]Q;?]O%c_Y6FlfAoo)DT\)662tu2U#"."h+2'lg]D$7c
%9'*0ZB?&;9g^h*3^,E>&T"f9r$grqZS]]CS7[Pa/"?-3VRmkt.h#@B0S$0hX2>RlNlH`c>0W+5bZMd8i2p8Z_<V_F.=`ftQS"&UY
%4Xi;3n^B.@'_Ym`GQlAjEEBW#@GqRKL#Y7(V'39K584T'YKn][L06@7B5pdU'RnQL(%/C=hXd!qG@7C7BZHh:a6//OUV"Rh_qnhf
%aUd6U_j0K(*b"ZO""^ePD5VF&]mZ2+:s$clHUHTh[sn/\eR)Vbc[RSXGT]M3QU!%`%VVP3Q^'5+=1Ia%5@#lM3]5>9n=F"=h>prP
%\&UNJLG*Qf4:f46XPFgr%^gg<HA(j&@VhaKEOQqN7s5p@*S^%ETe"8On*BXVTCh+!Ra/2X>ni]]0JMg^Y;BNVCj`F1*RbA8fRdZa
%X9+Bm<oe!EBGDK^og\K+\,E`*B'j`M]X>+G&R&R`mHr;5<%0XJ@\/A@h0YX#ACk$Kl!]%Qe=mB4c2LRSQGfYKU3kY(CMQ^Q30.Kc
%:9'RWoucWBTXK/Pnp*YM'r`A=WR\"=/$H[Wp*sFa=BFGK^Tbbb0iu6m';Zut1%#sH+)r1'"H**Q[b'@'5-(21nkZX`bbO:F6\"4@
%UI4ScqjGZWd'Q)u3)RN&J%l_ea4jAs_$43#a[m'L7oAmB7\^9C^T>t?eo]fYU;27UHAN('#>fL?O0tmhm4Z78:]F61kWC2^M<D+M
%]7,]CD/X.Uko7MTX9b[co=XO(=J9cloC!4!b10C3=ajJ&;I.t(A:FaP]Veg);Gek`7Hu=udq$&-rWiJelg6S_j$99O(gjuF7]0Sh
%[[%Hr--6)!8'_P.2%T%ZiOF:'I(f_Am]L9?5;'6c+(I4pbFT6Ae9L`n0:nbPIG!Q@N]-'mHP`&mEZ^WaT>3(m^KnK'huC.aTmHR/
%Y=WQ6`?qj/E2u]9,)At)?!,p"+&s@Gf[qCO^Aho[Ec4r&hs%cJ!+b0dbDi9\LYF<&8S!8T-N*^;iLnT8e(O^>i#<P)-$gT$`Q#3/
%[.,;!H;ce:m<ll"fDC!52"c!4+ss65d!WN[S5reHN1P?6p1mGh$K!s@7peD]G#`EiOS;3>m/DoiW%0O:H@!tBZh/RQr:sR2fN1&b
%g\=fGb2u(%&j61ZETghjHeT@Uf7c:mdHNJNh`n]T%1-O^ll/ahY?-(#J<*Rop7TKI94rh-T5K9%/I&0&p9l%aA*Ql2f][dnY=$je
%ai[bkID=,YS1X!l-6"H$IG%r1PYW_P50s:M)ROLq[^s0("a57jY29\5m_&i)F161>j)3u?7^0A4mRmEMpj/YZG`DR0ota=D,gK,a
%G7_ZdD2UqD`BOr(&X]sHZW:3>%ULLPRAZ*mjjVB#dB+_p\:4(A,Qb'`np>e,+NP`f\EY*t?^M#/?"7]8qfmm#"4_r4>h(9LCXp(X
%Wul]feX&@!ln`H"Q\qi/k\`K7qf(kPEH\Y#qdfHMGDrPs>J0'>SCY;El1;g50V[1BJGn(@Yl4Bm];B@nKO<][U\3G5+ZS>tD]kY'
%]s[;^*k_H$c]am8FCo!MY3JSi*qlK6(?k(5,AI]Me*N+>+J"ba8B4g%8=N/h<6*]T4uhV$H=h'$dHFG>I&iguj%-rF@,/!992)YH
%03:p4:5*/?ofapF=-i6gIq(mY(7%*u8(Z@4D1&AoQB[/ga/.V8&Z?(q115:TY$^SU8]C40T[=g(ULl)mB-0K\dM_D)^3hcFd-`4e
%\u%H2"rtE0JeRO^gA*K_I?9j)3m$>:3i1ER5E7$^;0)s5&Cqs6FCc*S!uaV=P2j!MIm7@"h[tXDn[li,Z&J/7`5%=bYLVSj;t9KU
%nSoUBR1fe`;I9q;mHF&Kj(JmY6[JB4o(X9h`3DHk72dn<Ui1%4iL#3Vns$[8W@3S]aMOBB4,,ka0$b1LEn&aN9Z^?(\[%COiV$._
%/14C<;PYeN`ZpM2?rpuna13JaS%1us;"[Rcn@3KWd@CD#]dO>Kn?Ks.Af?nHkL(_'<P)uYjA`+U$uH\T@^B3tH'ihWOJ\$,OkLL6
%4in65'<:Yf5,U6Zj1&Ef(r`BOE9Yj4<)#3XiE1N8,S&([:t\_OQ/bWI?,)tQG=5%4*MeaJNmpB#n[Ye0`tb^ESaLKFqR.IFQ$F3:
%A'[H_UAN>`]U9bo)Q,Gqce$4/-;i$F1JF5Ki2'O@k>HEH=(Be@nMagrVKQ1g<qW3C\r+\5^RBP\o"^eR6Ve<mgiYq.m1<X5L\ES^
%]DHt^$LRV;X&2rR)D.&fd3rh<UE<!NTHuUd0`pC?G;#@ol#bQ>mDRgQX4]YO6[]h!$&=emFM$BLG9Uqq<EI)@A^E"]N%/rtg3B'K
%&(F+VEQAPu'+LcMpMBcgAW#M<4,,tThV4].3'-D3J['hpnlMl?RG!_=)([*.Cl#^M``J[X+kena&-B)hXFahIQRO@#Y=hC,d4\?F
%;/V[W6M-&Xb9l(,:cN=jR>%E3%P(N5Xja5\'E*`P8+'pI6u?Zq<ZF?`Zr$bOJ-jnkm#Ye!9!)]b%^'a$@$9efF`l("kGCa.J`?n]
%NUEIh:$1Ch(X#P&0>f1$2d^X%N4QU=O>"8pDbY4AC9&np\;iHAI$4n`*_4?F[a*Ms6B;%jT!U=0j37l4lJguO8m>_aBB94Zg&>Ku
%/Mn\OKZ48Wn,gWA]G[ID:T-O\euMADfo2$:$24Gl0=6f#o^+qI:!$p$E%Md?W#HgaoWCrY;8"^#RjF$MFCO7HUV;X+7_?Dd.7`*7
%YfY!d.)>CP;IPm-'B):hk8"tq_\fE_>QmsVbaAs5+30#ph3PWX<qSNk?IE0Gf(UAj]D*j.4;.NEm<)`G:\Z5UVKf!Yrq=7"Ba$MC
%j]TktkftWkk_q>2/Z!.BS228JG+'-<!doa9&)kcF3Ob.jW-A@Y3AtN?5g;7Q6;&<t$,499??5f.YCHLXmpH*M4*LYIf.WS9R.h'1
%aXr-Sp%'N3%s(eX%e?1rbARi+g-37M:;RFW[K5OP6eC>_*]u@:>SX;dH..I)!eXop!>K\J:+3-[@hZLPBK%%0Thd@$n)92sW4J1:
%4Ne@F1U'4rC>bYs#]oR`"?'uWI1q?i0KUAFYcsthG2<_G:k1,Ji1d)]nj'=i'*KAm%,9];RX#G$\j4fJ4OiLZiG8BS/.+)c[KXl/
%;]n"-o7lB&\WWmC_+*8`;WN#Li#p7U0X9+oLeT$$kRC0r0db3iR%FnN/HnasSLMA0^R]RZD(ffn*MS=#L'2OjPD#H\6f`=k-Qi,T
%S^U,g0RT";2ApC?k6"f:<qD&R#E%VfIU-$j%*oEN'c`9CJ?3I<>TL<Y@jVV-!W*jVQ`L[\@9X"9N2U,dh8'uudm`f$.iSaBRLJ`J
%[>pOH6c0\D&4]=BD;Zm*&-K=VgP;MRYN^B87\(_SJ>#SU8?t<0ON%e7(si@?!R1._9+]eJ9oEB[Eu`JZCRE>%%e@0lM-70%'75>A
%ZJ7]=\eTs#)A^2k!kCp.?%PEWUrX`T6L9?O*=]t79UN&50_As$MpX[rY2gmap`!Ul@@.+I&B1E_eQjPa@+0==YV7<1+dpQ`Ja[UL
%6J$/j9gTVL&=C_I2(6^ikaDAl1XI7EXpQs)p6>_'o45V%9ml#S656*.#Y!hTaC<?85tJ!WY]g3dHQZcO_$DiI2l-YnF31[RrXnLa
%a</LBY+/j[FdEV4XQ2%=!a!rr*QO>+lHhMAbap%.DHeGhG>(pB3[e3&<lapPKGgZ'MV#:Q3JfZf6nj!aYg=D&W-Yp>d<bk&?uSt>
%JPu/C5lZ;#O/SC5FTD];7P=o#8V'`9UAEJ]6A90$+nl\D=^kLsRrUQCmQu'_qNaXI%h)O>keJRB+rN[tKE<j/^e9pqQu+eqAGaT9
%Y%-)ck'O84m/*fg#8Vpe(P$Nc@E9>j"ttbl"MtcOfEq^@Egmaj^dnh>j!#elFZ`gP0OR/?\gOU&W[AF%PH?+J^m##6n<%QSfbDs=
%2iuOrn9qDa]<(XE-GiTr=<P_Eq4=T-6:EnKTR")H`8/WVi%Zo:0Vu;fE,oO__"Rua,K6XH$%dgke$P7qQr9Q>!mq<@LXhNad7/Y;
%#s8ds1mj$5Rat-u36VN:70jPb'+&6)Ti0a@&P@!JD?MJ.:uc<]/X'Rc+=?!^=#%nP7USl=,B2&KJX,^+0+`Shm8Jp>`=O(%W$Uqf
%UuCi<_%M9QC#R]]FPm9-\CDb/A_Wn0k/0DTHl).3FL?X+Lm;O9as.jIhOsQ[\<1^^Pr'KmGg?adqrAo,V8-arI7%*E(M(IjmEo=)
%2o@Hi%!KXq]Q%?,jj*@Xm%h\e.<V/$76U-N!^S#e\;1%YZ7uU\#8iEP2Pi'@RY$S`'LH#ade@,j!+_Oio_X#`2jFS7(,Q,S'qu0B
%B,c!8:)](+2A@`F[P*V'=AY2hNiu,Jkd[3(POd1QG7?C00RVt4T[/Nk/&7C+ER5)'PmH%&$fn.ZL7T0t6>922ZiN]0c)C^EE.hHr
%5m;$JQrT4Q;driX0?_hGUZR[67cG'%U:u=6PO':6&h&.s/;2mb6aq_#nDV"O7pm/d:5A:12]N.e)b<X3-L$Q>TnC<8mA.Or-l`J_
%Hg"$\N]>.`lP%?\PsTGDPD2F['mD`I,cIL>;]o(,(g)_oT_Q]l5+[h"($lDI)6Q@!Y]tUgprPtq5mL';#gsf@P+%Eq>65_Sk\GG$
%qq/':B)"[F?qE:uAXlYsb8q2I\H'i6M%86V5o7Kgi+tAjb06_df1[iJ_3MG)M[!!Bh'>[J>V(chWB)F/:K^-[r&rP3Sh(4a=,$n$
%7[jEtO._F4el->PJ0kh06.Q6S2ef9#l(X@`&h#AT'&@J&hZul6T23WsjCZl*2A5rEKZ?4^2K0[*0[EFOO_=C*/.69=8Q>FXl-<Mk
%VDFQR?uXeH?aKg-,@G+sq-ok'2#rNPE;DPJ]QOs:&]-\N2:92.nHJ?@cn*+p@Oa_/J9o(`UT"Np7r0)Wi/mV>re,NN@%(VKiId9B
%HHZW0_^Pgr<u?cA&,bS$7`s`r&?%';eJoJl,8fXs6e.;?,-F;W5#b@8qW7e/i;>[6RA(3A5>,[#8Oec,EFp</&Lp:"VhT#MCSdn)
%LPa\:8[B_==Ra>U!1;FFHSUO&`GPsf]mdshW#&'uN`d2RZ@1sa192Y^d]H&n!hc5s8<IBO6.5RcP=/ja0FPCr?Qs2>UlH%]lQtRg
%,!Mr`dS>Wb.LRI5Y35O`HX)\+O'O5"$n"#4pAps)A@O,UKOt?W(k;qd/?*i!MGOHnKMh/nM'44!R>.KR:,oX,@Nk6J/"gFr&S+Lp
%&$6)Y-`Fhr;GefG.LhIFhj(5TE*Pa[C3u8:)i)qTO"4(+7@ir0OeTF$#**("nfn`Y\/]qtEu3JpPD05X>%*1j"7**o?mSIdiF(K%
%VSTtKHpKI.9$#%dg_&[odb];9Lq=fiF;5m%a@k_A,c_I]V:hY(O=M+ui-JV5](4@D-.CtIi3=S9Zq<e)/1m^<&#F%BS7B-Bb)RUg
%L'<XFm06="O9um-=d]3(O4lYDGB$K:Sr9s"2Y*N/9C]-7;0>s=@]^o[<hKRbZj7j(K:mPRTZPhbe&LXGf+OtN!G8fo$.D`VmnFF$
%;$fXE/W3(m?PnPTh8)bB#b<kB(g\n\"giXXZYVMb[_s0$Nc==oAo3-N\4K.VS_+0G*ju:(3A`#/(g)Z/@*/BG?n!K(F$3a1CK[;s
%1Kg2\Z3Odl;N#Q2;h19jiWg63E('jda\)%'$<fkeVFa:2(nqh,L"%CcpC2KfeQ,iY^hTRB'N>(([1f>NR4gpqBq5KMmoi"\3s(aO
%G'_7e7,R^?'gqJ*3HCBg.jeYP-7i\Y_6p"k$ZIn@FKgJ]_Y.OK!A#;mQ3tKtk`JoN3Y4s(#=/o;?kVu(,_9X>'D_aG4C?#\S\0l4
%9@`uO>mlQ=eE.#MMg"2c+A>4cOa\:N[LCO!JI$,08d(\"K\;(cr<4`a3Xf(;[R3)8"V-naG#D]TS!Y<ke<;OC+KSXl*g7n0ZfCff
%,CufA%"tIXa")rc;UrQFLR,`re*S,7T88PtX=f%-Y01m;$Y'Co5!)"hD'7&c0tkBAg/apu"HOZQ"A'#S@&;iK[%f3U64=ME;WX$a
%]Fo#q=t)=&1rKBb@Hq6R\RqRC_>4frE7@L5H(9+W$UB$Jh+':3j>t<N9`fT31#$b3=^*=V:^#Q2XE%m"`b+X,QmLc'kcbniUnTHS
%"l-0bW2*<.TUL:*2\nhO>nt9JPM2Ut`;;Y8-R,TbWWueR0Y',TEi`):pLW7uB?B+P#,YS2:]ubc;?7[Q>R4m5^c%H]`Ls^e,H_Gr
%]YI4YKT).+FTD\pk^sDTP6RdS1b:@0bBF*5J-@sNjQ9+N_:peA'Ff7;5n`mj:iO>!n-C@g;[Tb`WjZ*?i9JtSOt%k'<%(J1gjnlJ
%N1q_0-&X)\7#.2H18HZKqh\"A#3g+dJsV/R6OOgUE`f,"7g4N=PM%p+d3G4D8G.]ac1M6"#[AusarN+$j-1fW:?_#J;G-!aG\=N3
%mL2/CQ=VC@PaD[b9LEr.$L(_@fGMf<`dp"J@DNKV\).K_J[Irug=mSLeeQK7EMq1dWPq"Z[i_pZS/N*]B'!KC"Bb"Z+kUs<?u7;K
%`2FtP'eS4l&Fm>/?s;/brG;sql7lF7O!ftgCD7^SO$8H3#"XlEE\NSa%Z#0eE+M%\>/uMj!R("UHQdG7&?OOmar(1BQF?t(G/J/U
%$b'=$g*90,5d6>OPqi?rS_WF..0BiSC[EBY!5Xui-/MtD71CV@gG0V@!Zr*A.,?CO"qV3$<k3IMPQ?BXFZs]r."ImATE16eJHRB"
%"h4Z2oI*^i`aYp;!1><%_feBb52r0)A@IUu"dfcLUa&eAQt16PRkb.(b0!BYD%?23JRl2gU&[uh82Cg6!^-M*F-ML_`$soo0UQ;U
%`)*bN#W?J2VoPWBT#&HkqMJJ)XJnSg$TBkh'b_C/!gX3hUl7Tt49;*&k^#`g[:uB>@D3mC\s#5Wb6@=pD'bGpJ2#SL[_tmu5ec^/
%/Rt1qJDa79=GSd7E&3[E!0JUiJgG+43]K\:+PbYL)ZeL;"B&Wi-9s96P^Gl5!XM`=FHRu$?mfrl.89g*,ENDL8/&e<;jLde#p@_n
%V$%o/\?dUq]<YUZ&YYMm$j7:JQ3g8iRSHNi5`fXU.N^pO#p<?P4@P\=_G"0/&7l.j?]'824\Gdk6KD.4!3rcg8ih3uY6*W5-$qCA
%!5X\tQ5Yu7J2#_8,fM3,!+B=E>#,eSYTpYNU^7UV1uoo[RK14K:i01R1][[$KoS\;+IHD3M)9cIQqS1?_-3:X#$,F>)GVbVJ4Q#[
%nO8lHP$[?(PpSaPQ`LC)#=@GRIBs!kTrBpn6r?m#Pc7%OKK5?=G!&hU%o:rr5Za-d38*Ph498u7_btp+495T&RTBuincTN$p3Z-o
%UpSnXR4!Mm='@eM-U<h!DPMa0-ClK3HCb+gI7Gk0aS.&aP-I;u!\D^4$@[dn!<UI>NQ;bUR)E:k#r#$V-tStMWt%WP0g&@(8t2bA
%JWr2fncVkK,U";,dRJbN495nmncTN$N46kA+?_6m,"\@+C$!^*@*0-*jdeA)PUCu8=JGT$ADKtf_#orVp:^Reb2"n:-%I[:DIOtr
%!bcbM:DqWT/-.S(.N_$R#p;oQ66p7H`(us3rICS/VX<7l+6KZ$,<qKLCVF2l!D^EZ:Y0[7P`CKmmi$LgDf?4@*"1?Pn85_c*W]$H
%WC\<Z^uuVfp+ZBa2[l-m@ZVXZ%^>EF?18QI&o\2/^lXKO1tYaMRh4U4rW$%R%1]*m(_P<6.26`@.sDkQYUOi7kJQgMn?7CAV2&HH
%VLsm!/`Xe'66O370K0__ZpHUJNngt7S.-tOB?:mS+N`<@6C@6bM=pqu+NS`U:+bRDBJ;TDS,t&u)`h*`C`lD__2=`lKW.Ah,\I4q
%TbGLX6-@lriJYA]Q*Z#qj[pgZ)\t,u,?OMHh]+'hSIL^eJV5hT[udD%+?5T9GA.LQD,XKf'l?!Rhq1E!i`glCW$Bl.11eACjch?&
%>FDa)UV8IJHU_FVRf\\cF@mrk6\f@n)_#a3e"hOp`eJ?o]+^R9JUIbQ!D_]k+OJSXoe9_T@?ra$,%&6bC^e9e11(."VPg0XZr`3n
%E#_X\$fu0VW:lG:W6!RU8pZN?m%A_8Rmn>h2,)4X9J3]"%@fN':`53I?N\-ITn9t08MH"P9)1?Dee8i*_7l10mBF][LT)U4VWGkA
%*EnpJ[)uUI"W5*UDP>_T[40%4oI"GtfEr)LeHId\QLo4JN\eOWD.>%l/F'4J5D/jAP)M?)fhF/)q(QhrS/FH&K5MWo*r@4,V[k*f
%2JbN[QR$CC^gadF?tqWNOofluL.^,XS3B\FM$AXE'NpQ[J1t1Sr$Jr^7-#JPW=S&_o40,i/51gAk#;(T12d5fi,U6>opB@n/!ZZf
%dMBrn$9]n([F.C';OuU5Kc;#*gRfpH?nEgrL57Og$*-lgQjB#D=<lJfr"O]QpT]]SKI$F=RoCX\W)UfHEX8Q(8`Lef?qJ@m#1bRg
%qS:$>"QOI/i\uI77R(\Z:t;F&EA=0JWEjB#G",d!3si/WW7"^5J;Bdd.UrQHN]]gqLa:<$b'bQ"[4":YX(<(@4fFBqUhn\\+nOuA
%VagjTNX9t/TRr,OVagjTTh*qTOL<fA*stb*OC9BuF%iYh8UX5O'ALr_IAs8!YR[Oo8g^qtgtu,"^="a@/M!6!G"`ICp5Xi:U;:rl
%,R$p_'-/VE'824%C?:g*bR9[19?.1O11Vd1&feSeHRcc5@:K7<pIf>GOZ=B'00t2glrN)4+Q5^XV!aTm(tM0U>Z0;X:,X@ZYd9J9
%7`mBhJRG!]PSCOm,U6&D-FT+K@VMEjNLT-<.[SYn4Zs+<4VJ:%HR:dUo1Td9igJ_E-W;UPaYg?20Qc<Di/hI^O7Z-HVUfY52mH;<
%jN9C^YUR+gqBgI2bE;qBY)/-M7!\+H26fjn5>>Ar><<RnfR6RO1tMkC:P=IEf*&p!;3L\d!)oj%dbiDUf3At>Q1rBhD9VJXdnKnf
%p'3DdJjkE#igSMSb]llf';0nK]?jdr)j`K5#fWqQDK;-05TmZc[^Ms$\0aaK;b].H-4#eSma=$[DDn>c=0;l"\1)V1fJPs^(Sj_s
%+&'3l#rq%8k[<YD+O!l!^">9;EN1^foM#s!8UM2i?&M4ICB>Wd][9st!1S"=<OsNcO_e,lf>Q6@]p`kKVdd*qRfIX8WRG?+KqV`b
%A2lenCUdc6-r8M7=BCnTX7^8e-Eq'YL'TKf&(7BVMuk_^=Bd8JPRn,.TBue23W^jo9dUQEW78n/DTES2C%kM\-*E(/em4J'0_5nM
%A>mujju7rR")6%C<%jM28gl]#g(>^^<Idc#"[J?YOog<D$_3H"JhWGjW6$;Z7p:3>UdBo9b(lpj@BPH>LK%Q%&dDQ0XlWsOeM23N
%NLQNRMMsO!huXamB)=??hlpo?]4$jhL/C3HFBE[49$1GppX`f;PQi,JU8rhSk/3`H(q95Z10\1Me;QBs@7W(l/;\NP7%tiV@GK"p
%`b@kDQlL?]&&p=`50ZRG2f(D)JA#BYEnsMQ<=&3X`W:gtOgQ3&VTk8A2@R#j5Z$'SUiH,_J\f@.`+7ngXZ2ocZI;PK<=]__6l'p)
%jS/uPKP=;lCJ*'+K.#E4eM5@@Cg)E'!TI%Nglq:5g=o6;E(LKKFG[%k0^cAY6IQDTb-=pYBG_Sqb2i3Z@.;_U<#Gt*LKssD(24B)
%%cdhR.5D>=.efGeYjJr*;J#AsqM;7ljnRm>M9<so_[JdLV\t_)TQ[E,+S5r:ei+Z4SoJUSKm,6D`,MZJErIbO%;H&TL0@DO5as6M
%amQ1]bsRjlc54V?B0A92,IKG$\`70YH9p:Y>W7R%G4ird%#ap%:M-qsTlOIqj(t"\&^XpmoB`F3"(0WfP$L,k?:L;2[f\cU6dO9l
%do-L!/Q]3h$:pp%`S.c+<Bb>7,=p!AZ9XPpb+;e3dLHD2/7ffKQNYi>.sQ$'V85E1E`g778P@aY<[)FTR1a,1`If\[gh,@fm"g49
%;3tRM$JY4L@AnlQBdj;=f^h'VXas@DR4S8ZEhF%4(-WDa;#=+oFAYu1S[3oZWCq;MKO3p\0X?sXGl@Md#kmV,b_p^'nK98qJM>,:
%P5Tc0EPJ+kGgI3Hb*/M3p'iQEJgZUC:cb6q--q_*>[Y,Yl=\o)<>g"3&MV:!2F+Ck:dXUu_+k>:&PO5t2SbDXTamjI3j?.W)]IAl
%D8.)<L`*3UZCtZ]'979=pPHE1:hXTdNEbV!q*,-c7osZ[kQb!/Wl/A-2]ZQE69Ab=LRIA5-&80?8%H#%639VE.Gp9-mNhL'M_DSk
%loG<IPF+NQA)*LFHj4'n7lXTh6WW>7gR]u-`2,qdJ5c(YJkcrSJH*OBdY$>eA%MERbS@:sQbi:QQA'OtJE)9MQZS2p=a;)BH#^[:
%p$$3."0['FgKlH'M@Fa56KC_b)K`t8'W:H),e,!M7kiT3P@2*EL%uL.8R+A?WkmnDJXp%6dKa[^JIOI&IST@R#Mfm$.Am\K_Q%;a
%,e1\4Co57uT*/(N>f]QSfi&6DN-,uIOTnHpoq!F/L=)8(G/PCdrIC`C^9Vbj=1_?$]FeqGP9G=Orb$V'&REF-.kdZ0XV&%M$`XE"
%1,1TrRU9;bQ"kPTV:96=j7Yc<X7nY*/#KsZX`-naPkFdP<BOsfRPf>?(R(u&)#[O,p6@6a)H6nc9VLX/./?cU"A@PXeN`=gX*XSC
%]qb!(q["8(:ef_8_HaD*Q&b1<m_uAm6dd^Y4A^EM7W-/c@_CUcSLj/tFQP(n>Pc#Qe>lXI.Van`&u3\RZMX(glmo[#XEWu-j)m#T
%[3KfWq+pZkrCSBr<s`^A_Sk3Dg6qmiW0tCS67]SqX\[7:UNUb0)=]\7.@@[QN3%W@b_tpA6^:Gk%>`ab6<k1,ik0I:%W%#$mdPo=
%ns&\NW5TXXF?\5P_6-YnU^bXNOn7O.3OkX=A)?I^!!57cK=<@/==)nTOF2<a;]6XS':TVn0G4.)(e3cR9JbjI,E13:<Bf\aMq!Bp
%&r5GYjI-NO,7W"]iJD<Sj+8==+>/Vi'C)_NX4,LM:2Z!G*XnsYJN3BE#*O#b/ZN=Hij(+r<p'rok66Wr)5h^/,n3a2[V/L1(jMiU
%co4DFDDE3:$&M^1%euh+SL*IO$a)($%7<YT`Kb5Ker^4474d;jF+_1SO1^B^BR7rkH-@]@p!k3VBEK#7V?G)3<(;C:N=7ScNd`4)
%eefIN!2>>i&]?T6KM%gJa-\0?%_.Fi(QsW8'EUsG1XdPs'g/8b6BTE4Y*(ITWu.@dcuRShLM'\mS-Ba!dR-,',!Z>:''SH]O]-lo
%2=e%'jD@O`4.[iX\YqUqNLAE?*E1#5qeScXQ29\i_#8>:&8L,7\$&i..>cTj'[@=Il'lGF6C1g3Q?h%qYeuA;6#9dNn*jU)@bI"r
%m&P85$LB*II38huB;m',oP(6h*O\PuX+Bs#.D^C.6YTrApE=DJp[60Cs3eS.?qh#=b.:-#)$/9C'Za2t,G83J^=k(Y%Sbn=39!,l
%!%a-eV/XkuqM7IBWAkp`WU!UK+GA\_JG%@)3^,J(XCD6iaD@+UfMQ??1+BjHS16[XA7%MDS]>n!lWKN7$n6)p'2ShRK92eKS%s9!
%bMuh>K\<'/49Kg#*Bn(k#FFtRS=(X^+j@afQ$!puOF2&+M%4_)W5D@Pf\qg9K)*-d;/!@V9@]BOMNT"@O@0ceR0V3El1gZ+l\suR
%Yo+l@La4eAM7[pZ(Wqq?a2`61)*''kc,UE[>u/&Z^usf%S]hBdpR$?"'f2GH9&^LRg0@0NQ-\lTA@//.SJX`L(u]P\iZ8:B\Lih]
%3\",E[B*/047X"4,b!iL5oM(`?K15W/7rRn%ii_j`/`P#`IOO#Ei\b=>U]0Jje17'$8HPEie,#j@M*&PhW/)`im^"EQQlu9?jofs
%J)fL7gD<@^9aMHQ]PZJLbDgD6V7988"i:T@7'=a+;p7EJ'm^K5k&h%6Jc(N)a&h8^Uh_B_BCV5_;EY&>]$oAFO;O?Y)cm1pPmj1i
%QR%"#Y!m3JE?q7Bg&jD,a[_^0`^^CjZm`S$KGbu))o5F4%5sJnO>IPYa)i@#E%/Z*^do<,@p')7,P;1\'7$Ks+p\i"K`MOFC\REZ
%hYgk:RR*khN7Pdm0O'3h;dd7`.hH?A;d^,s2029BFD`(*J6_1;fqoMVZO(LOJNkKCpS=tN4C$Ti<9p+U4Zl;37k#TB$=kDP/^Wqj
%:OnLXbOl#cI0Q"=/^EI`bR.ZQC*-gnZ+["e"K]a^-ncOgMomQgOsWngfUV6_eBP'3W2ZNQ$6M(O`]E7:])+3*;K>#L+f:r/:I97m
%*VE5bAEYfp-8Gb"3A3t)-,>+"Fp>a6R=mi%R*J6e][!+']OFt&A4.l2Z6_Io5s6M6C>VsR,?*jl7,F)b##_1`9Lg;GVTQbMUjZ&e
%%G@o()][r#,+@+ndBt)_s5KO9HPlBWn.#bEmMr?\>VB5LW%N/?9:JH\CCk=)%7tBS_o+,.>Ims39%thh0EoI+7s;ZALL&&%"<D<3
%C<HmDSsn)r"_rB-<I0a+_kZFD&To9UAnbFT5`p+eK6Rb)V%X]e%@HF5fbCkf?QAm\_gaj?>&7E>92Zgm_s9i&CuO%eT,g);lXC;e
%!fS!h5W8oIs*VLQb;J&&-.Eb/&%a&cJX2_q5.+t82BNJEZ$K;a5mh?W'P4'=]fAPeB<LoTkJ6%>j2kPo3Nk.^7Z<^j3jjGTjs,Ai
%^WFZbY-.>M.lq.'rs5^-);[=qcr7DH:lr*g!DSXePlGUQh\%VFX.<<E$`'\->cqUN&(eEn0EEm#!3*T3>9YIbYS6QSQCA&,d2cuE
%C@HjaoW5eO`@QHgYeiX7TG4`DJgr,AWck^cZO_G-PqCSI,=k<Y%8WpRg%\'T2KXO^e#[HhjiT+B,I=]bnau<d1naof8PmjB0lCQ^
%'b,Kl;aCauSJHM9$,cbnNmt2W05[$p=SPI&\q0]T`NmD1f2>2o+OT.:q\1>f1F;f^D8%`RqB*9(@;Vp7%p3!LR/.o;iENgdEZ[0*
%&W5uZ)b5r&hWss6mc2C/#@]]9SjTJ_0),uFmW3+g;t;g<TDr[?7pTR2En^:gpFXPN4j@CMGQgZ/(-[88c7[4Zju3TS@bDL:1VZlQ
%@mHYJo]9q->`r)0MX/O@Lpk(TDLT+\'$XPFWr41J+L0[JLjCT*S@57.'mpTe^)AOt&\L<3#/-9dG.YU`Dts-Y]+$NF'%fq4a7`CR
%QgH[.V=a^@7_@s1lXtgRG--5#85XPh[>6_I!EiIWcJ#dQFc,CB#HQUdi4[`m?@'*SD*b\$PnRU<4P7@,B)V!<`2#5a!+E2sk.5#J
%YOTirdUap*`9nqpY$"c?qE8\lYo1VAl<8<rZ]sLpQO0S["7PZY[LqEL)RnL>ljpOnliX,`MRMn&o_4i)dWh&bh&c"J*JiZS7+nWs
%^:_],1m*/[W`;73KG6-t"uZ4CA^1_T%VPCfQ'DdCTh+*3(-4pX<8TYh%b<jf]2&G;m@OnkF?B)XTK7;1?>;PD-bhn.)]^$b46n14
%S_PKX^SWWN>*$#'C3X#g),+8%J%7qVRekjkF'MXup87O;=.aVo"YREhf\JH%@PNf"`Du@HLk'<j8Ro1YB./i.['77[i%J[u(%Lt,
%P)Z^L5C4Np>?l?/W?D-H/,rOVe[jb!JS0Xfm<Vqe8/bM@G>!"pL?j`an/XIBLI]lfVfLb$?ZYT82l`GdDf8BUc^3M"`i42%+]Z9)
%ejS.>_[,K`Q!AMS<`,_B?>3JJ([A]2]V\Sh%+?l0\$&&CWTBSiI(uNIMDs]4'&B1dQ*V)"V$C?s/6R\@Hdgh^++oMsXUG:f3sV69
%(CIAPA$cSS!tA[AN#:o#X-&75WdIeqeJTkK#H>V0fAS/nJNk5qTsQQM/^4\gF?UcfHW;"bXg.<JHq!ju^e,$&[4Wm[dsYWJkAY-Z
%>8[_U2_$&I%"e>Y_E;qbhJ>`79;eTNI&3^iaj?b.'djS'lDg*qV?]*^6Uq0E3Do:;)eDh!1_M"1c`LrO,bf/q78f!HoXsIKFPBTo
%YcBFXaY>r.%%@Vo&2<\XOQm=hbEbh@;Hj%T9q@YpLYf/4/Kgn-)0oU_FK>E)h<Md)L^uCL;L3/G^VFf/n+DF?(W]kMH0oIA-V5C]
%>P+P:n:>(5'.gLL-fK"lXf\PcH#8aI;01']$fcU>".%cGp0+<E`EM\i6e:<"2a(6"2Z9c`L(+]&BPk9_pX-B#;M4rUdggfBGi%6(
%;jNTe?#*'iqn__:91Qb42r'n^9_`kW'hQTkk6dI"$>4#/fCNn[]KT0NT,0Vb*7tR]l7#hXH_t-?FV_mS-n[4Voe9CIC]O;Z%*8[-
%,;F=-@^7QRaPu>87k;2V7;+F/.Z\!m%'TbSgD?FdqVe_2e2$"p$Cb--Td.j:d"KgQ&-nlc:0p%:$]hj#RlV^^`?Y\Tdk#,$Xm>\Y
%(KiUQZV\A+9hS6f@IWk^WTWCA3JE"^_FX\$o=aJ)7E&J-9+Ea(i56Vh*l[pa7cIcPg(*1-MOP]pUFG\A:qs9,5l!qg08AH_Tl]jX
%JSbj"i"mP:GsgacI>C#[/D8OH2m[qanOn:Wo:N**JiTE/?"k]>4UdtGBpDfW#+Kp73aC(h+uD>(gST6Xg`nM4:<_QW^hf&#NRli(
%aY9UDXX<$6GK^k2fm$tk,tQ6sp\rMIW1U9ao(36&6a\o$a]8\L+$XcYqHKCP%<<mJ#2L\mMr9-rEpZD[WBT:QdW:6@Q7I::^fm8B
%lDPelpUYoG,Mh&Lq?A$YGJMpU\#.6BVRn-?pYBr#.uQjN7HbuM/u4;a`XCs,1u>S3Wk6q'n!nIUH3lcOg!=C3Z=Wol:=E>@5;*jV
%j<=s-S@r4dq_u$]1/"7SXo,*hQb<7W)q$d"T3"%<?f7]'5C`S/c*"f?ONP7)f/^bE1#m<!jkjJ4'#W\1Ba%Ug.X?ENMc[MB477(M
%,dV\/pH-El,rT4sk.p7HMX-lMQ#>++/\[4B%k63h_ttnfqh&$/2[hTD6.!5<#D2iH?FjW8X'H)nR;P59b#$,"i9efo=aEpMWqqoM
%5pN6]:Da\qLltVM][8/0mgUt?<6/\8j,NTIqaYQ`37WpH@?IPPPH+G2T=NbM7G[c:[5]7)NU5R+AllQZ!2XsC/uEls_sjaRW#N_J
%dUDkVB<R]:Uc9<nFJb<sJ1Wa\h/%rE<4aI$ZZpSXM;V91X=EBCOI9ISeYT;$Qj#$7pPcX'%Vi6oLM(->&JY`-pK<eLg\o4!2l9`N
%`ql<KDV,*hq*+6W53/8!R/(aE(cFIt@*Y>U-N[]jhQBsYmpf1$h%.mYVQb'Q[hd%UKXQ6Bk$C6FMPeAqAsk_g\t:a-r/ts"lC*:W
%DbbJkHIf6cqD3]%,t`H6.TOuuf(6jh@SS!HmZ@X'C<NFh`57??BD!'a,O=<Lh<m(V1Zdd%(A!nH>21;N75-qn&'4m]O_*!c8>7!V
%?G..W3NA+JOmM"@9@Rh?'@N^Y*+`Q_A"Pm8=,uV@d)&"OnRYe0o$PXUaU8qI+qL4<)#NI7A%A@T%"G+!gT`#97<A/qeKSlUC-uJp
%GFMOUph!b?Wa'h'gQS.?QH@V95K:`$FF@q2,R?cuY/,FnH2`c,5lu0"A3RA_e>*GFBoMjlI=e4u]gp;7b&6[6Ds$6O@Bs\ES;mYG
%lAb?"U6n;JEgB[>ncr*;RWf:??.*euUsN%u0DA@=$*-fM5%#g:r5,7Aie^BpR0Tgu2U48PR:4=m[$k%(8suVhbHX]e_?W.XW2Fim
%fg#p$6lOm+K:%1j99"$W25a=E_]#lC9hch=^f872q]u!j#t%\6esQV@2Ka)\!tCJ@K@S6:mVW\sQf0PVW=C^HeN"Kkh0EIbc-h[5
%Q!?A_&.e/l+l-qu*:UAp4K)PRN02PGgn&o/[(2!8O87Y*]i\@i.@efr@a*j9[_'nY;nfnp(3C,j?[MbF`JdY>I4%Z<TW`8C/Qh/d
%\=DkTkbr)0!2biqo(g_@Cu/Yo<B!-[&(04\rik4\$kX-s(9Ku[g^-,ji:=JhSm%^'R(`CGG&mt%.C=%MqMNYTh1Up3&3L380T0eh
%9%pD+1]7jUnsSU[\0WYoG"9q(=V!X7-(Skk>EHlb[B?"0P*Zi_=MrCT%ruBJKu#bY>7,[c,i.n(/'Z)sn>-XJF%-KAPlAQOm$FLi
%(tT+,+l)ItIE(&oUJJ&">0ID?eKL=&0%rX.G6^7R["l7^F021e"cIa'.RLAJc:)PAo6NkQhrl]b\RGI8b$8-<Pf=Go])3eW&T8*_
%Apch3PZlnlGTh=HH$fKapVYk)P%F'?H>BN]FEq:(hLe&@3m"W?B<,Td++JpFM*GDthE=mNMTGeDlkHqJp2+F8EZ$`V#$m3ZD41:*
%&qHDLCpG$+fuX-%Id-QSSr<SA*"_K.pTg#/?RO9Gc6-!`!pB1C4SU40iTE)ph(@G37CS^cF1&eS*Wtlinet?'+<,L7TA^H2]R4^c
%lut9H&8/B`TA`%g^p:LFbV;&G8L#6>]\.luiKs73=-BoSK@Ro<0G!0%@[1p^KfS;kPG-HL4<6WTe'g>?g!-UVMSR]FVmlhK3ciOC
%LN?XQjR=7_R([]oa#KI._Y\ps&(lGj")LHK'DI%%&7EX%YSe'KmK%[=jC]/;fGmqHk4!oG@<He2",=P:j-P,.cu%`RF:T3sHREeT
%&os>5\.;s!NdLN`b\F;Rp'Z7)h>qEX2-0p;en^jdG-kR3d@Sj6c.AJ!]p>4@d<[DOSQ`5nTeoq+ca[XN7un2ZSDipYYMu.UHqmjh
%"MAQ+>.7M9'(5k<2sWT"Q0gG,027JCi[s710+7)Ua41Nr(?eP,hLn4q7S4/%FR!9:O>29_f$n#m;t)3?[^CK.Ni-bRDRoDb4tp#_
%,Snkl*qh<;^@a$$7D:jOk%%&cgT(Fm3hBO&(<tFJI7K%1$3bkS(lLM'VId5<J%CE+@B77'B5UOeIRdD^[essq,B$\JI0jC&K`]ir
%eSO)]6DYm'>dq'n&t5c=V"UkJq&Rb50`B)]0I>Hff%&C:(ANV$`DX>HbIGge;l!7Uig`//bA6dh?B<6jGJnYPLNRo%:eFsfBF[j;
%`p8U=4IFXBMR"lO$!o%r:%tM=95L^$dehqgE6epoM1EWIdBPE9'N30_R)_B&i8*FQXeqYYcn.*[Im2e=h_MS+*/ucPC@\#3';lqm
%`bV*r`K,Xigb0?,9+QIBiugoT9P(,kZ_4B!U6*8oOSE>1)Fj2:^/8D[n!F!d6BX3TEHq+'e'4#)ICmHMgu$XFBu)gHX#jT;dtsEl
%oEXu4-'sTGPTS,d<11r=\2aF^GgFR68-M6S`11k>iP[`@@3M35V/BKI`MJ-(l5kY'dQ%H][Zf?sFH.,r1OuW+hB0c^2.KtgQ,u?J
%c8i8TR`@^breG5db?&^En0/Nm#@i^7i"L1WH%m!qr.MIP%lU8mrGkEMd7l,d)r@@5o[Zse0:*J:#0@9tW/i<`q6b;!IEmm`*R*R$
%.-G@KX]taQOC$:31sS/&Hs1Nm;F_IbYa([@9MP/O-Mo7\*+F#H%+kD`[igWRNXr)60c/\,0]d%[hRNnMfHN`;3Qb@XIO#W]3O#/:
%3UM4=THtHBI(<.-Zd'*&8`pCSSFZgtb'AGn;9mVuA]f:EGGC\K(D^MNVm\"1ELrWD]Lf)FM_WLU5Es)G:E<JpEh5>#(iqbJJW`"U
%Bs\RaSYnd8*j[]XPA^oaL\#'4YRYqfU5M/l/9SHJdQ)D)B$f:(3lai+gTA3dn05^qOj7)jc9if88m99GKqrdkr6&UJ:-&XHQFh+]
%\OVnJT.+Vs"_Y\4k>Xrk%\Rdd.>d:g6/e=eX7hbqk5`E*'ui8=@NIX?S=c0)c81t-k9hfehY\X/SB!-+^3P$KkF8AfFM<$8Nm'FX
%/a%NQBOIa-VliR4o@.DJ2c"j;FRq<r1>P&%Qrq9r-LUEb*[<AFc-od;[Wre?^8/K0hQQ(dp>STq"d@k\?mDr5f[A[9_nc9LmC+];
%FYblo=1`bfGrLF"@M^aF0q!3E%SYI(N^W-A[,fF\rCJ8VL8f+B'iOgrD_SK?m7;a#h/M73j3T_[$3`hQA,Y5GXRB@Jb#PHD6Jf*N
%7heiZp`8V-D?uc")cmnP`mkBREJ9`ocE7lA$D/$N,WDmQ,*ipQ`YBEajBUm9aMuc5*\`RHS!V6;j6FI<C;X]E$;-mkO;qt>mH/FS
%DHra")cmnP`mkB2S$o];CXY5gUd'1)L&LE[qI#Xod+\"AgF=pGRO^,3BPOeAq5F1\*ndt_LVF^.46S0&&n(.G8jM,<28M])3SRT%
%Gk\`u!SZ54g,4YDc*H&#Y2(Z[@,XBfbA'NViG;X_o&b+J92$jDe^n7bXamsijd$Y.PbLRhC=bGMRV?nRDHg[3)-81:el@0^=]b,g
%fsjXmDoPfR8@Pa"HXuFl24[lOWJ00>8pui(X6;>uY+fRb5Y4<cgK$%2gpB[@apk41fop9\9;IODV%C!&j,qtp4&eJNE<QfF*O!uS
%mXC3Q'p5QmpdjV$k&%?K`3o`ur-$dpJ@*m)[]QbS9`H:kY'.p)2DM?_dc+&BisN"+s)@!*\bmoYi5QM:lbgBh;-h_s.q7pg'_CV.
%gq:dK19XGTbcCXe1U$@B,m,[2^Dg;>45I\E9p,see9Z"?V,haI.s4CgYYrfXKp?u:/?CZDZA"Qu9rqni]$.r^__>:sBuIT:Pt#q#
%='l@)2\Tu55k@K0?\3>]CCfUkr<B0I^'D*bnm_EB3so;=52Vq:U#,A9G'L8ST+@C:`Y,R&4]_MB0tlDLNmjg:V3?9j5XB)VI(g#e
%I(ha<Tr2!V+&pF<-fms`*aUYA74b&A*u`pP]l^(BB$'5Zc'e.u&tBEa00T)22CkBLP+idmAErcj6n,&iSH/r'QUou#Q!e,UC;F.M
%&_Nh[F'7mIB6t6&gsKVJ08d;Bnm&E4#i!_W#WQ25rHol;M8#3q*f]O*%uQYqgC'B_dHE+m<?Vm"l,95G;=_6^KeqFW[CBJ9.C$RZ
%Z"5A\`qBIGGr!D5H==heHGNKnre7W2l3gP!(S;b#)D$;225a!=2WZ4Y%0YLfUtV5&pL6p#BMReu*!tbD;7[ROI]BUH`qPYTiJEu0
%hgp'iV"22//GNO)R!^P!,q@kS=]M;M4NOT-qcI2QZ?\_0im:49F-uc&'as$5SHqV$ljOs:F8([B^"=4WQQ;iJ!H'1l!e+\)mMi<t
%`6<oJCbKt.gLWkJ+rY_B,^]'H6JmH,0D>6"_k2)Kco,_V@s_'mCQ-/Gil!N#I993!L#/.;B/-^*.(A=6UIOsO*0\P#(thP-RQQbG
%pBr^U=%9+P:#3X%<2LI%E-:Vs:!:?Y<Ys(o1(GMU'QFk:?TOK&du1Qi:40nM@_3GSE09D(r\5%:1;,Y0PSf[a?<#sC*(<c=J5tWY
%#h=j.aEfeD?5tgcZD7.GGDAhW-[A#jUb\e`@,o*Sdu2QiiM<ItWFupVM<X\ban1a/(I++7l,Bh4'`qlkZ&O?V7&CcifW6sfJNc#n
%^L,_uo=ImmcN-Q(%KsK!r#La/SSu7n)eo:E16RY:_A_EpgCX;nVg\ErDnidMFTd_sUR=5mAn!Z,?oG(5aE)K5ao>AKS.J-&i`GS@
%27_rqU=`NZ0bqn7333P`7rD,eM%%W!CIVuZquZ%.8O)bRX>OQ'G'SmNi;=hCV&4]7o*`i2HK#<K)tPF>+G`M2;DqKt%bRp5U=F?W
%[-F/jVJogE3M#75,nX6R8KbY$G'B";2o!jQ(-)mYq+1rTnj$'K`9mpBAH/+j>KY52gg-6sZc3:J*/q)cH']M+F)1Bu@Uj\d6fP7/
%.?q^&:r>(Y#DR"k3CW658'4!#e:I;Sh([SsDleue[jUqlfI_Xl%2!=FfG<uo1Yd!J<1R(*URUMd!^jaSWsK/PH(#hB0ds7ilcR=F
%npE!Wd.h_W>&L`[cl=>?Zm&XRPkMGZoHhFN?r$<F6o6HH)[FI:R9&!a]*Fspq!!<GgQYQ:l'Z?!(,V.RfR[=fLV%jV6U>:\]CJj<
%Nb'kNj1keWJ0G3B$26%eG[<)C*Jc#d,)f3'/"#HmRa[UleIS0="qrLjL%W:p;Vd1IQo7NFmHLId`>\6A`mKl%:ni(>ST*sCfQ`1]
%gN9jc(X0+:?r$"]iA`r8OO^</aPA249/H%"0ttM?F<gO>A*<R'ZE\mjS2gOn@"61@R,^#WmmBsm9jtF..uCUf/\FPYAN9,o)-;c/
%aZ=XTX>7ZQ0!N9=Hm[#rZ&/%To&YE@V>B?WVOs%(oPD7a2JR4qeSS<9o_(s#hh*"-`S+Ec_?O^*=Vl0g3V'&2?Doj$Of'QTGfR4j
%!8u5,A"?(S7W-G.i-W.2IWXFE9DF4<k`hg^db2"nHPj^79d:$LogM/p;Ds#0$'4.fp2r?u3XD$sQI9i_pW&e1i]4@-RVqZ(Xc&(_
%Bh2Xf[m"LeL/IX,25_UMF\@(LpOGojQ9"=bf-PPND4P]VjBVQNVrd8.=oF9GAnRV[B3;k%/0DY83ja*fJFp/f[jmr6E\4GB'q8g<
%3V9E8]#=HN$i[%&U;d,9&]>Xu"2;qA/Y^Ok(ot[6TppucI4sFEm[*;cg;#"6)GK:[gTUKS8W:(M_><.O.9(^gVa"up0d2i>eW?kJ
%\,0h(J1H)9_22W8X!N]>$LR83=e:cEWED;:Xe8#!:TPV'@6[r-Kc1FOX0<gJXu]@:pC-oX$%97!fBLRMIY+mHH&p%*q?7AK5@EY/
%.-&(te!8(88It0ijM<M2/:1[61-M6dIUG?#KCN=:O?E.cG6EH_(X!OTI<p.K>S/u'l3qrLr0MHfSJ^B/Y\2)bjW@=UC-hZF@J\si
%bfb.>Hr'YD:;$699\qhF.0SkU>6i`35%hNN[S#,5e^':)'Ii<tmb;deN4+ai:56n;X6TB\ZI.7VF-.V^]QM*GrEu@<I7L9+U9+AR
%[c?K\&S&UfXnRB&_n#G8=BZ5;+qLsO*\7U@GjF2,T,Qa']mCe].Vug()kic9br9\t9Uj?YI])<iVHl#c^rN@%cLf_N]/7ipb\*;@
%oC6"mn)>BM@q:o=ne9OVn,QWHUT+B?^s[s3!PF@;!PALE!PB4"jp81/WM,Y@aD,"G&ASAfDF"gDq!&Wj<&G,4TbG4.rsl7DA(A<r
%jq/[k(t"YCi97U\Bu*D7QhELc)_d%uNQ>ok!Be0#6)Od/jnZr>07.sOhuO2rZ0C-H9r\.RK6njlW;[gAAD!=N*oSq[D_>E\;[t7,
%=!Yjt@8diT,94GTWcsNIPu&o[G@2SEa1Jh85GiPC?CLm,)Y/(YXf?gTW)VrH;#O.8fRk3AI`GSF?-\)fGJHn+`M+_+=>VJNP.Ee^
%k[YoHHa(uljA9.]%d8l8&Bgma024#4QsC4Raksd>e%%Q/o2jT*mkS-Jrf3a^]&cW]3tAL[Yr\)`_`R4L,_QL1)"[WRXXTmc:HfC2
%?#AkNa7k9Cg&[!*h$_ds\:qGYWo"Dh/uE(BGD+03]b[jb@M\Q4ofI>"A9a*qr><0NN`DM0b9K2I^WWCFK_c]n/;3Smmm/LL=NkU@
%\@P#R;W[?IB*sL0q7T,OK+X-n#<<WQJUV?#F$@P)9CY)=SWr-:icgo(&_H#+Q$ZH;mnUs"n%No@(Zd`CbdHOjH]*fGZ/([8hhA]:
%`*$?>Lfeg9Q^N>&SAj^d&K;XZ`Pc"ihOVUlcJDQ)aSWl1SDe!^k9'L':0q?cgqNjO+'@BphpM@:1MrL$@!3,p:`RD!`40Q=3/Fi)
%QR&nU/*tL.,N9kY^IDf9h7e!PSZ^ncjkZJ_OtQD`P^/)095"^:]!kGe4iDFV7\G>S@_=r6Iu4Z8cN3h3&E<bj[W4gZ=d>0d:UU$!
%kWiujWO@_kBS!?"3r\('>QVJ&'Z?&KVbN%B7<g`/\o1Ro=2$B_(6tX_7iX>uX>E5YFHOMun-rD+nIqcO;`K<1l<f)r1ChX?<u:B:
%r%3,"k,nr/TkYM`GD"*__;7obkNn/]]Fnm9F_f0H%C.S9k1Z#4%Mg1ea*um3UppK?0DEQ\$Xqam6R+l#^OUSTjd,O(hHi!0Ra+`;
%,<5)31Blj"2it7#c<4p0_"OXl]$SAA[7#j?M2YZ[U-sudLn,X3LK]>BpU"U\,IQdkaY7b"VMplULAR-p8\SaIHAP(dSYRT\,<(O9
%,e4QBmK7'P^"dAXg,+%OP7JZlE0o1c?Dil+[Tdib;Pha)7J==7QuiecTUO/oOXB*:GZ8;;f,bo#^D)gWaE%IF$J9$i"KUCnP0VA4
%HhQqbG)>HIj#Y,"]5V/&qs`*-I/;iaK?XsI!Y@PHGo6Y\=f^0+EL?cb$.L6&KI@!p0YemABLspdTW),4#4%D=SVOK#p@cKEPUugt
%m/bZnp[`-^?f@l&(^H"@o9,tGKdh[8P++Zj7ip=E_i6\I?o:J%@KP)O;gR5$_D$i%E4rW(*0?0^=]^VWb&uIp,rilF>f1]\HW&N[
%C3sHl4o.[8TH;%-98M%7k,\gJJPU$`Gh4SDeQTX9cCB7VCl%GnMr$/5L<M$/p38C;*\bQXmCEp]$QY0(#lDp/'.N_u=HAj*'+"Y"
%]TZ7=,mh_?HReSRmi2R!#g;^F:FoVQj,U$Ad"o`[WgAH8?lbRr4ja=hSec(eF`oB?6INr.8%FU<2R^U::REbsT@X5A'rHuh#r;Z-
%cVTQ(P2%aXF3I!7r.(^2*-H90lU^on@kHQCO:7IY>[(uIeha(Y*r.j;=g$r+W6<h:1#uMT2spFnaN;[r#pFG;`mDc^dj>8o#W?^8
%B]mYi?15@cBmY>6!\_G#V0ISR?l;glHUP9/^'(O+Aa9lZ?>q;UTV.Iih9H[QI2SOPalUK`CF#DM:5<E+Ob0$5Q?'#d/ASR:VN:*.
%k2g0l@Rb+bAXgt-Cd-+O+l(B>B#KXQXP#ZgbVGn&3&7470WBQm;P&CgN(SKG9\rcl\YDU1NCNa\)mm8$m-'I>`t$'9^D-@59FXBG
%U4ANf(5T6E!Vab>]Y_6q=!Up_7aqgPN2Qi=N2RODD;).Wr$+qn/l*G0^!s2IVklb3=cSVe4?b3!j$#k-c"qXET8]XPdE>&9kOci5
%Rre@?7MO5Hb`1]=8cE4q6ilnhR&<>ljopt4dRf`+^0;/P"62C=I+bn%O'=iAH^QW-"N6U=TNb/j@BhGgTY[-H@^0K"[=d+%[Q2a.
%-e#[SfNI;%Kiq1#!Coo7$^P7rq+7"gQ/3tO7-1o0S>c@J7<>2DH^)U.b"ZN=f$qQ*F/!\^PfS^(SQ7Qr.eRZ+bb@3*8gHjenPV1o
%.M&R6^!_S[<n`Gb9n)>a\k-cbYG5ugAjmG8:HUDXb?:`:hgN&o<$EimS-?ued0e)*pgD&g&iQX67<(hbr]s58P$K8cb]rne0Jl-2
%X2XHteUt+Ge;)glPqum8%MhW5-'seEUaX'^,:Vo3=]3`M7oIhE(92Y/OsWU<0,7&Uq>Dlo.Y"?B7HGjf8Q!%k/1E'XZ6_s$%Z.![
%e8^cfQ2=YY-[?tJVcPL5k)5XgXXZ>.GnAQJM9=kdC/._Lf4efE/]$>3!%mJ*B-olqZ_t#R2V9Z:k.k^9Rk>7nSK:G;TZl"\S-iB0
%c8TC#),h2%/o=q4U$Et;OVs,<Yd#<T$a"e.=%"TOHFpE7SCfS<6%ZF)XL4R3p'o%$3U\Wb@,_/9U.rs:'_<*t+,)/&"j/l?D?Sc7
%Z(_K0X<[>Z!_YsF9MGl`*MjPEdZVA1ldDj&kR@E2G3SOjT>Tb*:.D?.9dRkE2UpmrHU/'Ier4VN$PTbuaK"$eJ^o)#=X=(V[<8RX
%PU0]<Mboii@'pSH5#MG_$OL6;^rjW`/-?:QJeG30;D+CcZW0Z6C*U%r3"&Rd.bQb,4@Z<UiVJRX@H-rO!Yu,>-'Fa/@'p^Z;9Qai
%bI)XZ"7*lf"7(Ud"7(Xq"7(YD#$+C`#>;mJOXb#^=K'R^HM="^`Q%P+Y%;"K&_mW7^gc[W[q6lfX!KnCcbF3XZmm[-Wl5k4o<0p8
%nukejnuqPQ/"AUFrO1ZBb#8Am;=REPY:qX]%d<60r(t2WEKFp)qPA?8pACu">j3d%?TiB!Th5Ae>FGI5$!;$bZ9sq.eQ,5qU^Sda
%0@,ZF%'2@.<C-/MU!od&X1?X3bi4oI7`02+F-9X2/3amN0f.0[kUFQK,FbQnJCP.o+O@j?n-WcZA72*hU6TDpSri,CA_<0Mn;EVH
%FsRG&f_"OERT9Q8/6WZ%#=CN4[^f)!:H0Y/YlJ3V>(\,0U$59%h3,"pF8$iec$API;pW:saKao4%TZe2_a\^O>%6<a*%VSs+R%0]
%`F,-p8J9U,Gm\[d_?)jU&&ffq[Shg%ah]/8IPf6a3ap.H_QuV56ZTF#2.??+%MkKX`1/+Y$Y-Mg:e*I<ci*.j#spMJ;%I"GFu5LN
%H]]1B0$Rmo6BGqDMD[@ZWblZA-V1Y98Q.s;8m!E2AN19t:07d"GZ*&i,XI=\V>Q#)"KAh84i8+7rQ8F[@7WPKH.+N9WaA9)4?(QW
%C:2g]`l8E!;d0N)YH,=[6<90=;Gk;ml?=Y#,_d"jb3c,I8j60+/nPNk?G+on@S$0T<JZ>PL"^Us)sOe<bX+J4OQoB2on!XiO9-3F
%!+AD!$ggZ$8G1sp6"<Fd.NUniL/c/*6]/)]d@CZq0<\(>*DHsA5b0&%-u.QD6]+$3_s5UD9Y[l:]eH6Y(G-W$1iI\2k9`8=FaL^H
%2>`U]og#B8O;LmZo5JH,+U':Z;%#`@@@89]_G5g-c1rmV%&j@k6OLMSq$Bq9;A`f(-L)#=*oalQOM[p0'XPNU5M=S1FL<p#o(OGb
%</)&Rl@aj7eaKS0-Ocu'B1Y*r8-/.-ee3^:5KX6<6OL.Y$@+$eWo(?RL+oER74:qK;J?hUL(rS84:+B4A&q<'$:F*pHK:>Q6]*,8
%9oG`a?A$uY-:mESCp!=[R6Z)['m`p#OQtegbmZ&H18e=a6Rqc+0r,<#),d*_rf&)OHVbaShURcY\;mk\"X&KfJ23EVUiF8h"6Z*c
%,Wt^b,sm=TJ7>"s[p(4BoU8F>$/kom/r.I_89b-!FKEuf5QT)jnIrV=$XgOf8GE\1bYgub#JeT*5_SV,X?(?CZo?utLC>QI_[2Or
%^o-)@BB$,8S&[d:_F$NkVFYsq2:n*-_F&(G9R'qa:YY\un:6+f/QE;AltJ(bQO+0C;/<?u."hg6Nr.V+AK:@R(JR]di,ks]+;j.4
%_g:g"$"lBm&LS#t4S05nL5k`M7jL#>`^@dO>'@N2K_ma+3M!^r6C-@3%t3Lj=pPWLQ4>Q7GQ:bW`I-CqWS<*q!6eCVN::dq:3\a,
%B/\fTq%\(i6\^Tick!ri3N2&j:FA#A<%r!1;!U:-L$4*m<f9m?A*HA&+]geT9A=G7/$c6%4V6d<?oWni9)&lu<e<:VI"rAV^-dVg
%h]]h]GMnZiPtLf]GcBr'.H`eNos^-nK^Y!LK3K`o4P<GsSrY%<@>O^C;!`'MB#6o2li\Oq!"4?A*SpZBHZT)?qf9kRp^Y)k""&DN
%*lYfJhZ6+,%PAk!%`"fTKCBn3Km9Kb*Jca0:&#3D?lIq]`16:8_UXGOH%,Yu45]"M-,.J-l4d3;.J8f^&*H#r*J$7>kfUg.&Gq4o
%*e4FM`!HrV?6UdNKSP$+H4n(^+*lU__?1RdT[/Nd\-L!r)%Z\EdH?Gn$kmu5@m".%hG.)$rVb1XGb9&$f&h07F^KTTF5C[sF;]a,
%h,c3bl?)=*%`NqGWI$[q)kEF"CuRp^:2o>=pR+[hI"bLH,6,_;E+2T:(#hm$_"gKDR'49?q$#@nm.:J,`9J!OCA!4U@ujHeJ]51?
%UJ/uqpk1M>2*3h*--2G@qiDpXC3<;^M0.u*ds&o0*dO\r/KM&oX76RaT7qr%h012clO`q5NN_l0ihag9!H-YP4$Pt7s+B.4ZAW4)
%7+%B@bb-4qkjjXAk.u?X#o:QT_QmYu_oXWS_W$s!PDYD(3bHB)#tu?q&+&70o?7X8kAZ?8Sf-*Moho;fR2M]:m%,*Eg^OpVB%ojc
%Pf^d0J_@94r)0S7iJs<<aiN-iK*'6aee,Y*l7b_A;>`0[jq4'CQl.d)Ll,^)_%Qe?[\$6i.,6O5C-DiZ@g6$`W/>(s6pasubQ'7:
%DQ%ljBChL#-=b.P"$"6&g]`=>bU,.9$_1HX$$P27YiXWDph%O>@I:cH9SMK<OSEG7oduKi/NnUK'Yc[m?0L6)Fj5l.e'uT!_ck_7
%7AFXQ<OLZD'%]goZ>8TUh$9,_oN0[N1C86V%/N/r*HB>3LkVG1]4P/3gr7"kRMglIU96#=92KfVS=T&]RJ_WX2j<4]RlOpIblG(A
%@(mLZGE4d4k*mNq_d,A\5anUCM.[#pYeS^EK/rmNb]'$Ja]'69j%pJ6a37'a968<b"@`5l*&AgR4XA&V`a9FW'@.(:>6fFWc5`ek
%o'p8Ga.b#L*hn'FF,W2[0tUqM;p8$goZQ<u1rmgs\S(%tYCCW<TXnl_9\eDiU#HVhOhG`+S=:bc(@'<pCXUEYP]r*o'ltmjI!'Lg
%=K$;0\Wu)hT:jPNGf[Y:anEh@ndCuS.b*GuT2o'Ko8ej6&eu;00:74L4.OQt',GX>=2m.>$Up6!LUB"ZOgISnMgZRJB/H;abr??m
%bh>Ckgm#0XQNl,La4tX[BK!:ofT!!Fd<7IWnGN%UqAbB2>AFE>4t=hZ:-!<IJR-*/lLH+IfnqX:c2o'OC`qKsN2l;LEV>)h`RtYA
%@fa5oni80%Y#034"gd2>Ya-PtQ@)]aI/=fsB*"'l1j6tZ\IS0f6b]Km)b$9u``YSNg-ifC9=IERX4Edmo.i,%7`j>:k3ngA*/;5G
%RF%.Hq)]MfB(9J>N(N?[(7*S>+!]],=C/mZhHkmjZd'22]R"Sja5>fOiWd%YkCu=YAL;h'(#fE5C14!W%<U*%dAgN@CXCK8S'?4N
%L@OsQ7)a8ISaVIDE>.XMfkfB7JVFRlIl!?*TQ^Wp6c7(rC1DM5I0slX(U]pApn^Q]KL4HaCPECEL5uB+fmtdtfN_dYk%A70Z(gCQ
%.]V$p&a.!"E`1[d$CrN'3.jt'9cEQ?>T3-c7>hXX%M6JfMT7]q_3GURrEN8jS5F%JPn@XSQ7$63THTIEb)#gblSDI/6u*VA-7L1b
%<$TVO&Q)srA:$`_n\LADR4BMV47(a4b(qkD5YN'c_-DsM.3m-VOZ$dh$)+S35H-<N6Vf3],G)+i,G)+f,6A5l:QuG5X@0@l.jI5s
%ndUF2i^DPn6Nn(S#e_9\7XSTJ]&M0&E]+sQaB2>04CM;\`#s&"CDTH&:sh]o+<?>i>Y3^n&NT''$B$M\7T3F@U5LuUDl4jd7#mEY
%5u(iV%#6dNFp>K(HN;F88J=`Lh<mN]-B'pnVoY,KN4?#a`0^/[_-B1IKFp!U_MAN#8JpuN-!:89V1,?s,+s)06IsPOf[mC*V:+U"
%)%cs+1ke@9&T&06BB%:Sa:!K\.jN>^PUn6:qFM`Rg;*ZRUAVMil'+%s,GNM966I1cF+km'8L*6V+tI8Na+g92b(uF!;6*S7cY8]r
%Ul:ZgDc0%-*7?AN9uqD0PS*_eiJnIJ7a,r-PS%O@$o;H_Ht3L5\hYJEh2.pONJJX[TUn_"@[RT*SP(3%Q%Nj"dYM!OLWbm>1a90I
%[E2\mENTS4WAJ'jG>/tf$]drERkc2'gI6?T)A-bq&HtlIEMcVU8K&2AdINC,2Xrn/J/F[3rYo8_dmh7o&JSs,7\#T/kh:j.6<;pM
%&HS6tZ%l*KRYj#_!P(&HJVl5BS2h0Sr.b"9.$j2ALbgNs<`;IU5=A2`B>o3!rVbhWNafrKSi*k9JZk.uPo7d9aR14H:+*8&Z`OQq
%i1r>$-SI0O\k<q5%$dcDI_\edrID9g3\cg1dRr`AL*q=N-$7"dijA+$&e]YpKMH?qIn!))"0HS$AgqhNHudmoi/.<m(/^)ik\Rm!
%qMPul6ttnY$aLI-YT5%=XV?(ig%2.Q8(%P*J4H#8fr*2dQ:RIQZj5GFq7:R]>;`2hZkPR*,WqcscjqsJ0:(-n@d"UfD`6iMIYY$>
%3aZe%J<os64sG)R=:>)^kfoU<.TtuRC8'\>F/BLETdXk$Q(V4erHPlOL&Pg5XbE?R\S*^>^2g/B8P[Ec\d1<EAVHLm]$dRQ;@Qp/
%V&u,,)ELA_$q,)[Th,"MKE)]R59[._T"uh/I\I7`b<rof(QW@P1(feuq<$0)iN.^X&)@-6kb%hFFcB"&H)W2[L/\$U<&6DFhI#2?
%(ui_WbJ>h2-(il^%I%iG7][-XiFCMirq>Y;\KZ0%CQe[<TZ9FN;&&14baPdHcU9amfRMKG*SQjCrI$-J+Y]'3FfJJDH[T7`NWoEI
%%eG*[0le8R!4Ace-)&!W1[btmU1[T^h0p]h+[@\<1*"!tE*2NY$^(0<r:Uk_UEZ#9YL(8;CaNW/e(:!dBt+!3iLu3,cufQDJepo>
%b9+DZ-p0Gu?U#WOkE1i:np9,QRF29)DQ#a2HhV^kOg/A^H7C#jEGCDb$48lN)DnI?mAB>j_*r8+<Ec2P43pS[<8TQmBB)7OK0s10
%kN72<m$8,Z%FhKH.\@u,E66kV!N]>BcLl6a=99^j^/>n0Z9tgQI&==.1o3G"e?J31o6&L[jP9rNl9,!7rs5,?3-8T`\W3nUK^`gj
%47b1d#o2_UHQq1(VWiq^K4*d"3pZts9)o%[T%iRsmSEJP4tl0L6tL,!$3ka#Ti9(p`l*kpa[O5VYb]W"VtY\`N0A;iYtu`89`KgW
%R?q?Q-pJfX`6n8n&l:PQA*3@*h':;$n-3#]1+qWdXs5`0GLrCnX(*7.;7j_!?$XUG3%2NW<t=Ni^sWZhfA+<IdLC1"4"ZG]pCR51
%+f7TRGsfepgA+Q0;S@//dBjpCq.8@lcf3Hg*Te<hhLdkTgWeYpE8D)>r:Xnfgc\0jrKslpBN!P6YX:aaC6gHP+o>b4b8-A(D\r53
%1gAPaNJ)PRf`DQ9d*lf.G<+r5H($>Coh)RH/Z7)*-fr1=:4m34ieo"27V^fOmC-,,0kLKU,6^6LB=YY?Of.Mg1n,cDDH2nJYI5_2
%IFO1Ae(#LB#saYi:X##=:KWcr?PnuC?^N.mmbp=i8[`u!Z"mLN]BA/[Sn6*RD!roZoRnq%/B\er@D9$`;&)/n*7(tQn2Sm5GE'Ie
%Q=cVkP\,9ZP%M<>H/6nbGKU$g`[Ker#p1McCb[b5QsWOjV`edPeX2W1qe'o84YdO>nn`NgAojOqMS"32L8<M.Pc5aN,gCL&NdFO-
%7:.MX25f,JJ2nW9dVS_S*pXF32S)$c&Y6Up:J+;Id^OF]e4_)M?tuLsd`.?`,l5$XjWn3TZe[3rX&GVW51C;mcPDf$6g8ja(ZJT+
%$+2$_5U-CUR:M4G<9Ld@ZllI)\TF!FbE:_JS0c8m+'@>^mn'ri!A(9#-/%\u]'kqq]13Q7Z6WW_OQPfnSn3h#[EZCNP%D6qY$o0u
%>DsfmhNVT@b2QTf/P67,O$H:"/[4V6BV&c3^ig3q,hkIE#38pq`8%`m/DCi(/6b68->Ta)3oqX.P\#b2MLn$TAW%lF:Rc5gTDR.h
%,eS?"1#s?lB8'XiZ#K8793']$,MZ4_p<#-+P,e.^W@"d:kpluL4B6+!6e@m.8uS$qkC,J+:ap\$/'i:%p<:*FP,kr7AEUKq4&n45
%\Oua<W_0E,0M<1H>br,(>bqk,>br*GXqDj%crmO"Sltj1F-ZGr3DeLKHffjJj=7!<bIL5,lKNSsdXt]3H`ke'+^^UWQ1f5"T'%Tj
%PnSXi@?5r`Ym9V<iMK7\n4k92l+qNk[T]h3]roR&@'1-Hj7L%h99j'><sc+S6trf%:%b7*?V2m#AP6&*4JN;kj-%?4GK46jRS$RM
%Z4bRM`s!e?&SnXmp\'1i<Tun'-0]*'?X_,W3ag33!p1C*^=T3ic[4KnX@(h0[S%md#'QSHI'3p(HsF7g98'9:=@,?+hc#g6ar+cR
%We=qpqI`F#dYW7L;MJ,M;M%&3#u@QrVNk+,]T``%VGnkSrcB/)8QFbTR&=5;-r[]c]`1]qYKO"<8$u#:Zu6SLZ:q+.Es4ME<'p<^
%Db`'Qd$%&4`_r'%>?uGI<T67lIc;_nSQKk!/QIXH.bmn_b*5Q99I4-kT<4MR6u/"g_>8-[9[-O_@@!nbJubaojlu:SC3`E!au#qW
%2(_OZf^0c!BhFoaVO4N#9#P3)@%%^pOAJEP1aU!f</a`X=/@;JcSQq#@!="aC75dn)FXijZe6VAGC#)]mr1YDPbs+RZf=U"1aT<G
%qd`ZU0`t0<Tq[4JAL,3&s+'-3?WhQ_]MJD0*9[0:^F]]Zr0MN\5Al9u4aqj5(ABaISa4&hp<W&oCXeut:Cm5F9FHE4?f4apX&jMa
%:K(s0k%W8T=4V0JlYKc/gnIc%?^g9t6)G*Y4-i72XePg"As*moBd:&a-),b#0p?=pnBmsTYC#0bi\G@(PVR*k9'iZ@g..8%6Dk:^
%(#^h2[%[G]+9K5g^apW`3S4=%20cmaglOs9g0U=_12Rmm54ip/]LUKFm\"L-1`90:PcX.#<u@=f]2hM9!+l@2PbPk!.9:,LTe=1"
%h94!O")B`@Q8$SfX/#LXQ@`):pd]kFrEhjfk"ma-6ENSqd?3Ks<5c?nAlP.1`qN?e)#_9oHba4?7[d1%'K(i]]MAsG3U<tP0-M.1
%C\&_?aCUkn'[%W`+FiJG6mKEMh7U*`I.s(rr1jp=GkR5H"_kKf>+;S`;@>J3E+nj&N?PBi(L6XUC?ZC9>_0]'[_`gVYJ,>mQs?$6
%8g"-Xl@32?bZ0(9Jgj&?0,2&aR-",_/Si<D5%[e:94'l?%T^8)B8uR$ELqgg;ZBb)Mqh=UPt$LTaLm(bo!ci/;F8),LJD5X0eCnn
%*E,0SSbEkYCmX"`aVQO:q&F!uBW4maB_WODg3'o@J/-D=^CUJI<24c0YlXt#i[WUiWW='$"#usa$Z)ZfGP<C.Q8Q?#meMf@/j-)i
%*DF^n$AXXCpL%CcqQL[$\5C+s04;@/n2=9rf,!'V'dmF=<f"W#%<D_\+&WPr:MZj@Wg@0>h++;:N%75\.g#11&81fT43pX[0+s18
%K`:=kNE5(_K3;MY?ZS6NN1hcqEH1[7>L0r%%drna)i179>XLWbF+=]INtKk23E![t]s:/Br@C<*\!O)HcIW;+SUAEtLBIMcD!:TN
%IT0$Ip`k!P7ti;ZP'Q!H5*`hDe-_$g7LaHOg-NOl(W<>s"dA5j7;7+en#G,D'an0.>fCd(niF!/[<n5D2+2&D7q__On;q(lj>j1R
%2^d)_Hb-c_h#[7sa^T/`F]ER<O+$\aA5[9S[)On7LHW!HgM7de$:EIW+Pt^Ih]#lp@%Q>&aYjC*K]p7`K[n0F(])7sVOG'[8Y*J1
%!kFm=6O:-#7'MMjXaj+d1tXRm/kV.hB-3)e'0JO;k"hGkI?dV]B9;@hTZg[6"a*s'B,1+Z0UEVL(<tV/8Mhmq3=9SBQi0F'h,Y>E
%J[tIVN"5d^IDtD!_B[Wuo)drOLQaUBZ3O21D!9<3Y]AX8#2Wc4ls8]GX1HhI*qdnbTS6\NFLPEj0fg68`h"LJgN#hnZ67=bLLc5_
%/Ejnl*U&je!dN4A=Y78O]QFW#SAdGE"SZ5?[2-5S>^DtN'hR!L])6`P(Q>4])BS':lUMJ6l--p889ZVR2b<:M!di0tKfQ+`hTk4X
%G&!@cL#"P4:H'*SK3%B&.+c1qVaMq2J0/9NgYJ_7N1JpA'40r].[FVr'/TJK/=Z'Kh[<(03P%l(HbcE'LqT!2&P3PC^O&QRg.f?;
%8\e91oj=(jEZ%mbJ:+qp3efZ1AtLG_HW>$Qr6d.5GgX%U/i,i>PAZUA`SAL(l3=_eaT(FSNS@/]#$^>9CcA&+$Si'oW%^ER27%<d
%kIK#aP8pZ(GFK.a_`#_iD#=3rY4,AR9>iTm,!/VB5H9\'"3UmjMY0.8>4r?)XlEpdbAdKuV79[H9VPi)?uP\?gee2K5p-q3JYkFU
%*5M2G#bgfn][&N/[HU0R^]fKI?pbSe)A^6RdK@BNd3tf0^mFOtISL`6-End/;np5&(!r:uH*CrgG=Z)`C^CC9@o'^>aA8d!#YR:0
%^0)@IQOcpg7?[gm2[O@+4$#%fPo%C;NphqdbD,sINU6L%ku'ag58\J_J=4Io*hu_9DH;;:8qK^!]RfnH`-MZA]^4YK\d*EgQ/ekG
%d_L7dA[[j$U<.&@jm"==]0!9*]61Z+C>qV2$kd%3U>@Z%oQEH3PNjH\R_ofHB!=G3YZ?IW-F\mPZKV\j8,C,VIt!$XnDkN@;NBb>
%Th*`[K2am7r0't+f+K@!$[NG>p-+d6?rhZ]_+1f/oY!/?@B[DkQ^Z`_T3O`;A)<kl_B$+T)1e+U'8#71[gghl5_dPlCUZ]Q%N&fr
%ck]3tq?sA>3BuJ^C*4K3)DAnlp*oHA@<!h(8p]Sq<DFg*Nn*c;[/k)pq,iH9NV;XV`_-5UI@e;?+7Q,,.iDqfS1^#F.GS.-E=oMs
%'+Et8e'O%<jEYp:8Bs+]Lk"\@f)-hYWpt5:M]df!0902'nCt0[*;!_`Yk3_;3?0hU;*cYT16.etD0#Q)\_hmnWdtUH,C@g,a"*^^
%\&>>6HbhD,"1u4KCsECKZY]okoJtarG0=es@?]K?<>1a+S]j^8J%k[U(P.PbX/N<j:l,8^eNYG*,''a-=@gHuGM%B*kPK1iYAe!A
%RJ.3u#<1a-%[b^1*n.8grV-QI+8Pa3gIf[aJ'$T<Dcf\DnR!s@G;Og>QX>2kEV8*79NX^]rt3m7/q\'V,1/57r7H'S-Y@*'."/D>
%8I!gs(!@m]AZS=LAO3&P5aN?&N84>n]3Qt%8b,#/k)S_X^V\hMa)?>mLBPtRjD2GB`\2<-%1qpH^BDQW*C'$&7[o^W52[p@Sqs?Z
%TP8-6S,_t0Wchfah:uqGXkPt(9(2Tl`I.WrKp\07HFr]RntfQ%3.Z'q[j[cj?*@#fZNN3f6IJXblO#&K3':L\gL=]A%`5tf_mFc=
%^BX#*knIk-pDKM"dAslRrrqj5+B'7hOWcVnG;hAD&WNq&ftFV)6S6r[=.24Z61861@%:HT&4Wc^An$?@gJmQ7m2YU7XEOFZI[8IK
%QIg(+Ue.!\0InO!RZu+H%l7*:?3f4%gHZeBBVKiH]=]*[ce0>;-_TQfds2&7#h0/mp-;!%`61UbeL,kbUBlK\l,t[)UhH"e_TON4
%=@MP+fm0omK\6!#AZA:-i(#B0pOUH7qb^J(;63`d?ampbXEk4=_1c"2(hNYMm^BGDLZif>\9kaNg_,:A[g"(`d?oecj@_($JY.Tc
%#ajl#i6u[diU+,E->:K'p")o,F8u"E:YcDJ.YdYOZ,jR43,7<;l<t:U<>CGS-*Qb!11^<l]XgrCgFXq/p4h*"BZ^^lhU$<]C]Mg\
%3#_G)dblD6W!Q?q$Z6u?M"uhBXb3mA8s=)]Z^ajo&j".u&f2u=UJ<%;;esSBW&KIO8aT+[)Rkpo<oS("s-ar50e\K8Skb<-QWN]*
%^[_ku'7+.U]#W-f8AVNZFBM][EN*ubdAUH1FVt?X3SKW:CYa74\Sp?9)KBH$%1N!E]T?:>Ho8RF-T<VK=OF<lMEX@H><^j;<c2.8
%W5"e':eW#'J(g_M@rhI,O0OSQGPT-h=j&kC.BW*UiP^>nYpP(tarYJ[qk`sq^sCFS:\&_e6:</4FcN(18IL-J^c\g5QB$R?4<9Al
%!&L;hGX!fD`q>u6iOk*1lpkGFBs_*]*pbh.*4K.XpGb:ZWeFK.cZ@RjBt%VAEQk@07ah\O^f3-$#1HP\!eu[dI(+2P0qAB5k>6C+
%B&Skb3?[3YDdRtkY2tt]NGeT#cU(hMlZTa+@Lj<R@Oqb3poma/WH\7YV$"WT*.G4oMSVKW"3tSk[f:_m<%l,j,nTd8SRgBp:^Y",
%`I=dUl^R4A7lGSbSY;Lnp@V[<B.--B)G'9Xb?4>+AN9M2'(!=g4=U2Bi]BMU'8o[5hq8+D/@##rHAs/Tq9F;b\n9jQ"*aLPaejoH
%#HCB.b?>8Si4K%Z+bP1,Y`']GSb;+k"-_oLpP=itkH%0'KR(icQ>O3La`H#XQbkmu&:)%'NJ@D+'AJ]5%-$_F5W$eimm49:cWO&A
%puFF;Ct5T1Es><dmd<(s1&%4.p?bM-\]B*iJAlGGnsj:D4D2IZD.&sA?@@MuNjBedC@4&KcYFS?(cG5ajKO30kOYOY=1R?"PtY/&
%+?RlAjKG9gmPr+'ctWmT3'/j=S7O[*aE"?\![l%A$&dgP,J^ArF.AqkJD61R2o@m\#-.RFn?K"/kf_/i3g:XtB7IPR/:UuHS=QlG
%c4]K(1Ldh1B];!=Rk*kQ43dh1R*cmd^q)VV`,Q"*4im%M_ot#>QMJdUKo\q*An`5q^DRF8FISf[2bR^Ygi%ok&Op"uIP]Q=E3C;\
%Agf`L*+$*VU(\#pV.Me[09)DWmPr)e.d;;khsM56c#K%1e/`17-bJF*9Ab5?S5C+&)JK1kKM:kNNe%raA/LBK0`bm]!0^B9&T<n9
%cknD6&8_!tX#@E\_L\=5=Jf$kYlnEsao:l4la^W;JZNn=I/"GBIBs)c7)/tO=*EhIpFTCuJ=.:,n^b^agX@iejqKKkfFYlp4ZfF)
%_iiI$InOiDB+Hj<n&7qZPuO*G'`^&P)NP8hGQl_VfE#>bT&d6_h\nlCmasspV#X2OrW-IUDEJm(bRG#1ZO)r!Y3_,N-Wb$>;1n^,
%S@od(7t-)kW0dP*q_"_7KZOpu55NLS?XH:jZ1P.<ZL"g!rt3m1]"rccL<d$,>TDJ<X5./@^KY1S/*Z`HoHD*Uf2I9V3q;uCbn"C(
%[!t5g_CqI8LE3r,1+RchN`PN7((73g8:d0Wqj+=oN57]Jf"hXs-#e`C0uM>7er$O0p*B!taRRJ)`R@SK3Yh2Y&`]n'aVX>J5+;K,
%9AeaYUUfH6>,4X\352Lm<./]Y3jM@DomOB#e5n)t^>!sCWt[$#F?>i1,*eh.7O9lC;$SR$'HiUe[3Z0IA`0@1$85pY;/D(urIf'8
%W[q#GT3rV/02MXMMdnCU."&Q#4`#[97>9u7+(([;<5D[D[Qm,Ys7Rh^!]<:c2_Ru0PM.[T"_p:0G9/pWp7j(6V$1Tj(\IDIC@n/B
%fb3scBqt;H.`5sP)C&qLhr23`V'#LB:.l;Yc8S+n;"t<5)I&n!LM^@k`aR0h$8n9MSGG&[;3B+)W:S8]Kf[u0=/^@P?_Hn]pSrji
%MY541-tp@#YJMs+I&iG'M%e<#4MF'hd"MEn(+<RVp1+P1_X[bniNtj]fG:FX,[[58.Zma[^AbE<5uoC]VE(Baks'OZlO"AE-]El[
%X?ljlCg9^>1AI$eFn^::$MI=*'VKA__?d/jr8)H7!IHZlT!"H2E!kfW^b!D0QO)AF^oT@65-XE`[i="_-P`0Aa)lA>9mOYG#%g%D
%SuV-p'*cEJMY&u>k3Xc>%*@-RqH&1=G(V*=n)m*tKVM`nO1,8ZV7p5_d0dIGMCPqumU5e9Q%J]dF3bZ%k_s#6g<QCQ96VY&Bi=ai
%YL%c'_?e0Ko?-J(mLAap.;XCXZZTeP^\j/Jm&2hkcO7/s`H/J[3i1qN-s3<0H;N)*nD4:khs9KKI*hS<j9&q!Y0J%tBfi(5`n]b$
%3**jPo_"l\'?=e-If@C+\K\,2$q+L317:p'40.2O\MG#AWAo;kO%XpV=bBt!o^66YO?H)bVTFP?!Q9p:Ues+b4TZiqL5Dm60^rB0
%?K5D0o.YTS3IOY.$,hQae@<iONC@)b9qX1)FOE-NTiBY:#E;Ek-&F.e%bB[Gj*dr"knsY`cXW>QQ_PR/V5T,BDDLsiVl%EK_-g+)
%"i^prpHGquk9U//golZOguT@S^hu;!VpWAf45;u5<;DA5:\SsU+-@G*06R;c)cS?;NL&&:!N283VjEe8;u"P>cq%E9B<Se2Ge3\%
%=aq[?s/RUb2Au[EHFr>?CuNtYCGS!XOfYfSQ?J1:\_V.W/"pJ(j@-8.CbVhS0H2eV$gQQi]OcI[Y\juGMF5C*]`,1J("KSfo7Dn?
%^!_NOCV:gn,eT7a-/7bu>aY(JIXHf1HlgNudYdm1;p00L2gP3eYb7XpmL1_H\)6W/2QS6(q^o[qFI_NfOSKc.eG)qMnkqqHGTMVK
%JEXG*L+Ej"H@(Mqle;3G%"C'SAp6a73f)#rl_PLL-uX*jo*dj!N`US["(aG9F<b4T=bD]J@?6ADYXaFHfH\3Rp.,?O4R=f'HYIQR
%@j[\q_B(,Dd@>k;@1Ra`BrIr6`reEdfA[i-`/NK%5^Q[g`aijIYc4\b9.aGpiuYPipnn?\-?tBjegUoQbfK"V^rIFtJt)obF+cBa
%"[7I5jii2$/&\7!`uJ-)bMsXBPF/c6)>BLCZ@>d-"0e=7/a`Y`Jqt3:3&-J@bhsi2!68p/T)8qn\4;9*mK%.K,OU]j3!VW$)8a?G
%JIck9RDUrC30hAR@=aKhp%_L,)LLCPG0_2RJWJKTlL'36$jS@>idm.(o>!kN;hQASlS!2aI%7DD53<,_LBTm(n7kWWnpuoAHo?h/
%bQs""$M1M:A[CsoEK>M.mn8e('DBL;Jj&[U#2Wc:1%G?]q4RE%#@OU^C69$77L69?#I*4"[>-q"\V$S+TasnCk=/#+,E7?rq>acK
%)GB:(p?Y>9d)SQA+u`+Fnpt6%,BhJr3Am=s@M,G3aMnn5HWiSodY:.m2q+3iTie6Unq#)m0=T"ml;3OhS=T#/O"Yq]/b6`8#q+X(
%T,4$M\MLP3ItJDKpWIJ*BfGu:PBQO,5nBM:MHG<rZ`EB70>C&i/!:X$GUhJB"'^eA_8+9ALE@bCF'W+@#,f)6k^F-/5?P1$Gn+9n
%p2jEO)(J05?d`'^KuZAsKj*&OeG(/)\4U<U@c8#0*<^h?F8&F0!p`JFROZul^eEA"*C2*I0]Ot>&Hpabp%_M/G3=L^>clumOQ7Z&
%=`>%E5I<iTkZ9V8HiE,6@!KJF_KY,h/hTaHEIlO<G`S++"_Jbr;mQWLe5EqrV-_!jE&-U6C6FFt\QY^[$C>haL`.+sF4H(%,qeA%
%\*9;k0'?u)/P.]F?7D<2[*P&%82?MFh\5r=>gA$c$+IZ\O']PZk1tE-kISTs,;VW>b.36gNA?b4$Mns=8qPZ.NIudJ0'A'OQh(BE
%bPB#rja:LVj]lML<\>cVZUX3kO71He+3s=s/gm-0=lP0W3S>A>j:s9pb@VI+FM9SV^H<OT\==N^[XF%FDaf(:kAm/]P;tF8CsE9,
%>q9E+5+%,O&t9Q0-6.r\k/@$K<@p#W=*OLg[d$pdnFK;.Yk-s(j]q[j/HX+A+BcSik89b2NSm)NSJ0@lL8WK\f80:.M9a6%j`ZRO
%3EMA12F8c\XLn>"caf2f@slQ:F<oc=d2Lb(d;=Qe1MbMo^#DRK53H\64l^q8#G,pY&O%Qr%k3=Hl%#;KH([Ld"Ou8W'/Cq)E,k$1
%P;rXK014l4G<l`eF5m)@)j&.2BZhGWNCN&8_o#bTk!\rCT3+GB`7QIrs(]dLj;r1s')WSU>g>3s%?no((c9Lj?h?3=d#Od'E&h!u
%a(?seRQdX>bdjIVSWc'jD7eWGS/F4?-_HuX)-&l@BU_<MA6fk0OBai"dO$F?cc8NJhT;ABW4r(DP9i3W_TCg7%AhbkiI+N6l#^-d
%90>Wei+AC5dPHXHgK/>"d\Y,-W9)#cYV4Tg`Z.:X)[s-&k7g.ooX6O4nUi,]rVZ"]$oD8$@k(jTTBmIrd5>sg]5,oY;pbYSc+U#q
%RS".hO-dSjUY2=!$[FT%)iWZf,3/EL08)W7n8!;G)Y-='k%I>J=?kXf)n7lD"n5nWBP6<@fd1PX`;Z'gpF7F2hc)L]]7P16Lq)<G
%SoV3i]H4kSW_e:)>FiiqIpp`J!?\Fc71."Xph7;BQH$NHJq5a"6=$4#G6JArg(*d*4G?b'DPb]HC-#=FLk?8.DFI,^D7Vja;UZre
%Y_56=pZl4O'Y&5VQ;[3<>@OrSU>V.p`q9M0mDI7B(;3.*K$t3aI_U.Gr9(X->g't<*NFW28;$DWij1H!#(cEic"N0_m4_L%N(6lr
%O(g?&#KXnW`!'!u^fF9i+L7Gd+qeMs,fOU&N2Wjg*j]F?$?npr&\$4qRprg>LQF!IQn@C<B4r[>N(RB;/M;.<e_0RfUVNnMD"i%"
%YoL)ui#Y")mdq%NluS*<-7m,P1R_d])>:M//k-g45$b$EpW`?I<7-Uo<*hX*g*1MVnSs,CJ=^,K6YO&9>7@pcq2h._H,->F/bJ"_
%'@<9aoK?Xkq><d4n;&YQk9C\a0F+N5oMNhgm2ed%@)h$/qftp\[X7)G+VEHlEgDPPC]P'-"YjTs-ut7mAkO\N,c2)-X%qq7>:Am>
%WUE.-N2<IiL*LN(:ljA.#C5)_]i'mFVRQ<0D>HeagnsedOkY<JG).T<Rb/joWAekY2KbN[DH$R]n1tN-*4am\P_heGI;J^^+]%oU
%XN4CKr6cX?_CTT:&,3$CD,F:X;QhBa]6hgDdoSah5s0%C[Ac/">\rYQ-nS!F(0Ge\QH*hCa+6qD[QC=`=PO\E]Y\RO^2(7"SAf>r
%70HuW[_(]YSd0-6(FPA<i0Kc-YU+7XYS=UlBF<O,fE/PH5p!O1n!#'+l1I2[Rm,:F\#DZ6j>OE:7rD6EHfR)-7ulB%T(C$?l=#b/
%VSS?=[qXXmOqtsY,I_A4k/_BXZlZbPK0-9An&>&pjL.<J>q)5a>6e/Goj5.n''69e64:3s7,9^-m7qrX7\PO=]c,DGU!6[`d:PAC
%BMVa#?9;l`)NC$qrZMV[1g5e#4(YksV.TNBN>=03ga7.f/aA>6=s6:;I/\Q/erQA%2Om<reghe#&L-W!g!_*4>0-7>q9k,,'^,4(
%N"B^&_LETB@.r_U;sJ;cjH_r&W"3rTfd0!0D7T)]_?hFR!=**MYhNdIiFH!P+8H?U+t_\i\=pamE*$]f.ZsGJi(`>>rqb9.D^$c_
%B?^P@j+78&,44^@N(Eh\,9tX6(TpB+jb&NBXR'''e*I=:rThE3NC\ue$aEnCPEteqp'5*U@as$q1aXeBoXe>[_PBn.B$t9N0kiF[
%9\T+aB@>q]+u*f@$Gl#m7j]gg6o]hEg]$#'?Pf^cjgDM"<ETO1B/V8FY-^TsZ4*rLSodns!URS$atgb9XJTf._4#3d-7tEilSf<.
%Q7;C>_!3+irPgcQ1h?Bl7L](r:;8N)rn2KP?LITFDf?>U3FESg!Tr.GMTZ"#@;O[683#*Z-nZ_b*1I7h3NsAcC#UmuS^6\i,3d>?
%7^R_R)Tj2"/T\_1/VDq[=+j2hnDSR2eR`EBNl#kA(5OKqVXGI=ToS2/?qJN1Z,@Ys0?/YH*1o\E'Y\!9Tq+<E$j@(iUVVOSW0*aq
%'teK161Mc_*C37nKei!d2XHaU8cBTjT_OA`p^7]K?n90.,cF%tc>eM,Ua<clB%uCNo9EX#6oe'IHH.Hp:,u.)g8pm&7h-6;(AS9<
%!sB3:UGW5\$?/C;kaMY7oIZn)&IYupUHei<U76.qL]q^M*2o$B^_6s1Y]D*^JKg=8mGPa(@7Gg2]=1r+`cXU\paZ4M*#,=R<XMg"
%!cZ8UM<s1lQnSj]-UHD+Ud23F,7$t![9Nq_gJ$5KnbGeXF_XYRG5UHt.LXZ*:,5m]5]JJ[(fhMN0?b80#96^@UK)epK)tXsaai@N
%Lu!doW'Ur#h\*V!36#[B8B?;_(>;`nY^@ueLJ`0c[h59ncO4X7$T8&cL5c0Z=CgiM!(AI:"\+#O=)<(lP5n%qC>pZCMHGu>MuZ:+
%(u/#&n\2<HSHPlR&/##$/_7d<@kB?o,KG%@!+p&,`.6hq*%_pj=hGB$M8"]!$crjoiLY'djO+cGn&g1?%#TFB@mH<\[]L&-gnVl>
%HM+QuTY>RJ(C!i)V$?NH8),W4adfk6pk4)`/acX,)O8Z,mKLh7h-!#-fiB?@04I_-k6la)R2eh/1^f\I5,H%2i$?F<Q]B_Xr$R]l
%D1;=@&qK%@<.<TL-Bh9[#qb]O\9Dj'*q=f,WVL,s-t*_&a`'F-nXViR<Iq%2c&!Wh"2nmS)S?)/K=PgG)n&=1?UFAh=Aik]m1@*J
%ht&FIK;MFS*8qk17c_LK7DuMJ,((W>2$a:kKSkh9#/4DG1gIgd'=BO/^;EIi*O)nVo9rb.G0Prj*,Pq?^VkS/gDr?(g3,>dU.*hq
%<90PRBfdRhT5@X>f;uGe^rL):cL>luGT,An+:Y^J\Rc40]H]Vp;\%T$.#O$8)O`cIWeZgZ\V>d,FQEjDXCV6o/'+oCkoJlQ(0&=l
%@bJ52BbAI-BD9Q.kl<8jY%"n)ctL_3BjJB]J6h+P4+^e-,SML5CgnpE!)N_iDg0U^Xih6Z8CE"SDgD(N-*FQ>Q'+Ri;5&bAU6i*1
%k)%V@28Th?)I68O4X[mN/'<L7=naI0qF\rEYUnRH?e!nm3rRLr&8Y;pAV2srNdYfi)1!Ejp!(nT3A74#s$Y#ef[_+QP6%[;2$(7p
%8_)PfjUV/#/2&kH0P6K1K^lm`AW#&R90JA,gYA+SGdZ$i]o]#CSYNJJ`:,^4p!5WKCh!?jT5Qs9Cb&T`>'FOdP(]ebmZc^$'V9qg
%.]l7uN7!SNpMi7.E/"K28^Xs(BSNC!DIXJo>-VL'\Fg``17IZ&89c%T3lR@^T>d`9jc1#(6B4K.>[g/T`p#g^?BU*WqT!K7j@=G(
%"`eN:&$%A-4Nn&3PN:n[)?8&Z8pf!mN9_hp$[L(']g5S+,,jGdNF7-i&$T;!]Oa8l^ipUtEp:94>gX1&`3HC]):@nmV-Z,eDGsFL
%]l8AIrURgR%^9kH\C+5[g4m0/+b8Fc56cV2TQ6o5(-\&th_r`U<'hc]FM0.']o&OMn&R:mUC:7d)H[B5(k^MWC?QFKfGeKr[:+_.
%QrS16834$<UWlQ?V0L[-Mp<!*IQh?Xs1j4"EPTkWaJeVQq"Sg'O;G_D.RBq/?3K"-*&^^8qn]RZ7(1>'Mdptu^0&CO/@4^_2NL<R
%kf\f!;,FSF9O%^68kJ8Yb)=>Cn0/?!GS(2I/NQ3#c!,W&47^ol,HkD,Rm!fKCThq8&9J>B*ZdQg8t"&.,OT&Bj:c_t.S(C,!q7c/
%*Z'#i8_e"@70)(.j"OdBT':W"#pRMKoH5?'&]BiUjG^]DP[bjiJm[JXKX;"O`\\-."Q9qVi?=sAEPb;*+I;6de(_6I&+\.+!\B0s
%O;;hD6&R^1VaY.GBG(&+7Z5?kP\:[)m>VmD5LO3W\NLQW,.3rG,'!c).jF^V@R]?q1KHp3?)&1rJWNtGH-@*U,*+>M1?9mV*"o)Z
%AqFBY1V2;+VjC6(1L:2lRu54Di;+H+14ORFR1!=(f;@[r#P''h3KI?h&]E[:A\8;c[jUd1(EklZFmpT272_QZ/RL<ES%K#9+g=OE
%"L42=Wk8Ugmt2EB/@Z>J+#4VEL]\)m_uVAA,!X.n&c%t10-\0FnKRO:.PDu)8E*)![PM5XDI_]qjR,ROLtm'kMo\%t]SJZeE_n0D
%)dh$&GSr.YO2StpaFi&g&UA?Y2>4^'J$jB10Lq9:/A^SHMZRYTSYc'If<QH(=i'A`g0i:1,I+%cMdLH*?;bD'Dn4\7di$ac(a)\)
%POT/9+jYtY:5l[N,l2-i\o2(N;*eY\2P)[_s2`Fp08]]-k\jLG$;;F(JCOp`bXNNb787ELoRfWO,PB1oL#uM@FT$>=-djfJpid@@
%4WIi*n)`N,M9?obSd-5ASHU;d2<sfSNHEHa^F[^VJ'"Ic*jfr,5Q(%TIRj#(Iei+"pU3%(jCbr?^)N=7=ftZt*?BHJbsff0:_=(I
%,IKmZ&m-c(Ak$E%U<%K2VeEO$7k%Tnlc_sm/3p2D-b4egK/9amOC&_tVMl\4WBT8D+3b+djN!o#'I+/Hks%umc4C:0kX(:U^HOhq
%p85#XNn!@r-O:'a7>ua%6'Q@^9Op4@es'V2QhL@IghMn16R8Mn`s7!>k3#9\N@!6E0aKAPN?)pX$>-+]3?si3fu2)JcKq('hm,&k
%mb()G025H``61OBVH_uSg@4eNk:*2G_ec8KWKAeC\GNdTH0V5+SLq/>psqAaN0\6rda"tJ9X4`sCU5b.>_IaO:92R7h7:8$h0ra8
%3W>)rhOWt:;7leiK[I/$?[m`^O.:XfT#hqS'se3:8<'E"IXMce-BD*)j_-qPr\iLk'T?cGdN-H1apjr.;oh6Sqkqr7G;$J[3';#H
%Y_eBkAEc'f9k^5$Q7mALFPW.2-2lXm9k%YU,q;,TIE7X'IO,eL?n#,R28"`E\T#kOGW(*F&@*".(_3D3i'4DGm.M,A=]6tJ)2MRI
%cm666)GP_Qe7G^.9e>Gp5fWI)ir\gBDn#P$J>fc+;LA<CgQ-a!F_kb@=,t\pcWAk*qBrm(`K/0-Y"NX=3Fm(83K>LKCj$)0ad)Yd
%OOrK,aYb?,M:PuslC;mMg>bVf)`NFXdHe)K(uO?h^L2e7Q>leJTpYFG(*R>1m4#g6Smhs5>h*./;.1Ca_eC1%<Jn8A$;F9@^cVlE
%X^C?rS^ka>Q"<oU(iRtAiF?7ICj'#:Z?1=u+V@S*l)2!p4GpR/X>"$ZMN+,I@_p[+b^7d413M(*bf&:L2E)VomES-MT*9/Q,k_Q]
%?"\bMA%3"pI:G2Cir434H"BAA]I(]QE09)3-S1i50&+Z"B:c\.B&>\Iej1Zg4>D#?Wf'?V*,j>R-[(7r6rCS+h,ubr^1>rq3d@E\
%+cBH=Rrde2MY/Uc/n0DdK@kUAkV;>]43Y^F`PD"Wo6j=RGLt'DO=t4]h_.'bjDqbJ@qRc(e+b8"]`%s[/,RM.X-K7TOtGL;6eJcJ
%Ang!QBXWl6r:8St)He3%/0e+oM]fC6>n:oWjjO=D6R0bKoEEdqY)oZSm)rAd6M^6YQD,B;%R0h!-D)>]e@HipSko^Z(nI7;L^[7t
%1c!u\VrtZ^i8<bjpsR+7+J#*2*uh44CkpfPdHT>/iIKLEl&[59SK:lKb#(2_]-F%*@MuTQkpAo5.^eZJ:.?K6)kHuESD.[uqDQe<
%kA:!J-J!QKZ,;$GO)aBunI(eaoQ[_3G72gj_3.b/\b)Kr2`n;!35j5s!80hJc6SR+k@l!7F6S`EF"7.950fs"motcDO6?0)8Fi;"
%JjZ&h6nQsRoh2o4q,F3=bETAH%l<'gfQ9`]#NirF-.6EW&a9fcM"CqR7/Hg,,LR[76kJVEm<oq>&718%`OXsbIItdje[A!'N\ri5
%C%5b__XWr*3oIXtJ,ZmYaZIQ=@SKTV`9PNQs7!<?oGI7n^\h9!;:_b+pM':d?ZdP"b*%GkPcVtXF;>_q[O.bq=qhg:27Xg&DHW/Z
%QIb+*V`":'APEB;4V/cp17is,I'53GJ0V%sqPEH?cUA^?hBJ03(M-W:EtY<#b,cBrJOV97BTaK.qkB&#]0&>%M_](R"U1ESo$d)7
%3%-B$k`9gpjJ)Q[<V&Y,;+BNM*IL.WPYjQfe,X;^mPXVDCf*AHmJ*]OiO&TYdZ6DZ^;G4EVB>UC:(&l7/iY(\QVg%#6Jl%756l+5
%QVj;*&smuO`p_,MZ(@!qmYR9Qq0Xu*R*R\]PrW1'(Zr'bS#j'"(jEKn[!u8ZNbMR\Lf;F,N+$\9fA'HiIXAHX=(Yjjoqc52:0:hj
%1RqM.%,8ppT&_DC?7XIHbkH<E3*D[>SZ+rD2#V&?I9W-:#`[0Wi<+H4ooj@Z4cX-S_cKt3c%EU)_[!\A70DiE&W7hFd,@'Zd,E/e
%?A_6RrV1sk*PMVV*Bmj[>!j;oIXVhe</1utP`_^L+.s3k4kdgtHBjr/oLO._94u=MW!jb%01Hm9Hl:5e\Uq*a'g3mnqW2)BOPp;3
%=D_TgZ_#ZoFoUVqH(DTEEQK+YmC*BsY<K+j]^[""Du[=g]iFUr%ke.PX7Rf[=^%Xl$/S:cZq'V<^A^uMVO[P[7l`&sdFUV0>u=Uf
%^Aa';?[mZK=$1H%Q1ka5hYn1c],skDEV$8kmgnEDH2F4gg;At-ipD6"9W$dc3,[Cr?>Ja1UE_D)o"d]KrOM*S]0F-P;#D:_0*>t]
%UWSna?4Np]gblu\["E>Agrn(TOY4hj6lDN&_mosF$F$HC+j3!QmU[k!pG0S9)!mk5U=-fn5/`N>pkGXkbE:FS^VK(m7SZMMNlK6_
%5Of3.\X+2Bge6/eM*QpY?B-:[OM^?/Z]ug/P5Q=CFm^ReQKiO9lK.5Id,dn`mUNeopeinP;XS+N,PMg8C7HD@^)T:NB_^6V*/<XV
%GLttL:Y7U&^&B+)XalJK^f3$$M^a?ZCA$kbfX!:,rl3dEH-./Wgh1^21PHLlmbEoT40c)gLb*05&qfdGhT<\YItPAo-[rp+l2tW.
%3P5G/Mh%dB!p7;i+8LTPXU31%8q7Fa.7V*"5:]\`%HHj3p%7gOG$*jiTEP0d$Y(ZlH>+*#O::;J*R7pd%>NkRhZit=quVM9=<r)R
%"[QR3gs>6objp5S.!Q8ipQ.]]B%dCoNr:3$q.0uKZ2CU,"`IM:d"^ed8M1iX[gGsjjAEQO+J!^4`jVs3R5$"T%k*sFs2`H>?Gb=P
%(XMl>?f>\Zr#9"i[Ns;n,N%bmQ/CQu)`Y;V0Dp#R?LRZOY:s"hlPhBA2SbP@LN]HF#h(;O[`kR/3.TQHLTuH(O`YNLnKWWX%(#b*
%'%>U[MU.WXp_kidqBHeD)$r.K<AleR6b#hd9t$^(,Z.KsgdG9k@s!-X_q./m_*hcu2F7=&iPr__ZCoRW<;u**37"l`^]!bMq@IPK
%^>HSY4M<iTggFN)/^fT3=9[KmH:5P_a(3Fuclg`!j]Uqf30[XK]Eh6EYYp54I_]$i9/Tu!lJN59!i@>/'ER(%mc3PH_P.NZL#s%&
%h)1j)]nojblAdt[$2j=OCp5aia8n):lX!Sc\](.p]"hE'ol`F(od]8egJXg831pe\(:>8@UKhb:]bpBrqF`p6n5+=\HVi&g365%0
%".j=g]qJ:"X^t+.<5@m)II_83>/U!/>GO<S*^!1q*9d^`0EHW/0U0qRrk]u,!dL.^Hj$p_HJRPm67`$e[p/L),J(ph'QRkh5/riU
%[&Pp:kr2b>B3^>5U"PXp[J(UbS,86VA:of9K`'I>)$W;-@=Nhg]*+<g#dC%/CA`1"`EKO%q,23JXcO=?OneiXD"*8>eZ[Wm3DaTL
%/UFDEe&J3M..GdkZZEK^g<fS/lb!qbX4o=*SU)stO$4D%V0VrY*u<\#If[);g<__VH!nsdE)p6i'<F+AcNhZ:-a@Eu/P-D)P^?i^
%P`A7DP8oM7o\(n(T>iY=C,"%9JtO-Q,g;+7Ras(=JRN#djt`fo#5l$S6\VTNO%dM:ppj]X^E+c'CAMo\H/ANBJULZtQqp]'C[>fA
%U.#Iom=ck0HIheTXu^"dggOP_')aO^1$XE4EPPR20ru8CakHETED1-tr\f1$E=BbMcYH_ETMVH#[Ok*LA#To5W<BYr2n#`^dUh+m
%du@+[Q1NubM.LSYS'tEggKX7aEActr'D'0UI48cK"i0ujm;A-"!PGm(aOf5pdd("ZoT5#kTX<k)OX;3V9Y=,?/+LcaUrfWFV%^,o
%gfhi,0d-uo"-s.O3)OUo?Ofbjj1U/&***@2$_A2Gh)"@3<=kJ!O36+&Yc2)d5g?n2/[W.Y^U$c(4L+=]O;D0$Ig8Z.WZ7DXeh=dT
%'_3#T37Yb*E7_Kl'.`XTGYatc0%V%8WU1&7D!B#)SgD:iXI^Qs46YJG%!GWj*"B)EB?C7qK!V#YrX4+@@dt\X^t?[]?[h'qrTu3D
%ORObWEo[TgQK3?WInMTme4s)F>7Pg=pE2kKMJj]PWo?6dF'D1$6t4:7&dK\aYB&*MmO)G57sT;=2`A*eEIl-4$(/O+J:oas<MtM(
%TqN<>/e'1<qVZe>TeDn&EbFlZA,=ZDB"[,se85>cEomWcZ.?aJbuM_6a=r!S9.SX:E2BN99N/VZ_:mD*;Q_1?&dhFe9A.nEO]!]r
%<imU+B`hZb1$`ouN7FE9b/n.N5T^e:Dd.YAi`TrLk-hh(9IV<?,:fc%TFiiH%8qZZD-c1pd"R/]f]n9&im:;+"S2,)[nN[FH'c!)
%N,8+(W5IR9q/t_i\f[Yn*]UkKWXg)[8f_F:UA,iiokU-3j=<o6'+5d1s.("Q++N?hLNNUpI)'84*Y6+PlTX4jQKXgGQbGU0-Irl[
%Ug%b"'!j`;5Uc?8/lPp[3aZX$'DP-k%-KM.QHje0;boL*hJF\jYo#8m%@I#I]]D@>l0Au:4a!)'T!!Lph&4IYDo!:Z?D/l=9)#96
%)C[VV9A.+#Bg[&j4b'b_-@n<cDg,\2TdU1Y_ZlKWa@1%Kd*)Sem1'sPhJUhj\7qpIG%J]\!6jh**!]Kg(NB!5lFQX\o0Uf(\)%sU
%.K8Pe"tO!Mk63+-?/A,9Fg/NF.W=RSbY,fXef$%6^lF/r3#]-Ud6`&1e.m9#k]mm-V8J3.n/!6sc.0bAK\a#`#J*O6_=4$T8us/P
%Vst:8/gq-i1&^T+EkB6C9KsW'[cfEEHZ/Z;TtmFYL.g>mB9(VW][KAe;gETrB/96I)K@1rnb+stN]$;Cpp;VphP;q;@Eog9GCe@k
%e!?'fh?;)M\6bbp4h.D2j06i2,F9G)PN=Zkh)rTU2IljUH%L.h=R54M$j4gGM1rKd([2ZD.W7Q[Z,thF%GQ<10*\A\-#&4a]]l#A
%#U=M-RjP61>:3-sOe-BQk('K@Zh1%;om-*i+fqRsa8,*GHF!21Da1eU6+%dUKjc:.EmnG5d#R`F#"JomXgpB.Oaja@gbuc_MN=[l
%]g^E2(^JFXLn!]F>KeDZXH0DTHt9De:J@)_j*AY@/NX%o'lHc/hqaq0U3FY9?UtPPUa_,ik0;'cn,oRAgsr!EM]N,.B&?^+;^ch*
%<\AlChqFY2q&2\GL`5*%8jgD\i:D&c[s<&V3A.U3hUCP$l.2O7dCfB'N<1\,7C`0?U'NS1[2"Q)!51(Hej"?TAZ%8Cm@Op!f@g-a
%Sck,:rHbFi]G>jnm>&tmVf%ri]+8R*+&11[lBF.tfU?mh*3J!bE9?AG0%'sTSK?`,ASKb!&$,0Y(_"N[T>uqpB.^5uq]>DMLHTK:
%Bun.<Y&^u^mBjI=(ZMWAcA]Y]o"Sfs`C'LEY.Lkk2FHfjjTS:2BeCCNqf7N.S?QC_hAnAO*pjhK[\4q*-R+XVY8k$D%@Lo5ClK+W
%gTB[@^2skrns$.N*)&AUs6/9IHSQu-8)WLCi+IAY/"*];3Y(\C>*rM*I3&($l"/&F\&i%=^3$aB6:Te'=7`:&pm8.1Kf;JXP=P0W
%N(E,N.hj7giLrQb]`r1?8Yd1i9p`_:Kc:6dDB(LR'aH8[/)#hg)@B4-J<_h[o)XcU'%d[1/=#YDQ1lbc4m>W,l@$k2CV9ZfUI@rL
%j#.qZL>&JaWKGIdO;*:ErO>!"dga5mh!LJ&a\c:F3aZTY#TQp8OB$2XJ@7D?/d)ESP?t%^_rl&3nea&R]qF+bX$Va`B@fd,hMgaQ
%`B:Hk:Q?:=6X=H%\dU2%_-O3c7m+ktn50:W54Z1_E<0D.0nn:8jjKtO.HlQ&U$KW67/<Ueh]BjQ<dkO,UcEb9_-!&3][mHgOoe_n
%:NGiA)7,C9Xi=\>"d?cG'"B;D%mbHOh%Z1JP]Q(QY]o!&920rWbZJ7j[)%EQgNOXGGZa'X:ossl'<Z=an6Tj4VA!hQ2?(8BoiIOC
%kSrra*m)f=:,m&q901X"JA]nD3E@dt^HRj_ak'kj[DI;D7etu(]2>jIs*9$cTKaN3;u,Sm$q?%<h/""/;?j4LW6BWS5j_B:DO\ip
%bP/jL6gsT%WdukDHr2H?Om?&U&t#PMP'E#i=WRf=mT$F4#fTI55BOT+mU5*YFHh0g,_sO_?lW#]NW`q@4NV4&jrR'J0h-M,VdV]*
%V_U#D=_3MqEZY.KiO?;a?;EWJO3YD'?uU;YZT^r+jg3iS'DpZqV*+)$?Pib>n,<^ps'Pfos8&r!X7=fVqU^5q]Dk7CR-UsUjnU"n
%*9$+pSo*fXQm0#%0D%q(3hrp]rUoXY4moi/YB'0m1>$=VXj_bTg*&Wb!S-AhSt5#,86`!ff@(%iHe0Gu7>tj;L+2j`(3kZn>Tgl+
%M:#1Z5f[pl'oDZl&1_:U'^\AkZ)Ce;)Sk(6C"cImq`d.8)K"_n]ZSd*9nt<aYVF[rHSX63nd?2Y?\6PSa8bth,gnClr\?!?Dpd&"
%W!,gUkh2Dtq8>;H-i(_H(G\IOD7NH\+a?(@0!8iUG*FBkad\-]E'qLoch7c)I'g^^muUl6(YIV<hAA?<KOW[>OTVi.A7/fEHT!/a
%DB@+FqA5DREFd&h!Cs1K\umEikh_;af-e313FFu`'WXp$2?Y\PNk&R^'\7c9`%F&E4eIE(bam4'P$:o\l>r[*m,FL5\b3t(P!M"&
%M"LOZ+NVStBaVbRSDEi(h9`TC3;@h.iB=BaG<0--rD_K#$c7g#.nq5U3k3TiaAib*]U$&9*XlU%>$2bU<f@2bSNljd5NrZJ4g;%o
%O#_58?2>ERaHEQbCZ'm'l`->maPlLLQtI(\\qhBUkN2C7:ko`Vl2M%eXL^L2ci8F=FL&=AS'LUh(;$%I3a;kN/;GgHfIFa95r6qD
%,%f047ABqR5amiU8l>Vsg/r"Q`_`&%e'Br8'fLn3IJWRU*$VlJNq@Y1_epO@RR7>l56BS;4B^Zirmb.7;o1#SCel\j-C_ok=]P)N
%#\t@HlpA;PXJdS'OkI[Wj3s:R5#Kb6oBal@N&D:p1e?\@f1-@'hK5337tjT1@%YLn'@In/$gc1hMVoN:o!ZJ<n2q[jJZ4;2^-Emn
%"I7f"Aq<)OlkqGBJ2p%B"V5mEZDnbV)':Q5-gIJA5oF<B+YY4s.n3"i_K:-1/g!Ad#2:5[iXTsIab=u@-V0d_,OmeIS)BjT*>7$\
%\puY+4Fl7Q.l"8$KE@d3&SD=!9B@N!#^f]C&HO[VY'&7NA:HhedF2OME$3_W@)?s]1b?+LJN3qsA3#PE0E,Kj"$HN8Z#;g3cHO(m
%ZA>*_D+p#t;EU2*Ift3)dB,)OEQ$FF)"!%[X.lQ^\)&auLrn+7f@ud%8h3N*:+HYgV,,cB0!RE&o9$_s_/jZZH9q&(F\h.kLp(;]
%,UQ/*(/qq/)ld&Cmb-)MgLq7A?($u`J;7X4:s;nngR+:028Q]@&ri4rbK(A2`7@R048=qN6!=%<.Lmr0[#\oMoYbK_qRVK#$D_#4
%GH%OL'5k:qUc]5&[P>"GiZNWY"I@F`G7dnD>@;Ca=gYGtknc`Zp^&1N4TcOg`h9lV,>!`Z7#TaK<B;$@O6.8m$T6K1K=<s4cXM9D
%*V+Q0(-9&F;C&R6bq1Z8++]^FKRnTirCK],>I??V2`?E3d0VoD?:Z@E-Ji<--OP\$iO@Zl]6G9mZ`LO[Ya2cuOTj_#>P?5aP+*J7
%$!(u!4Z>NnSa"DYDC0Sd7k#'<n%_?A5-8,>Bt5sRDmIC?Ib#cPc*!ilq?\l'qR>>:R\CKoOl,JZnV-c!@5fuFRYHNS1<p'3Z7JGK
%B)>OEB$6>HJI84$HS!&a2JB#*4&8j1lu(<h!_-XR@*F$3X:5+/3?/C]"Pt7R/REa?[bkV([\rfoFQ()#Aqb<OdF;sr)I$`%Z(moX
%@IhXfjVW@WFHe7=VIfXGL&YWu9W'-`[fnopr?EQIf#-HWNK*V_Ift`'=cUDG('_n_TII70#r;OB?"0c#j$[-Q\/t"ATtG:,niok?
%+/N[`d/_A]4U$0>F'FN1$f:;HFUgR+KBb*BD!Z;@bFrjSF65^0[^c/h.tD))^n.1!Aq6Q>0"8em*)tR@MkkCR@;]=)+]Z5ul_]R>
%Ci%.Q]nH.;7I61CWA",$UuEKkDuS)_rdXc?s7q0D%tFWBs7$'f5QC^IrKk:u#@RSs^EZ=Wn,9HiqX=Hns88Mg_uK=Xs7NSpmD&Ul
%rr2fpqr`J-J,f,Ta2S)TYQ#B)rf?gr[6#Ig&rd?i+1;sO:W=PSK(=X@#MRIfZD<7Xr\<maZTbiTp@F_H$_286q#^Sd0Mh&0OTomu
%Yr)A$O"KllRW!>n_F7!p2HhrpM@@:5/Db3Wg0?jMj"?:TkGKTK$1'l<+^gU@mL?gOA\"8^R!S,>EW--Zh/J4/+)i0.Ku"A3TD]PX
%^;OS<OQ;DCN@KZM&d*B]PTspU7Z!pn/heIGZK:'@2o"?Tr[3q_3i.2A;n:7KSF_On$^#I,e*.Y&%QYgiY)q18`M%uTIlaat4$4H;
%lo6usVnN+_c+h!cRG)fqXOY.Dq=>TZfu]V&RUc<r\+ac'RN9G:m_&Z"L[W6u^(HXn"6[h0m0sFON'6_Kj1-'bRLP+@C/U]Q)?0@l
%T8:^0A`d/jZ+I'XVF]EkgJQj3/'efGAAfFMfb.i?3nNtf$1,.cV`52RDQ&RJ6)[O;kbrf1K%a]*\.f8-</#QO>T\O0UWIWE\EM1P
%=oY,s274UdQrRe9<R\=Q;2GNn+5)67fp>CsXXh2e[T]HsA[rtJ6WT#.oWGE+%4`Ke`L2OH'#o<YO1dnCg+_[J4^;Lg,0:JhmrePh
%OWqPlTNr%Oj13(oX'0PX)/!`3mM3\&^b\>uRD#M4BbodB<BM7a@Hb.>\Daa/R$\CM=0t[!HsV-aUXcO%KV6uj:K8qshMP04ijek?
%,Z5e$G1o(mK'Tf><8mZs\Sd<FB2I_o`-"4j**5C"D"%1%!sWg@H8VYIX56$VYE=X,eK:?>1;1>#Ma_;;F^,%SL`qDb]R.#T+k\ab
%L$_JN_eNU;Ng9d@-U^>]RI6qGZYMF.(mDblV`TT-ecec?9kqfZqF"TdGWc3+FQ.E1,0"^d,,JQER*0oh1C)EKFq^a+`5Xj@C256_
%MQpl#24;`Wa-Uhm4%V,17sDFPW]JiI</OgSaW@%=Whqd]NTggQ1@MQE'9uL=3_?+OJ\KsYP1e4e*Xpfl>h_Ip^8mVHaY\-CXEsOV
%-*-n!:BP,ok(;GE[%A[i&Jc8:5U0JL1&7WSjb76X`U2E#=R$=>bp5RUo69Utd(&>@Sq#p.]^Jh(Ji#>kDK_NgK6J3bBH6i9X.h@C
%P2'$4g<`kr09YAci4n]/bT:;Fk"3jV+#EP2'1U5(.q4XGeGGn6;I$k:<:_'j7Q.=iQX$_F$LZ1"_OVE*GL-?/:L/G3!DW<'(Q$o=
%grFLL$Xj_s[H*1Sh@u;eUiA\8!%I%q;3DMO%>)/1nKMr`O)$G)1+\3N@U3PG]j\+pM`?RT2K!dd^1Rqnl0ArdU;!e@Tsu/jNH9k!
%jqjucU@6Dh\Gq"tJ_"@Sr;4h7X0h'.8PMW7Hin;j`>_SC:3fu$S:nBm*BR$U64L81_b#l7OD`$/9id%UA/H>O2'>Y3Zd8GLW[IZ`
%EU99V8W9](F\@$942lA!X4`?5NTB!MQm29_V7YFDD#SF42Am3cqVE47PMmZt,arAO;)fqZ6J?Ak8SV8i).oBA:*J\B`^u?*R9,n8
%k3S%j*;.E@fl3)f-DM;'3H"Ucr[H.1KTf6"eh&S4)`g!3VI;cF2s]FK[%7RNaag0#9R?MSRbE9.555db)GN<2,d]]N7iP-20bYup
%_^&d4XY:'](N3&&M:dEA:O)(DimELAKLq=DT>D)%+=7,dXtWEQ>FLG@@?QuRP@];:SpC&l9N'KJh/STWA.L1cU7ci].o)gnC+m^b
%j!7Fa=Sp'lP<=EVH,W?OckNtKUt3rOlj5%2_S87m,U*?tPa[XjaV]pd:)]o(M;]^O%I''>i?TL%jEe^8?LEdCJs.$P$=M(;aV/uq
%!JN=)Z:%f`\Dni,qo5r$,\m2h!]f9d.p#(cSE-rJqK*f=aTI85R,fQH`%F#@fQPCD-P?/F21Z2a&I]t0c4a$;*6l+tV(np@%T&>4
%ms"n+AF";.4<os'r<Q`"$*497l,jL#n:ts75,4_mQ==$/Ks[-Z:hkuiU"TZ"8P9!edt/R,-`EhTh()HfrT[I_2#@2<:eA=PG(iP5
%:Pnb40aO3PY50$<8EP=`5p`n!ZR]!!0SS9&7>="O4&k2DQ'D4.NG-<@V[:gWYrbu!Iag2a-/h=1Im!E"`NYMErML<0P%l^_`C`FZ
%,$(e`%<RCRX<a;WBuN\@YS56oa?!Q*L6Y*?(g^N?NceI/&lf$[!LT^WOs<pB>f9F?O121(rs`?^a8KC.@AP.(Y`]-YUp+>T`8mq7
%=NNhHCee*SE%Pa)XCNSNA&V%g0\aKs-6&M:\Is*2'<quogX?bZ'2H!6K6j;q[O3r\(o#]XU?n>tqEqTc+;#aqKU$L5B>7oP5iLD/
%@O9unWG]aK'Whc9KU#g<ljeq7<5P0OBn]/hb0Ei*#eT1.Q&nm5DMCc<.X*cM'W5Ak8e=:!]0N2>no=lX=%@5,RM/X=U\.;W8HqSh
%S:9+1RbC$>BFk'SC>'OT6!De3j:7GWb:q,a:alt?JVp'R;0tEjl?B0P</`9oR-5RMd>!^88ecb"SSEdLQ5Jep6R<-!?!O(d-/m[]
%:rs?dWoS3L<["?f&b<\GV-&;EEp7a3"HaEtAuO2n&qjI:W+9mojqC_"6'J-WW+;`do7E2XoM$\$8."EK]Xf%[nh;9<YTP6aQ-/u=
%:nJUSoa#gns.c#tl3YCn\rZ!6E7`eSii+$H<:oL>HTqSJ3H"3h[mFT>9T'#$cf&%=W&]U&M*PUO)^6YY5==5+_A^;!Jqc&'3Z@T\
%&2h7^IB<N=9UI'EqJ'S*>d*0^jkOM31lM?VT('+f**jV04^W"D$VAPi=^:3?@[3+ika\#_o+Ru(L!505mSXnqJ;YGRk8ql_R1`KB
%GtK0=0^TCh:9J?GhhI]3Ua<BfL*WA]:2\$G?>R7fG/?fp(E*r0nmXV^fZBmebm?J>7TFJ*k?#f+Z<sl#P8!SASN,LUF1q4PBF4+-
%^:t5&'$n#>^f/]P8M:eg:kJ+d)Jd>Ggnr+*G+oVPgh9B;LoRouZWq$-C;+2Up?b+3qsm2lq?G`RC2`YL4&ME;N2<L06CKoEVpXZD
%"&G.i[daKl-ur(aq?0A\q'iHtkbZCa#q,*#-kRD"m)2[m=@LRnfFrA$E-dcmSDG[ecW8ud#ShG/kX>8=1JnpTj@C#..s)[mIrX[o
%^nhPri1tank,Cs!m;>'K+o3-jQ`o6Fj?sB76P::E7)%/Z5ff4DMjc]*,"Jk]O#`Kp0MG8/+G]n<M8M\s8O:?gX[Na:K4c=-6`rHZ
%XMg.#b2Eo,jD2a6Z/Bq=BPL%RNoTK/=Y>'39[#kpToFm*b\m1XA$86Q.]2j_Ki>G)B_T5Dj+g`]*M_-B;pBrRWj#Q7qV7[npJE"X
%]QNtE9c=fF<\;Z1re`AYo]QcuNW!-&@I4Y09LH>q,K9nBIMtT:D<al21-b.+:6o/N-\WS(f@oUPM,P]Un1O62UYnHY,28M_U*^<(
%^Z>"Bn"%^/g]ep[D(pp,3%d:KD(t^%HIE\*'Zc;E;!a"*JQ8l-SI*WUPu_%7+$[k(^DbSaT&PfSIU)6uZ*er!)7C$m*F)ghF@nS/
%ZE!4mVO2`*H#M^P=$!^"D^U.1]/+!OgK]!"F_el%<S!^87R`B%LY8Af[ug<!p71R113RZ7qQ]C1UYfLhMppeI@!L$m]H/:9g3S&(
%lmJ":f^FUJK+?dfjRno>e)>OkKUsP`/]HBnp9&oFH2R-OV#E5%Ks2WCN?O3ZK*h[+;3L-!)\VN4KTu6@c*\hn^U>;#f!gCo+d4+E
%9lqX;i,8(baN9j=o#??2ogpr07M:(l$]nmC8LX%)b\]7*;t,?o*iH6VP/P]jT>OnKY=R,nT-^387:B%0<AJ*T'F\W]'hBJ\7Mt9@
%W*rDtE7h#$-W8pNEd^VTe@<FndV!UCC*lna=/>1ZhlW1sisOp`6pJ?u!`h-LT?,S)GK(HYa$hQ9\>6s^D:ssh/8Ta&,fIWcaa(bc
%9['e53F=XjS$X:FAWRlJZ6\X%M:Y=^)V00XU(eHm*%LAdXJV!K-*IK?K.ZiImj-9rZM+DVfr7.b9Z$$H[TOW-Or)h!(g59\\4!W4
%aXh+_GcMme=F[L:EKO8Z1_WU/5<i'>>Yc:08I^MQ5cgEPlX^7T81m\1]d&rpb2F_95Aohn%.S:$OfR@3ANA3ZCR5kQ1No?p(10bd
%_d?PZ7fI`H@j=fL.(V.$"b5spOa\bS=N"("^bVr:p*J_HF%uQU:1RuTX]1"ae=J08furc([Z[^AS(+)taPV*&0kIsJ4"XJ(cA@l,
%kKq22.n]`Sf:5%'!-%<s>+Q77/P,Db#L21Ba-.tt$(fTK`f!-1I-*Hf!3EsIkd]&@8Sin2P?:i*aYH@DF%5k.3(*a[%b"7s(oY6K
%4Qm[;`Q=4KVcPUnVlllj#!DXa]['J?<eO-fXB2,Pn*<JBiiB)=[euY->N=3%,Qf6Kb'f98`2(=S"L!n8Z:LL"WBJ`*fGIMa.2:=$
%a4Vmg.4<_h`Wfno>K`qn=?qgco5hk&+I<,R^hue3<@5BH@RT7mWd):@ogIQeH>O>IK_JCqP1Ul+Y+ACuA=O9WM:0&/KpYSpd"^f/
%6l%ajYK$4F[AL4g\*?00cbqAT2rVp`HZmamoaWS`-/;jR7p(LIXZ#p6jBgO0;ssi&\[?W0786LK(Q;l5pLC9;8T4Lc.*rGHMe](4
%MaSB))5^0<.+-=CcR[S4?@_QHTnJbrd@&eA?m\bGC:QN50CDidof67KgbcM'AalpaC0rdQY_Z=&)QPAf]KiE0X3</YSkQeI>l<-d
%0H60*_t7h9r:m,=?Uc=q;jhT]>g2F'l:H6ZDGp62'<!@e@#>l]9RaWgG&?>_F`#*#rXh+pa)TPI8W/6idXmsSP9gH1<BaZb2mWqF
%:gaqW@%HsK<6.Dn19$boVH56cl5#`)s"`$0NR?.=@Kf4s'@a7\FMs2e&PeNb"tVMGP1o"`ih2Bu&^,$eEb4LUM).;^NeLqXm,B4W
%Hn:N1A`Qa%Xp2O"XEDr:#QM3cgUW-Vh_ZWfQe`(:j>#DE9?MA[8at05.SRH+\#Ws9EC6E:jf2kSm*#kW@Q0F4$`VHc#iU6JpYM*G
%Ok?t\C)o'blU@C?3hq:g2!70=V5<USY`\U([Y#G.BuX5.bkjNp%V]s>mb]A\9S9L"^*jsocfn+$d4J6FZE07igl0\VCfQdd\6cc"
%mfE5bFESX*RGtonV/;3OYps-AACa.5A<:,(NTp&[10bJqh.;c/:%gZTQFJI4lFK;DTkG3gZrGr%"nEC=?6*(fZB9=J0<)Q66,BO3
%A)q,p2]-7,":@Am\8</A`D5QoNaeb-1,?f@pirKqQE"P!=Bn'3#`SAd(p^i!N+Ub?8jjH^O>Yh^72AN7c*&kp'h3(dhoV\.=&o%&
%/,:o)SmhdY^KM_6N3n\I@=@9pKA/jE`%l.:RQ`4"2&I(GjQCZtA^4#XS]:=&12Gp3=mdNrERi<i3bP.6WpcW4aaJJ9B8Q]^IQQ%3
%,L"\L+!6MV)<#sjS.a6*@?Q<N.?0CrhWnD3]jI>&=%)(m^6o95Hjuk8TiZF#6WT,WaI'bngY5m(<8bKC_QVD[IXWE'Bflpi1X?mU
%cl/g4WcgrSecN7dieJAJlJ]QUWCgkVRY8J!OZ>X:$&0u7C3R!B(6*F#DtX']c76EQa<%d5W%:T%1G\(D'iCHJ,kk(Jf;X4Jlli93
%q=8[.W-&buoI<LVF0V7RdlOk/;46q2p0RUV7ltJt^-rnQ9\/(IXB_bD*e>1oj87ed9]kkS8=t+SY&:+#r*&B%on9q3F>n]=P#,[2
%`;;GDi68lcfKI4`D44p+X">%YB(9:cL6>U+HeaQ'U0-Gf$kY+#2IhPhYW^bNA&o/ge7X+=+HoX'YqiY?3dIPL@2WY?F3^YIdNG+J
%Y3o7NRqNV8gkF;QTYn7,LlZ:YSrLiBU[pTHcYHU3LZ@.Gro&n[Bm!KS^j9(;Mn*J7;rKfsgEG=\0P$HJhCh+i-&Fc/5MDnZ_GOn_
%7>T+B7m4eF2!_6pMR/\-9%_#0Q])J0_eaBNb!7ecRJq7<XFrq+\L<J3Hb[T'rJ)j]EdA`l"[>b:=b^-SK@=HfE<rf;4`+Z2B/4Bb
%^-j4Pd2Eh=qOPY9kq&rdme[5c1%FE\.O?0ZGOeV2;JEk"+^JR4J@-!V\+pFlA8Y(mm0qL!TP*\hAsk$-=:(fNZ/p_]p)CA19ZDG.
%npF#sie?QXe@Z"%F"d#S%%bj+<lVA^4@g<(YJ#QJ"@&Vf/6&Lf9N2(0)-UN]&p%[pjEFQ(lYj2YMu]-!$QN<pG0F?g(s^*:4^;iU
%c;V,h!dCmUguTl-\D@@LS(MH>'kArnYq[HBa46F2UT3rGq"T2uNPa7;O#6c(FR20111V]i[m\ZEiJT\95&0)5ei:6EPWfG`N0AXr
%74*_V?L-WqZ'7O-j/nMI,%m5q&UR-OfA%dA*daL&e-1ZW>kK<_e9'lSgig#7%5d&_!CP)$'+M@jK[WuY3f.iWoa$.@b]jFEfCU@/
%:6;G^NU&AB&qB"fYXU-JCA2$-4n[#r8Grg*/=gR811+U'#F$].1'EeTaMb'ka\:rh%^Xg)n(?O/L]\HgbEj>A-2V:lPgo'bDk4Jt
%P_SWu`M;o)pI+Mu7S-MA\SiN%DnjInki=J)QqNG<elb]:-6dm$0*-c`lFIhaB:[\)hm_hD8gem:1P&b=UV?a'Ls/`>eo#Y_OO09C
%-33NqEDoUfFAbp6S&EZ$&6cWt$+N(8G+?97$q/(^3Al]O"\g)0])^!m,2MU=N;4SWim@7ai0_%.%cA_,Fu'.`*EePpRD8t:RVi%c
%?KSlSeZf%oG(N]5kU6:=-cfk0#`DE=UjCK>_AF=NhhN$eo1j>?Ll$X+$gV[WJD5)"c"9;.lHa$#'A@[?5-W^6@(:ViX99DDitj4s
%T7p&83`uam'T*!+Z4_,f'(^3&=V"S\_!blemX]>^#K"G$.(bm$p:t8e,iSMLMjZ86Qs@o"%qm<JLS=@ZAgZT5"lD6p+dYq/0e)oL
%`O'j:#^2W4O>H>P!Xt8=/f"M05fo=g4VBrd)[Pq>(\J'YC-,A;R)M+cG<A0SDS=3X@.p&.D9JE;Fp!;X,2co*'%)I0Fu>r=H8s,p
%$<h8?K/W\SIdFnCP>[]/DE2DAjdh*KCDZfnK>M7UEVZI!g-6N.3ja9j2ulj:jsILng!8,)G6!t2$+ond&ZnZ#c_7s,mLiD/=.*#h
%hR#MJ/+drW<?+RS>J:fjVfakqc`d7r3-CiJcFr,k!h%OTj5[$)ZOpBbj]K^aRFq&R?,l\^<qd==MW/f%?VP/XSds;J6]7a0:ZlZX
%/@0V#pXrB$aJM\fdoPuE:YIjnqF0u",&8EbPjN0#P<+n*h=NkjAP.uh^.0M-\$!aD8(RFbkY:TEmhp+#.VEl5SNXXUMlc;!Dt9dp
%ZZ7A\$9q0+J33Bd1K0-;4k)X$P%q(f\o4n^.q%&[]o7-OdspS.*Ea%fI4r@YIT,u3Kg:#`pW+P&"'9R:E4#qfVXF=&L_kC\?LEB"
%X$(E"pQ`6%\B-(?0*.^gNf+5"eGZ1;LdlNk-El^&F`+:#RsN@,F$I>\G%AE]2V]K4^8Kr6i]obbh,Lat4rDY50*T$K=;iIoZ$''o
%%"5EKS_d?o@Po+m)O;E"Xc#Up_6U,%AcN0(<DT)$@^V;9bD0ggA[9!T%I<WRkiXkQ%fO=Z=TJ2roOUrf"gVlk3CSX@oMF8_4>g.U
%)9%oiVY)g2E*)m,]o]$cT-625VVBNCWDp4'r%(%:Y+-"kSAg6lL,]l*D,Q:'Q*kIn2jH&^Q+A8;S![-lkM,PRaVh=lX"jQ%l[1/&
%P.fZpIQ6>*Aka6jTksCH"t;dG_OJm^Y,o$<B<h2q]\$5ukL,l*^$.oR<XEE[e0Zh[60"!piE-DTdkV#D8>IC2RK:!=1i*F>G2Jn;
%3/]#D?7G=STAbq]_s'fl:iq?b@p"4kPttk*l5)UIb4el%$[ttA,fUU,<uG*2UQiY>L3C<Lju^SLb;EKNN%[1`i[?oC4u>:5kh(ja
%gOR8m@p^UBcT%(S21p8o>N6K\06MtRfg3=`AW#;fJ:(m1]JSg9HFVZ4D?p!K$iIsrn<^cFiGo_sSp!CWjAJcGhc&W:;N]7'qJN,_
%r(s@3H4pL;%P$n&4HtD4%nmEqQ/^[mQHAp&4!pk-K0-4<-F"j*D#$uecZ+Nt6*=8SNm!'>.183iLQG+]'Fn):]Y%Q59X<Ht.Mm;6
%*[Jchm^QNS`Naoj0*qrmd-I5mou2GAjVkp;)_bn<Q#]4R,l7nTSU`TI;H8*ZPDfdVc3ZFfn\CcjGlY*j+ZOsC!pd])c1tZ0g%BD&
%*$o`&d%$#8\ItE_Fd)(/_CUn^$uq'b/2Gu;\r$k1SX1uU5XN.iNU)YhR(qd2qN,BQS3GENed4(+)nBb;aGu-c!b,ok>7RCi3atJj
%jZSI2O0Qm6B&G5GAjRHM`gOej`,#tSR`/63-W=mYP#R#V,'%E4!EiD9NfOYMWHr#1;-LL["V)makV'_-&\AI[f2Y_VR$kVW&9FuB
%P\5F\4"8TjDtA2:#1[tD,PmtsK_):RTmMna$iU^72&1(d%q;/SW*,tc$"Qmo2r]Le>cQ!Vc=[S;`FY'n%[kjVePUq+W7s2QE.Spt
%R7U).<ZEQMMjPWkq*QE+&4SLcM4\pB]X\7VM@&&;PDW9ZF"9gsb_+0/d>T$!OQoP@bm4tF`8&:rEY%HIMmEUn:EQm<I?6:+0rWD[
%jib1G?tnlarO?$'e1$Ug$@ND3.=JEVnTnKp^p'/a4_oC,Rj:.m<>NqX)Td"CIbM^SCa!S&q@Io^+l&A1H+[p]N\e)XXe:i'9?HS$
%AZS0F7[f*Jd>gJ790Kg[<]WJ.Q2#&.X'a$,jtB_42;#;!6%.<5r$ZY5]E%3A&qtu$m3Y:M-d?,))OXeQ#%5"cF&O\kIb*#ENY`GR
%Orp2l%dL"n4dsnLCHP1/F#D.B#"QgT:L]].(rQ07#):[<Ibe\&\(<c0DD[TpFtAufRhff)Wp@tl0;M+LUd:ZH":CF-h8Dn.c\3M3
%O^/[3.RR`unQfat#,6dd?I=-XE.TI8)-S\+@\9)?+b>QmfR=[^@^ZoSmdhA<M+Ddf\;0oT[F`o%$9b&WkMAJ'8Qj;rNrO?M._rE\
%]"p\'e=QIs8W!6'8>&S8(=S5-QqVI'Z_W$5$]h7FIaGm;QtkkpLII!BC6;O\jJWHqa=%&CX&dMTC^?5Cb:@#m^th5)4^nonEfO'c
%$&p59D=+2H5ObE5T?bOl+Y5]qp8B21Fq]dLfh:j5n'&l+$Xs?-[2kL\b('T**@N5aI=GtN.=rtX^<`iXqCT")04?t*8KIfdj+WG"
%+ea)U[/@$&Ni#k"8thQle/Q,mXOK-kGPla4SLih4KAFBY/TDK1+kp<*":>!)1PB53mN1No(EGL[`=.q&633NTjF_cB-YYAq&ijDs
%]@91$0Rq&\%h1>6e/U3Dq@PM@hFK5lDBO98BiK'qS/GJPb0SI/lp(p2-51.BfD>7R!t96He"+H;3qT9/6\J-b`NBF;=_DP@>TX3Z
%-uV0=pjm2t2D_5oJ3]'AgUMM5<kt.^6ueJ(R3'fe[]0n9T>23lhJHZ$;Jg^^>84e&aff*q&K9hUX9J'Z.)m,T;6%.W<<bO0hia2U
%B0A"/Zj"9Sh9_IPj]p0`(t)1nD)M4=RM4CaVg3>M>>/q"K_@K,&p2=)kTYX&lO:4j\q*"U_cg(2Oqt-!HP,<VC[j3)``bK9:KRug
%3:^KiUu]IPZAK9tc4e^ud.rp16S0tag)$[kl[duYM\5nrTGCa1=Gg.\-0.P+XAFh'.-u3m:a.[,qA!`k\QZ"YK3EKhdjDL4f!4;6
%%nW<mIp6)EU5>&E0C9ReN"'LC66eF3_FXg0l\`&;GN=2W>_o"10l`+gT.XKfThb=<`L&j\'^jQj'8f%4Ap4;Qkga>^!%!cIOsYK?
%(fA&]=Rh&f&0'RF3)C2/13EasBKL-.!/b3@e=N7=BnZ%$/71p!g(T"rXbP#c\Nf<.B\`!Tl^s2_H!h0iX6,PR-ZOk:lTd<1L3p7Y
%0DV$dHB&Y<66+_d1F"J+/\#FtA<?hE%=H:!\eTV7(to^PamWtgQqYcC#[Y=`h[Y)=?h]S1'&ZDrrot!-`$Zo-1C'e>>R4dp-MSh#
%1FMZ<N7/QFVuon2;GZkaN5XWfpl\deZ8nga;F,nmfD4`/^7<!*;HWc!BITo@KLP(,Ilb2O_B8snOgFcT,SgmQ)15""g'59ejF"EE
%&+E!j;dI5+VREVb94g5#fp5'clA2qFKl$ta$GL'=;op!RP*H[O$FD?b/uJP8a'T7&;.D)J_&)IUr>K\\7V$bs'n-IanI!$-`]g1-
%IR/&-/?95/@6kXu9M]#hB[[1#`7!q+bg_#"N@AkY_(Q3L^HjG2h5gUi7@*<YISobtS`,p%;@*a/&u'3YH06@LK],uH.d.n$3?]R;
%48OQnWG^o-,/gj^0CI]?$%3,?n"kmX1%S+EkD]#**,oU]?XcOd*IUe,bFQur.E5se?Vjf!%=Q(lC<u+%D.gjlR`(bHDu($M/@I>h
%/-G`_@^!ktE-Ea+fF*#b>0;l=)#G^?)@+UjmCEaS3=9ABnqp#?"j]*r,oL/Ue/<]-9X6dU0DV1+q*@pi,Z-\D%=L*JNZ7hhl;Lj5
%(\(0Fm,4oRMWlR.S%);MEr$2)n9tIH@n;(ln-+/=3eK*,<7;>kR]mf*/,4.P^)5mo9[bWC%_d\mkp3]_"^bqCQqul\n[!HE?g^Hf
%T.uIl141VKEY=oT<Z,F4BCn(")u:2IYD0KP0>Rk-Ts$2L59TfCEk/i80=7`5_b?_Xr+`j;0.CAgglB)sQf'gpjmWB8YfiL"*d@8<
%U_rBS^*j@s2tVg(KfWp8?dO\]%=OpN_hPmOf0:;IEl&r4EH;=k*ebrME-G8KO[rpPR.(VN1M?2'd?XLY-V/r"+hMEN3QY(N_&&<X
%eskR\,T3d:+.$.K-h,)Ia^kWZhK4()MiN9*i6-I)pGVYtRk/F?MfM@"6XLmdV1/,3:oV.9QjnIhaouYGMlFs,:X!;&#rh$KP!ZdS
%07K7?gX-gq,P`'g&Huq7mAfKEcM!Vj#ZZ!Q:YjB!4'lui)nZ:)i5$2@E.U>q1nW-]:Kk,OL/^>dS'<.0IFON&I7XUo"ar+Y!8-D^
%e<2:q7pi?rYb<`*WHCR8UZ4"^^19rL\"bT+IG-LRU<4fVob2`$3hZp(,<F/Ad$I-%T$S8h<8Pt<N(@&i97sIUcKL1TQ0+%>69&=o
%"j-LY].A+hLdb"EChIou`<k,%j\&K#BSBf'9Kut\-+)h_pk@t$cgXT-$^;s;:hjr=#r+JOW:V(i%_ng"cl%9mY1bi0Kn2KSnU_((
%:sphb'A=m0rS+pD00#]k(0;n0P')aJ9SC*&T?&9)\$UM\B.4W*6CW1H-psT7i3,>=T-jO]Ktj/J(BhpXPK$>$Lg$fe_dD>-/$WlF
%N#F6J$e[(?MDW>a"#)JEg]kR@rc&$JP0)YB%`!`?iWR'T)Q0Cq%%naB`*9[k@-'Bl0Hmnf,;;S[S9i5"8:)-IE\XLW&-='hSBB4u
%!gDn-*S;@QaQ#FI1):+FiY'j\&?KThm*?5ZLc5T/`B'B[jpt%GWtg6VZZ&6=Ue^\@!b8K4?X^rMJ8NE<SRmJqojcoH]HJs5bARXp
%415csG;6%gNn#odQ698X4'"]RQWP$)7O\kcFAHS,hq9edUNe\EfJ<N&a>X%770ZE3)66V>b"88doLeK)jO^R?]cPh1)CZ.BXLJZb
%m)>,OFoA-\%CM4BBBG`'BWr4iKrUaA)=dnZF-h'_7D3oOi@R`[[,EU"=c0CEi*p<ZP%ArLJoG_CBp7iFrQ9G$->%1!YuQkuNcCCW
%a$1$G'hP;qA]J#"`j!3i(t3"4SeKt;UploB<g6cKG!T0r4`/tT"NJBW*n%KS:#4/3K17l0q<L^t)F]4;B!R$JL:/:r@4U%M*WL6,
%SI'Bppla)DD+.>i2RLGq`=/7Z:P;BBRt1f(MQf!UBIc\4_A-oBcgct&U8Wo0_l[U;R:?!#E:od[((8:J'jC,OZ.q!YrZgik#tH8O
%U,ud>MJ\`P#;DjK6qm30bn;r!-6c3u;ef*+.GNf>CmJVF0$l.@(#ueh1U4dmJMajm;?qV?Af,"S*>fJ^<A<>VKD)^nH-Ba?l^j4V
%,8E+IQBG9o^DbKq(n&4^6.);6RO+r_k]UX*W'OJ8>;3&l"URbhA8jF#^m,eV&V-G>%aD3_0U`ag(nfJeTihqEiXM@<UtiX&1kUZ[
%W2sWB,uptrlS8a;CYuslQmB1^JnC;6LCK\Pa]VBJo8nEifF0OACsn?g83tR7Ce!58a`3f3'jt.EThMcIN/9>K'2<VhAjJsCb(@li
%Yc4H&S"]K>)4S%]Y>#IBfF5VN^L8pt54-K:.q2*$*LrD=;=8UH-JWMi3.ptMDW#>il44$Cg@d'@j;jbu=bu#>c6s^A@C%B4'uDGa
%7-qEnZQ\20=X7OoVAYks!!-P%Ml?+#bA0f=a)U,0.6*I?7Nh"*Xea\(#0tR;i=+"dpus%V/hGX+3TU^\)UhL&7[a=7Y_r0bH52dZ
%JMYBelNYZ0ST/fXB*hn8%@k7LSi1Q=L+AO<AM]5r[4C8=c6+$i8ETa6=O,=]i/H)gP\jM`e.h0Tf1+(nr6k-9/Q?.+/7_+`<$FtU
%a`iM+M/_)a(ViGDp2WW<<*t4AAqj]\(X_ANeqU[#BJ$L"<j]lfPRX`LUT$=WVIg%G'j,baU%X5l7`R_&[+6cqPKmhNK/%1U%?lo`
%.PkP.5"e)U2(Ghp%B_!j5W?3mbf2GD@hst/$X@2kKN;pg32@1"\Af-g93PG\U,-A7CSU&G^#g[j6GXS_Y&,:T=B?ednj#.<ObO<u
%ALPa5_08/Ap/61`N3(qhPu80obQaDX&=,^)/0Kn6#oa.CP^M^mUf0'P-Z0#pn3Q1GKT2RQ)Bc-&9qC*+(koNc)2(jZ[r?J4TI<FA
%Cj0JjJi"hd-5lZN4^jH[/(jcb>dTU<g`Wl1qEZnp+$.hj6=H6dAj]ft(<\=_'BG+hW)Vo+I`j;1jl2U[EW0f'C^fR+Mo&kSbOph2
%0ONiXKg@/Y2AAXJ+hs^)#YF%oKh:s]]Rqp1^/Ukpi?$MT0qDoe87YZ).gRBYXS-sS1H#SG4jFnESX*ji@20^)'*o7(c.klHB/*I!
%_XDLE&nSF;Z12uYdSCL0$.3-9ECXHa(8m=='LiNX\"PK09&3;\PgY6KD^[/682->MKdCWg;5D[-n7"p,s3rH==n,oj@7#bbrJ&07
%/)If?ERd`Kn?U50lt4NdL(Q*6'+0r^&msSq6\pofL7Up.#=;je_Jj-%`[pm`MAXSp.gjc%Bmu=m158OPCkt"a`XQrj;-4%VCa_tJ
%N6`nGkj$JBN7A\&'ILIE`U0t.HgHd0L3Q'o%$k0r(kp?\CUtG5:D/?r0!Os3MN%,-8J76tE)U`MXrn-a?-aXpM5C(3N3!B#k.Cc%
%6F3]L5o:NlC`nZ\>%IeEr%:LOK.tH[V@A2U[J2#0Nka3M).YQ!%(V6,nL]j'&-ElhJpJg^Sl=Df=!=kmK3[%A@=qh/<B<LM_G67B
%e`i>7k.pY9Y&qhO'luskhQl,kiQ`%tPB5&7%EqfbEIt*90UuWZEf:JZdpt=PR&`KYeIS)T+VeF!>4<7`@4nZAN2c4:=c4+I@`)H0
%>21eJjo%Nu+W!dbA`DY&bm:A^9KN1;S3%BP.9.m2D;_L)U=TR<#n;q<bQAqER0b6W#+o*FictT1"UDS@nJ]mCce,=TOsi+E@gIKg
%6QokHF(]=/HEqh8@ITA8l$h%MQ\n:df@Tf1Te.GB0&n_ONe<!f3.lhn\-."I>le%R\@o)`8P4m>$#O*&KahnLW.eSkZmAc')/V5U
%.c(Wq!sI/%^>N`Q2EQC%Q/!TB%^@]6_[6=LM914/*4>[!Pc.i)f1mRe$%jh7Q1?@B&M&"Jd"Hs"9VQ*X4KL5L8ef]!F4;3&44l"c
%?D##6&RO'(C]T@P#.F<_8.HQ_[fksM]O@p9Wj1d,#q;!D/&a&P=er\qgp%WKiR8Z[0ih`#>-99ok'9?Z9rpe;=$0up[a/2@A$&A#
%Yg!QY!o=].GF:$qX@8uY)Y8uscqSZ#>50T&L:-e^5%1QeVK:Ir<gG"U[u_RbjTS`>,&9u-1Y-T25OD^'Za^I2>HsL3q4.ENC/f[*
%XOVK,E$=UNMck!ZDcj("/MhMM<`Mgq^WW_CpDOk-%;^#3ltr9/<WU#f`/!oa:'eD;56+dVNjVu++fs04_V;A)/_#PK44NQD%;Ag6
%X0)i[67"&X3Y1HcQjs>V<^$O4'PiLTJ<CfNOu.2e(fA*1'Oo^$$?,VHMBIca)h*AR/=l;EUECk`k;QkRVA6e<CXX.c_;H(F/jn$e
%[FX)4a$1U9nphi\n:4o-[jQ0\JuNrj6O=!;o2"j'$P@RFj?/M:i]t>]#uQOniGDb07W[HGnAV3c%=BmdBa%j+DF4)a9^OZ_-*VIr
%2OtS1h0],mJ1mm6'2IIYHt#iKN:*W6C6qcCD8JM8@3V;Y(N6EIpeU=>$CS/5'p8-8!ad^B9$B</Z&P4-*)>Cg5/rVrA-G!&!%ko`
%;CT)UNdj+%j1le%Wj1F7%=B<7'm$%://18upl^4g55H"A8P,GVJhO)Z@oi(Fe(fd@(NIg+[/#\Ib@E6_DVN,'"M_L8n6"fVB^p'q
%QMa1l5Db<'Cum]r7qrfAdk_4UU]u`J>*'X[Tsh!W6tYr/9N(HW\(F)'[Cj#RViQY)^&U#Jang!62kJaLWGFg/E@_JGUJP&SOm4Pl
%kmZ&mjAKW``^&2dW)6>8#U2A?k_fJL'4\]kP5GmTQ5U0P;C\NB?p*<2-mT_9-u\Mb,AR;%G*spKe2#/8&NQg\15iglY#l'dXl:I"
%I/9#g&DcJ,FjXuAC$OKVpE'`Z6s8EVaQ1guU-h$]qRDCNI6'Q6o_gmG&#7.b^!&thCa;Z9MMCXTDS'8TB^F7pIU'jP]A:u+FM-ZT
%ioqcX>[P6+/\"khIfB03hRrj]eQ9M8H8DZajH![IjitR=iRK%-I/`q+^\[5RV`3N2pK):joEBJcQ+?kUGAgeNh:>YVrqXI`hgG+Z
%S):pUilaRdl1<5<J,K?Bm8nd_p%7>^gF&o^IeWN-^\X]'iIChC%5@akGCAQp[/KP7.kqb"*P_O82dcR`&)WD>hL>'W?[mLOkbkUk
%s53kSnkX3'b%K>ONCI@m[0,CaOoP+9(Z55N"%QdY?E#2._6<NlB"e$*gGe$fa7sdN+:n(H(?r%&p\/QhG$8,2qc!LfS)8\fmHLO`
%rT_RE^O5_H5Q:TGMf2pMp$E!4_L9d0jo^Ck^"85?&,aTEIr=\<IBU)=T)?(HDZ86hhn4:4Vg&&aoA(%Xc]';"9`&Jeo^)d'\fn2?
%qW,lo<f-&/1+G4#V*`_1]4\]gl$5G#Oq]10AQB'eqU9KI;UHh5Eb,,FQ[1:<[5kLpZDlsWdm7c9h7qFGoILsK\`ig4WpX45b0J"1
%5L@Lj#S;r,.(G!73u*"g>Kf\:\;K$dQf+K\>[R%3nar!:]:Ps)ch9lX'1<e)GNl(K6Vidc'n4OD^Z^OKee@26b1=o40:'3:iBFT8
%U35-"lsPE[#fpI!f9lpp2q8Eg$b+eaf#KirRDf&6h>Y1(JJ<m6R-+CE+hMEggAgkVYSWS6'`%NYdS1ST2AK5pSf@kc_]j)GBb_4)
%;!e,PCK2-.80Q(\23>-'Lhu8i,7IfQ\;8B-[R%YQ`AGCP7`n;9HWC^f%s<@_Oo"([nf="GV*4!j^RVn6X0<I;KQ5_9Ckrm*AXo^4
%W8ftXa;e?cTKkj*dk2!)aWC*=+ncV[8QD,3+uU(L3ISsN-b-dYg,*?rP7mHNQc8W?I=L9$PE.qMQV/-UVEUTig8XsnNio!EklLhu
%Q!Uiq7tBj4ka"tKJ[mn$+'5_F:2J<DRU5Opnar!:]4(:e!5R!>Y5+ZD9m.5cr9dql@bCTffN\DaW.@:c@g_n]'g_f"69p0fURIF<
%`%=`+X,NEa4X'^OY<*_&Y:rj-P`)k!6$a3bdgD_X8+*>pqB>esQVH7@CP*DMgi@[$$ob^CE+T$q/<^:ggI9.i(B<Al<sUIT6VasD
%0FLQ5?+TfN'iR(IFj'/sa0g#8`Qqg[r!^C0qrnAXZi<Har1YEb4RbGe^/P7"H&8l(%+A)@Q?$ktH.NO2F@@cpi/Est<1+fgG8j[+
%=3H*%W;FUVoi?:L61BP4F<+^LAEUCM4SU6$eb$I=MJ%#W^kH],bt97D(VE:dOD<]@`r0Ula5\'RQ9;BPYrdL:p!uQLoLML[p$%%4
%ZgAJfj?pY)A=?EH;LY`6G*PYRmn`\Zb4(h,h=2tuk=Q\]4^)?6=8i+Qd4^>K^;J_ITC>n#^1td1+\$'koj&>-[CaXZ"7e`"+(FG&
%p%ESF')Yaofk#O9Dgns[hDUfZA?Rj5fB!q&T9;=!f/F`pq=9/%g1@%AO1VcCkP3'Pm<sYjODgsHS%*.#/de:B[:I-YomV1B+'3Gd
%d?\)3\A%#EioqaRGH9lhJ:,JkMuNSt?T>E&qSfK1`N"3%j9oB^emlj:o'b>)!tho)-&#!FPUOS,4uGC`O9Mpqe,4G$W6.S^AmfjW
%S]:OZ1S7[*F'TlK?06/U,=oRt8O56R!Bq99O^2Nsj6+GhF7o)&,sF/BmL;4$rFNf`JcDiZT%f!)@kX3<Y%mL5pi.$ITuD0'D0j;c
%`7%A.m[E.uJ:HHL;`']jUgGst0:Ln@_nVB=N1E^alXhf*pmJTSW.fVuR)e$DOo.Cf'5Xh,bhm#*=W\/hs%hYRYt*>j`p1qn,lb7,
%Q7q'*kI,h%re2B.>1IL317>9L$LlDdn#idE8g8QImZ:#()C5$sdiBZ9JEILi9(Ita#4)[pW`'u].,3p0:Q+gi?tq@Z,hehiVG4Ps
%e&@31]mls=1DST<4n3^GnK/DEP6)iub.B6hk__jC_/*XKR)PaqMHYVZOkC-ESRpoh$mK-!:#\F`RHs]p&I3sa14;`WD_Oe\7LbcE
%E;Ok,#s*N-B)d;$pK&t&q>,_-5/a4uO.5q$XlE&EpWk(,!JKD\0^:25m_JT]Stsr'3f>(]EE`j>mIn'(j;m7E,sQVFk%=[IM/!Ma
%Hr'></(g*TNeI;K]_TOZ\H'L#Hm$*fK\JFcoh(Eo*nB:Di"Tp+fl"YNCA?1j>k<3MlUCIga/"3W,\/>EO",_k%JD9XH2i]h@OKA5
%g(q0?VIn$3?!h.;%+>!K8LEgR\#WiM0F"DO?lY'*\t6A>RA!>`(-es2#E<IWhklaQ6Ti'CkH6(Z"rR.6PXPCkG/#G^?^/KiLOj*u
%(WpF#>KT5k0[bI]+a"6&Lttk$$At<@jgJ::noVnsP?:'"/cRSHBpujk7*X2)%b[hTc[^LBRf,,uj8[Y+dADd([f0GSX%F#C."!^t
%Pu/aUL&(9,oSq?/rH/V`p$23eZ9,i7EdE.]^hi%r5GEXAi71G3OuCB',(&WmGK80<d8qf-gZ(Z"HBGabK>R#Uk<B:R^16*b$k['>
%m;%u&WQbV@h*.'3<?qj$TD18p<^"O(_K[=Dh9f-A1$:_K2/4l5X*6f,Q/3GTmsB,9Gln'YmD2]!BokG&,MjU'j^KU^PY+fY%HOEN
%BcX3VQ>V14s0,$cm+0!^P/o$R+62b'Y!2luh2<ri'f?f^5DrU,1cj6C?Gl>^qeB>p9MFr%%7?9MA<B0ud-hM+\jlBGP@]`bZn1lP
%>?@Sr,AOq2gIAA@GD("<LbTWP(ERcN[43C:ii!$9pj:6u4:u=Y]W>t`)EM^@s"aQ2#h?i_<Fj$!A:r^u+l*IAk2.Zh<UY#:gMGHd
%r0%J0$hD_XXL<uR)151g4HLG`5fdLB=h;[=9sj0n'X>(Q0mS80.X%Z"0".Hd>t6?-@YYelE-\OFpH#FE7:q2p1*J++>6J%h1OA/=
%%[!+3c^Z&rXA(XjES@V&DBOO+Zo!!6d>OY,Ua^;G_-0GLA`m\Din@\&_I0(B$uh@83@6VQS/VDsl:Qp]F'`>';[HD),be6Yn(2+j
%<3>s!!*-3M,ZVc2+#;"@K`+Mc15gQXnbc"ZNJH9=o)<F&iHq.,G_\/+&dN'P^%*Lt%47(rAR/%Ue1)D!QBETp1QZpK7*=5Lnl&e!
%jg2%!5HHK@7'0DheIrB5iuF?$B-472kFIY`&^$!c#Y`],laD1*ZWT)*Tc?"3FVuc^SUJJcoi@PCMC+N</8JPhOPsL.'^(j.JlHQE
%*,1d4rT#FBa$h0d2CaWL++$h&\?-YpArY515@-;K]C=qZ&(#Zd*&Tn;AOj"I6QK=a0HpjlMG1-FBuE,&jf7:`[!^u?LO1I%Tc=Y&
%l:m(o8_9(F,^%^/Ei)+WI<e>]@YN(G8PD.dF"i!_aW:%go'+m.YC#EeKBF9%BK`?"H5&:1i;*a6f\DkPcC)k=K6>@]^HrluU0_HK
%bY=/e'.TFo-CA.n3-@WM"tCLWI`P\BQsI,XH$:!<h"Ican$q4s\uVX\ZUgQl+LGJoQ$^e$Ko]/s/QKI;_]HB9%<@B(Fj=csT*7rr
%APih(X40aTo*V*bJJL`b=t$=CVf%1.[V@3>Co1`PU?8eNA[48$>S9&[]PNp['/a8uLq8LJ$051gGhQ%*HLmr+Prp[@/c?[0Z;-$%
%bN^\pmM:W^,t9TP+TWI1gD#R)k`Cq80o8c6^_`,%4\RR%\:"okQ9L0TPPU!.mll$R.UEE5N1JcYH:m6:mLV[XQoYM`9,Y2%KZ1XX
%2b'p_[bbP@!i;0q_AWZddYtha*Dj+YXAWKoP@HFl</8%Zr=Z@5;Rgm_)&_GI6JO,H#nHM'8hpp627ZnDcUrf]kA(jOI1eToq)d_S
%RFgo6![MS1p8Z2"*0DG'q'>NWV"oH_NDp2@DF)8egFfN$#D0#+gIu*Oi#D*ba-A>Bh2YDcdH6Vb>pbLL(Z!XuL""%f`MY!@_Y*\)
%F_UDmoBHY\2I;>k>OBN,D(q\9$mXkL"p7`WT8FKp4Pk+32>#6L7;G5T%b,s/(#^mNBWCs<D[1asa//$cReeX\ea"f^pu%6j0l+E$
%6,U+hUpS:O`$+*h"N-L%Ot*6bqiIJo,hW!c4O"X[G"cQ#N`9Bm?,,JH<M1jp<4aW%kV(.nYDLgC$Z:=^\.hqB4,H;*fI"7O(_)=s
%8B=6nUWAHPXS()K\+AjMa$Fs?K6ihg*guoQRSKcbijAZg[^X_RT$,+CT6/(s9p'=!Tr]0o[-cuOiUVZ33_B>ITu0S.-A5c4VqqQ6
%U\_nZW=bh=*.kG[h#K<"%:_YuI@EOPhP4^1FW.<fBTbq9.'$]>`$)']^pKh86MtD%?0sL4nhtEE^&>^li\Vq?_F32d;T?7G^=(c/
%LE0ED:U+fsL&c6Y,Fn#gkD5C9QX_^b<C*VG1lb%Kn17b'`^pRdZ>bZ[(UONUWH$n)-:'_XL(>VmQ2=_c8dNQ3>uHJaOU\=t4CTU7
%9`n>"g,SRU/s`(2hiNB$ZrsLs$diQY7u.<TD/aM6(##n:fM0K^F+hH[CCgSmJma@(4^Ms=KB6?bMEi?UVfld>l9,;/msa=d#cH@9
%Kp(hLAs"[l__nGFU"kVpkD_N%g5/rnH3g>#n8;V#+IB=hlK4kITR(gOqMuabYth9LW*@tcN=Vd!$=9KQ41JJJr3LfW9d<G&:(F^N
%B.fDp>YEtS!(cK+DCuD!g1N:\L6D2=810O;<!E,^Zu%:*^$M!17mBVFW?;CtK/ltDV,nm/R<2>*p1`7qm5pWo_@0SrG!S#iRq1Cu
%2Zu]8k[LnF.W!>u)XGV("s1dqW>r+%n*:A.5YfILh.>CF;ggBWgYBppLS(c^/m&3^p'dDD\Bm0E)o0`D%<nb>Ir,?8WTEN$^+sh6
%J4Hu7DtEEceu]1DC0Z7W#@4V<&QpDfhG8ad`>&?Tf%,=unZ0DtmgPrM<4i+P#A8Um<cs>9IG[dtp!%GqX(SnWlQ%n9VdK*2.h+t#
%<1c^kVsB\J%p$1t\nYn>d5V"`P0A="&ecnZ?Mt1MO7R/%%NrE^l^.7q;[g`iDA7n;lMUoWb/F!::?pVu@ddjU0VD,1^!-'C,u5be
%C*XV7chbXi1qXd,JuNFr?$i`B-d#kY/#\ZFi1?U5S0XU@5D$tYOR%ctXURe#i(/Fb,r4!7!WMQe!GD'NJMG]q+go2mSLADSmtCF(
%r?a?[8r17;<95_?eL:h(g8jCJ_sKh3Eif#7jrimcVU]ekWj$\..rFUX2acBOL!g!eG_bnM.`]mDW,E]Q44-3:oW\glQI?+[@rLSi
%b'L:_WucsWpcg?36[GjLX'U99oX.OpdImu:Nn#,i[n8FM<E[?dULcJ6XhRHmaAA>Sa"[dYIUA)XF48[2cAqdRmK^aYd1nSTBQ_7i
%,(M7t1S@hR--\8']ojZeIp!'n*2GqWNP`keh_('P,-noc/bOD\i!hMe[G<Zc:L@okm8sV1iuAQ6e,)F$@9\r9RH/3*B9KAc=bCKf
%"ltOp+^]BX-$B<#G`s)),n-e&lsef$g]mE9jq0NB0UB<UjC2kj1_,3D&u/QAZ)Sbm$@RRHk*`>hS.n<LgdA2bFg7"A-c12"I9K*+
%-HZOPiQh1)>%(ml,P#_/foX7``$SLUb^1-2[<1.j!slm"Bpt8U)Ng:1hMX+6nK%,%gK<8C-dROulu9XMLY/7S-jr94"kAS]BWpJX
%M]WaTe%6I`C-Pl[QMC1fiRdFU9oPd2L>Rg`ij(r.-)Rn3LD<_iq.*(^ah;H`j3V`SmM*Pg!=>G:q1nQd&i^:t/U1q42`9O/WIQ^k
%Vr8L>9tZ8W1(L&H<7I4!garF]MqdP:LlJ[_)H=p)1NH#1E[D+hp6K'/de:P//?05cEP37m4`0Mq*F#/4ltr*"[]r5B'\/.2J[(*]
%@#T#:Dn=%0D&CdpSs*MFDTl'p5YPK[qG-RU<,"cUdj?ntMHZj<2mg-ie9T&dfO_!p%g.cqjo0N!1JiD:FqX_]hsjjTF%*G0njm6D
%kl>6V'Vf3AZrWVl7jmBJfX>,>"7.LID0e9./qZju]1m^`4F$Qs`NJ"J:EZ]*A1<j"ZC$6U/?>Z'`!OAXY>!uAR8OFhF[*Us5e1,%
%YqAYQ3WRre7TmDUX4X8#&6M5k+1W+&)(?NGC:8a.?YBgmBn1"^.Tnl?+")^.\U<^YYi2X3[H'L-R9jffgVG_BcA/[-)sZ#j`/qtl
%qcZ4&Mh`ef72m'.<D$2\+NlV8:E,SGf0sCuMGprl>VoRIWuYJo6^GA,-W.dn:-RS);X3T%H$-<8B\u=b*5fLQQ_oLtO8<tV=]RCq
%[u3S8<@rha.L--X2,8N&l.&Y'+XfD@`#tFR$mSX;UV21-A&aL#aASM/=\rdMh<@oQ>bn&)C5XuY<#S#Dg<qnX8`1TMRW;fFMec0b
%7:_+qJ?(tahI)s?5DrUB!TKX?W7#8,@=05H>c#qF\&qS-n]!s]b'%A&qB'kX`!Z:I<52.\L%N84eMtjYJ/W(u3hAU&E6bnSphZ0`
%cWi_lA$Y>*rBN"?>*WO5\$O4-=/C_ZH?!OOOX[-:]@bh7(sm6bJh2\'Y8'M$Jp2JS*i37M;>(Y=E:?W3<Q*#1%q0Xf*neg;#t,WX
%f1nqib[HucQlrf$LdaC?h1X?hDMD'h<jo"n)=]W-UU42>s0Da]os0=G<tdX@QgSsV7B7q;.MK.EhtHG<bPerZMu]26\Q><Ae^R@Y
%TACj7I<Fi7_C_0l:/f1Y(u?qUMo\j0?4E3h.j*j3nD[)5p-'NtDPqs1@@EW]YtW[0]5$#/?S<$32sRG#qoFfjP-f57OAg2*\8;_!
%aQ.S?E]rCYirLgqK,t1`$k?"#Il;fC*TGJ$0b*RP*9SVWi#X:8L]9P7"UM*H$9_Iol;FCME#Y^`;t2[nU8DO5ntC20l80i9]H++S
%1E`TD6=#]jj%sLN=;.ggO+_NNiH(Y@o1@&PXB.q6\/FUu3K=6o]e#iMDLkB(/u>);*i7JK1r!EjbXW$5HF8(aFSpqf.h%t,c7,:A
%cK/7pcUMKHd_9k9)Udg!Bcje234W;'*iTRpB,[P`N(T3UpR-aTht>rD+OP-JGjqRN6V:.j"?DDZiMgL$)ZpY(Q5313NNS:u%Z5ZJ
%f7YnYOZU_@7@"jgZ43nN<h?aJT#E&HI`uk-VOK6KhVopu?9LbHP8U.8'?_(r?62&INiLAb.Ou5U':4$KkD&r_V`FuGMUFDP2YIfi
%S(SQZk&4=2q?#g&qs7qsWd@b!":/"%2G#WhgW12jm.sS8g"MC%?O0N;UBmI7RUtS0RB.i7;?sB\(eo1W3K+JZ&sR#'L\m9@QmiZE
%ce[KDZs;8S=cUR`!p:>>H\Sf>oWBd/Ge<2/GL"#$:4SZ<XGY\Q$&WY7&T]JJ=^Q/*qGFj@P=)G6jG1`(:+paYPn/)^W;,RYC<5*5
%/u'd`N:',HU,l0gEQ%OOO5F;9(;-d8f?"\,,4_S$`3<<i>Pc7.N6/Q0Y!;O1_Y9V.+-)EoKiG+_;RG#]JjQiXI2*I:5&]q<<&57+
%oNI</"s/Pf-^bjD^r>Soh%2pHX,KDB$^*,O&5*u*jcrkbR[1,j[N#*(2)VaX;HVeB%WTr8lg:_@cT8SnlZVQ#Sf8\i1R6+CNk0="
%7u<W,;Kd/H,d&<ZkQhM3lV?XLY0uO_JrZ9nm.SQZi3M,gqqc.Vo;u]kDH\7Xl""dSbnKZiilk[-g=>29L^DeqacOXXe*/d.>kYp.
%4$&P)ksS?B<eo1eNFkXME`-#/G')6Je]un_3[,,#Z?@R:KFKRk)X$oWUE_CgI6+&H`;&J-FMu/*3"CCXPAj#^]q#%QNgKqoVp@1N
%aG0<V4BTp_Nat8p#p$_S0MP7a3^bJ#?8_'PNhjO3nSSG!ZAtU`T>2$o.5*ZS+F0K/kUSX0IWM[A%0aF<4PK:Ei!=:`;Vo5e,%jX=
%.q`h>q:'_sJ>:%gMdO:4_;nIgL8Jf3Q&<Eb*)VbIA#;tu?Z:<74!0]\l*=41%Z]2E\XpT6CK?14F9Y7^^QK0gT.#X_]W;K%@T5J?
%4]clmMVPn3)'0q7$L4ZXrNtJpB]"f[52];T?e+=cJk&(nPZE%ITVf:%,h@Id-\+UN9!Tgp'RH.`N0"+?Q=WKUKHBg.Se2Sa3OYLj
%'))_J1OMM[G\XdiRLrG\E.tM>,QV$2U_P&(Yq2TA'1,%J=B8M@qT0j*@c4Hn=+nKqCL$p<_jbZs2^9'3'0+c+J:n:UEaNsE5/\Ms
%76lrdpFAMO_Uc3u,a>fq.mP:`\ebjJ>K@D:MgahoS&'?]kjFAf,OnaF\Ds@83)@E4N&siiB`TVeJ]#:._';nh7?_?-P9nE*mBTT/
%H4dWgP2cn1#f+:5=M@P/FZmPc\L9!Z4G!VDipj(@^DK)UP"0qP8&U`0ZbdrG2^?4g!#-'5>Y7(?&k^rl_BZY/mHu1Y2TMHJ&QtGq
%#',#9i,Jj3:$-IU_5$@cG4@(F,#Z+/'cr@KrscagW,Q#)ZG-rh!%Dm1P>;/bZ1B>n6k.IY:B3u-k1g<*RS4\bPKhJT5tr`US54.P
%],?s2Z(_L^E?kT.SSV'<@u.+RD,)R[_)ag8;Gs[iA=CEHL')_=8&SfUYi;E%K`)9Bii'r\KTF4"oB(^e(lqd"I"W4V.3`gf?Y=m'
%,Y@n:O93R\+d`7-kQ0j2]id;p;O3-R\,[f<LeM%SP,&@D]-F++>0hk`A3f\l+hdY1bub6LrNINBdBGDnC',-BOPUN],`nf]bm4Un
%@Aksr,4^YRmL:<cM**peTm);_)a4lX[I5K0G(`7i2=P]T8:_>g]HSVaoV5V&'"J_-mg+c*+KF90&fEDfX9cp678[->7.*Yq-\OmJ
%82HTUKLEd-nc39T";cX\.maS2$b@?%-&P7('1-Fu8=X3H6:t?FBgkR&:nJUKSO2S,N\mOI1^%je#ROc`%/"Z085da_q.rg1*/(\B
%KSuM.?]NZ&Cf5I*AA'_bi!5]O[U<+T<G%rLB[gm5mh=0R:7KUh=\LA+-U6r%T+p[-Vu:=4VYun2iNBeud@'O6o*jd9Bs)Yc1Y,"H
%2+c72Bn9]^Z)jHU:9"GF!h!k"[lpghV"Qrn<RjlJ`krH#g(poI>4ZiT.$TY#HoM0757B&^?4[OW@O3X9jn`B%,,bQBg^ICXVQ]NC
%QC9ed1kR#N%J+t^`%6/BTd@#=iNlbF76(8NdNG[uH>>7EOQ2jPB'Gl&^qJt$MkMHe>h]oq_J`VqMO('`q[-Gg0Nt%*P/L;P'eU)l
%O0`;]77h?T4'[AL_hSsZOe@C#0n2>AmNq7>8_=W]>G)Qmj^.SZlRrI/@bVn?;B&ku8TSf_'EWDM$7fAu1a"2bK1eq/j^.;(5Z7A:
%Y%T7N,2l:1M'U>N=0r[8duGq^MM)$,'3^:3@E@j0dS3BQfN$O1*%`0:l%@c.NXIp5>&9I&bN$p+.J6WoODKm<'\?EqOct+%O?"EN
%Q3/ASj)(QUY0F$0<f;g-OfO<??-`1;IcA!4kbKD&m3,8O]R+W(VunY"M43L6Q^'hP(TZgt^Fg46]X,+kWge!IV^U`$jYh<r[Ucnn
%'UM]=*^Jn/D^dQ:r)al*$62iV1,lTSqC;'s2q!"(Q&I+fU>ou^TA-^K?FD$-X48:`(!rPb#(.8]Xl2fWo5^]M@N4u$.2`S*'h>1[
%4o!au(sUc_T6OUV?T4+@[:>)0d!\2@[CXLJ1ZSC=k&f1f17a6"-9Gh7fnO""$tdeKMT&?X@OU\5k3o1L`%W>*)T415?>KEXP:0pq
%%3QD2qAe8D/^AsK50=ksFGumJA7(;\F&2AIH9A?Rn^uX)N^9s?!B=OM9Y*ot9TkD%L?6H,kB1\jnst+eij?8Dr7s]1p,:N,ih!mQ
%D9P6_he@"=`Mr7Ef%+)(D7srlkr/718KiuI!bG^Vb:ZqjnAWN=TJlCjN]cU6mg%.gZ#i1G*d$JOj/tnoT+ArB"8"]KkK*BrR_D['
%^<\fiNcaP+PeZE:0M.b=Mq:G2._8t8b2C(HE/aJ(n2%3]":DF7\i5uN/9,86g`OR\oM0"];7p2Vdl+0AdqX1R3EheCe$o/+0F4Of
%2R2>HXBkH0='YCo=js92N7CKO#$MhMOME3GE7H,<h&XMZEQnJlAaYmOTER23,"^M_*le]+-'MVm@fgo_*+>>\gXI=;`"\rGqP!d:
%ae3&icQCJ$Ft#+)Rb;"^\8ti"du5rM!`pClk)hf=%N^FDR4QeGYf,Z-gX'q%B%I2*aEP_'"Y8Z$DI'KF0;@-#R</<r@hq.[ONT-T
%8N*YW-hebO.i)1#g('I[4'j-j0DbWV/!`qP8)5`hrR,ajYl:u5Xr)$^857ghX3_TmF_t"rN-tChAr/RUqg'PGR>[1&NJ:?7G5XDu
%'/"4HQ'2N/LTQ?_`3RS7?b:gbJ2GCp9Bhh^K'PMeMjG]_&D"fn/ePSBoC=?+Ssn-f"[u'<n?aACE9DB6(77b=C%2s1R917YW':'#
%nJ889o=fH8qp$aN[rD6^GJ!)5M_/6r_&_(\PIMmIXBp]Y,S5$#6N#&le,"d,$/3":;%bW-(T4=X&S8\Y?`9\iBN\XJ'q/DE0Y`N/
%cuEeJYbS9-\B-MF!NpbJ;Who9("Qgj,#sEHZkUSm1ITJ_Mh^+LA+q9R3?0d)VKGE@-\[:5REZaIb[LjK#kafs#nr%Dlds)Y%f;]3
%@SqbJDb-%ib9A"`I^'V\gKY$]MQK4`&a'm5Xet^7CIT.^F4jVGdB/L>cHEH6XE]3WV+JCHG;ZL3",G++@U[./bS,Fa[`bp`.nDVT
%[SE9Yh(FnOs"HsGjMeu9nog:1691D*MbIlV9IiY_(Yl`R&K=;,3#8?dO/>fVR8?TElW:Db_m4`R8bgX&F]*\3^4$[;Xn(1=QYa6=
%FSqt9Yd?$Yh-uI0F$4Ur%@SK+^SWm,ce?/-'eELl'"EEB9?HNL.IFDFG/C\>8a]/bo1cF\\.%BnFcq9`,8Xc?F]lP.-fsW2<ulda
%,F>3K$Oc%M?(*'+F'8lH+Gd4A=u=T3go\e1I?=ghRE4t\XEol7aWtD7?a<*.g+Q*bl?^:K9=D4&GoTN,OtFom'PmJGT>Gkn]BK"4
%X]V)Q0qVK_mC0US;W&2>j`Sgel;`%3YsK2<Xj.!T?U`5,TJF?t?qHHbH!RW\G?S9::69E'qhiXE$*j3OR$)W\o_ZUfgm&^Eh%:`(
%P(<]^<,oH\:Fr@U7,ruX;<]-V=>&faY'Z@8B/G0&Q`Q6@\Ba"c&Cq'6g*,6)S\H9YCo\HC6l0f=1g)MPa=Pk'()]4A3Yeuc>f3AP
%beX^UKC2N"Y2AZ+3Y/g:D",$"ai;a:J)+RJ:jqj0mR"3OWD3O@`4(YaP7US'=7sEh<T:S<;!MGPoo#DIMR.8K+Y7+!BfA5H+COGO
%^0%dE0U?*kF?a,5Ao>Oe_B\%_SJ.-0b)!k'3hAf`53UNn8q&$KbD8>s9Rq=Zl!U7jqJo6p4,]'J%gC)[B_=**>2L3*\Pu07mr6T&
%h&`8nI5Q!Zg(XsSGIa>J,,9l<A/\H(Lumn#::\1._ZV?Y3r4N95%m_<Y%;SL&[7q/$s(&=99NCff>T9_C*4).*&XQmA.ZMmI9V^"
%Nu'>`\U,*2Xp]sY%+k)raB].X0<5?j(ZX,K/jEm:A)'Y2:3+84EJ,0?QMc1.`8&&#gtcUehe?6^hLjBuR!.P9oA4DsTn:K\g6guN
%/=&Rdf2e%s6f^"m(/N)\<-or?J]]V;9!3TjMp^PI:gk9GbSIDnHSq4EG;9I0;s(NCi]0f*,1c"W-*R;X@0]]Y).]-dFBBBTPD_UG
%cW9;m-m4_Jk+PCLEj$cVka9eLd]Q9>!4&I>>]7Ai@Igoa3]Sl?[Oj(LKqCNo86-!(;U>b.%Ou)T=bW;&.N,gA&dX9:@eO)elO/Af
%J*\Ha[?/&MV1k,]BI`A6pi.$=\a'hVUhN:')QDuV;&92!*r;!>UrO\^k^k/N;fIV@?fB,m>;m18,o"8V_A<fkbulumA9[;;jA;ut
%0nNcUBeh]sSE__]J$J&g`1>p:-a>.S6HpIG?.,/DE/4Z5CDS9@>99$E\e`ih@(*/7+[)c(NJ/iUGuY]@UX:\N=kc\KGl<PRi:+*@
%$hI9!8usWpHu)hd0VD,,[s0aGTbM&FC)W(uoRX'rHKZX2*&>)\UK%ZO[sc/.&I$,"cUP`S8oPJu`m4VFVP*>)W+kB:C_%7Dm'U,C
%M)un1>PT*LAC:-d7d$KALkn^+H_RNB`hUJ!_3c<VR-#0k7F`s85#LKtBg3KN:mH2.*q3b\NlC"(gK;GuEc='TGl\N!d0eQk`a87Y
%*_UhmB*,R-R&fbVC[#NJ#D?=,lQ_>TXWr<;,iX#56r,k\D)'XkG#_cQ;X;9pdg4^L#8uNqUn4!;79'H_V]Fc\L0?h+@5*]tLp*Ut
%a)UBQ6ND8l!tqJ>V\a7k#&RYuri(d]mRba]WeCAqRt7q28q:7*TfnZP5"d:LeB<;:#7h58jSF"92NF`53__!i+"%rrbkU0N7eF60
%dm%5uZ!="9mH4o"h7`fg&q2V^3KJH?OLgJo^1H:&03HM07'.&!Hqj^Mob`'7@Q.Pn?>DK5nlbCcWb`+XP_79i!Im%5MDg!cFs?%C
%E:kYMOJcX?Qt`T@6FtNK)Db)SI:&2n;R:hn@8s7V=f8cl@_h6^]*^#biW<`GG4m<i7'Sk/iDR#-@8q\Wg"P8f-$t>bMMk>[!P@HA
%[PNI7C@,Z7'k#n$;IO%20%`=[3HP4SAHk/<5<rXKc0BUE4QmdD;l(fM7-Ih4&Q-D9S4*o(>(?=/[](V)D0[3So4\1"drIqCm*(GG
%ROpSpKmFpdh_$tgXJ'C1*=:b,L!u'7UitW@k.Zb[^9-%f9`6e$)]<CJ=l_:Cf%Jn?WZ1([<":ON#k;;&"ICF&,HNX,"\ALb+m*Cm
%atOm?KPVAqm.osPJeKidEPQ69+j,H\0-/1p'C5%cn'=,+YlF#!'MPW3ZAY+>-Zf@4o2TKB$'D*jAIMNk;05M0FOEem3>StK$DV*'
%Z#VD&XYfC!N/qG1A^FBoO&'5Ko]c5l\_Kg3`sL<'rMZ1=8P(^1DTr'97!@8<<S(S?`q![rdMB&s1h?@J[<R<nD95gQ8=Q:bdcB^(
%NJ,a;SY2+3Jsp8%7SQn`\$OW$_3=/%Qh.=m:51c<+&<Yb,geZD/C%i2'*0spS<4/(A[+3>);@c0\!RJf"`_CK>jcYl\elJdc!nLY
%*#-(QiF:,0'#C*B;0;(?R^!GOHn?j,)UiiK7_"cRj_i]V0mCMk322@d\.*n%PAm1ip3K)W]GV`$]HM8`8'%bnTqa>Ec\.<h4Rre!
%^$m^-0M"gX\fDfNL7Q^(JTo(e*?@_2`3>mZ@ZFh/>@<QC1'\aZJr^/J[g`VV6Tgh,Ona_@#7VuHL'b1#@(P;Ae12+^1HlG2m8eT;
%IrP$A5-i,"p_,isJ=X4.,M^5?Y5$(qmbZobLKUsTi),t'6W&XW*eg2t1*7lp_ObY#7o1Ufm[0M>.5G2U\C4kU)@7JSMZNdpi"=Rq
%I@:[k6sci7dsSqUn-rC+ApEC52N_A)OdA.l'0L;u]QJfr%\!i5eHCp]6t,ZoO4rX.SBqj)e[D'rObYb4qg1Y"<"gY.ECNI2a_4hJ
%)'&a\:duBbP)?qe77Umhpl]M2KDN]_UWD7Yg<ib+H:L!u&$@G%$pPk,'EdcVNpqP:[%JYLECds77Et&>/oKl$;J*&6kQhVmiN;4j
%E^loH*H?OL;)\0&dPcP?8#+NdL5s2BD=`dJU9M/1kQphol\^]H2#AWekQmFu39iakOdZnp"\0.6S58(!ib(9Qi2F%>?u7G:kD$I9
%^eoUs4g3clnE7*/UXA`N"%V!US3S#QU8VP(.lbChK/I;]-]u:pQ5pr6.Z*4$*75Kf!bPRX;qdeX&XfTmgu_[Y[9,A$-HXs?KT=.&
%+PD8/&:-F>k\0VeDZCetDsK7HkXrL],KBs`hU.ILdNKu["S6fF-Zin0rNe"86A#s)2VT4.K\DVucF;$ng;4..jiQNCMRhX>cP@nY
%F>4JBPLE1LT.lb)'FA4(DO,S&m"(T\)a#=WKN,qDnA*jrao[XbW2M(g`0onT!FpjS*mW]V_BWlALA5MtcLAnQjKDWeTAYhHio(Un
%_6PXM@=N=(E8Vs?B!cj"8!2jkZ0eH),3iWPimQ@j4VL#B!D+Ydo[;d,+JF$m#J=g))'BMd7?Z=.O<R7:IK;uq#j5HSO;,>f!@0XN
%8j4DlGDJa&4q\tA_@Vmd&/#3ai,h=WeB3u\g(QfY,S&KB+k`SihH,A@$iqS76A"g6b*_"G5=Cq#\*9]A@_+#X*?eS`Rj0!65Y0Dk
%("bAe,Y(b8>7jd!-T.AOKG5]joRr<p^6Cs[a)MkKIc:]r`dg6/699+//DVF,];gY`kQ[k:F%o$2gq*U#5+X"daB2puq6G*1mX`Aa
%3ECm=i:X53Pu=9m+6r#[^$09ebXisC14%BI_,Hm/rQ#oBZfnKF)Tn(@gT8Yce$<T?U+H0b2[91V2<C3pGe9?Zo1X([Ah8kCfj,+J
%U*pu1)R?BkED1p*K%0_^IE\5t$L%gJ@l1iCQ(%e3%#%CIi71NXj-MqD/.pg[3Os_fY$pGG@)=(YXA?C'3?X4rKC4DY4S?;GJsO&K
%q-24/LO7#.BSd'hmCrfV8[R0.e%D3;-a4k)CN]_O*jT]HaQH=5(g%ES[5ida0<D<r!D?<RXfPo%W^PAN=@2t*>qmKF%t^o6=CU3/
%^FP_ke<oeW=Rs-plLJp7'7*rh[$/iC-=Q<Q8^?F@eajTp8eQ([:KU2'4dQm6_6F=Nac'9)$VEBe-'&5T<TaL84LpYa`CfMR`S%h4
%V:MT&")`RaWtai'Z'$=9d-jfQ8VO7Q^`l8OUgKhDkk^3)V2lhdOMc2D5.;;324+KIq::MR$fECE"$A<ke8[sPKTY@omUeg0]!>5=
%g5hHH74m?2a!;/ef0'SZQ/Q`+_%!ZK8Ngt*N,X5upPq&epE2p4oObetQeJ4KLS%Tk+XQ?9U7uX,k@&B[btV_9)JZ??;S^aFgYi9o
%SFNepC)sS:3+951VH--.6VOR9NA'+mgU\(V/oVo\kOu!kO8@4^%GQ#2Tud)b?hL_hl@!bT"0fBHf='gICnpXC`]/(OLWUR(E9+"B
%<FnC\DoKG,%(Qc%hD4#iTj!HPac.Vj%[k]Wm3NgZ)Z?%^Ra_&!a3Js./)-L[XS*tF_VMA[p]Yruf?pGEbM1.ZC)AioY!"h#G(h!\
%hM*NoZU4QV0nc?%?Oc=BcgjTTP@!V8Z+6X5pOUf!;hu_UW/I@s'3V``4B)*)g>'c$(.IPY>JVQkl3b4jc->>c53cj'41K_1]"'8D
%B_;Rjd[XK;>^Oh5[`V@j@jbn[,%SS1GIL+/108,+K.a,$,^Inq]q7;d8(68@IYp;PnEjlFUE5idj72CO4jVZrG>`V.s8E#d%]Xlb
%Toig#=:Vmk;'11AK3VVQ_;cGEUERcR!j\KLVh)-R0;PCKE\A7On9qTq\-kuNV87@"2^40=$YMDiStmDsZ2'AccCt'_(e7oME99VJ
%EJE7]lXI[*G1Gtmc"Ec^ZHZR.*-8oTELk%1S^a*kgL/Ub7F=]3m]<sfrF_f7/@=feA/g44L4LXM7B:GrV$SUL/0ZmtNFrcqoo/26
%3\EANqVb1J,7dReKWr:,rTL596:uIPlfT;>S3BlcW4%@.Au;>L8@^WdZ">0F.:)"FYr8$#>U1AnA$lpukY:DQWTGPK<:^BX#r0pR
%j5=q;l+8dYZ0Q7P,:,S7qX'$E`c@W=#oJrh3d%]HJ<ekXYFg#<.@/S06gR6"hO_[\)\@_;^LBPmZ<3#0DfknlXOSX,IEUUuPI4"t
%:#F[0=&@O[Y-6DZl8ZKM481Z8K&Z?8G:+qH)MukWW6Th-8&qi?FSf4]FZu8seZ$eq;*lo.G*`tQTd:-t`&a2:4K6DJC>E/BgG6.2
%;A\6\e%fga?XL@bjQ$4/8Sm=$RpR&[E2bBq+0sMPp<h7_Val75)c%LSY!N'3C"-L<q>'4Ro^qe;+91tF)L/'=?iK03^]!-A+5_JF
%q*2XjlAMQ!hu*4MDr:1I35*DgIe101YF]Y'$U=[h?b_![:LAP?%q#;7Bfq1hgm7feO8mgu?[Va+rj*6:;Wt95q!dFHDr5s6^W0,#
%7g#afn,D^(N3D,fo8d7.IJV4;f<>5CIt%3kdDgD(jkme#p!'seDm"RMf'CcQgM_Q<e[O9DJ,@c_hgYCdl$rX,eJI,UqWchM5",GK
%k0)Z^@JoQ.S`]0D?[_P2m@W8*kP_L&ZHm%((1PDCDIVBJhMZG0CV:Hna]imIHBZ5tP9\\"Z]Ne2!pBcL:9U0urTjFP8aMB10rJ*!
%/\eZ?]us`_BCt'-qbNQ-p/dj_rjT1K1jSooll'=rg+!'FVKn4s6h)%p[YOG2V\(sIM']kU=Te-(6n>u.Fok,-9V,h!20W*C"fG^n
%#'WdIhRL_hj0(=,lRo&p%9d1dA#:;==hid(YI3WhAr`M/h&1.DkkX,YQ6DgXq^EH9Zq[$I?hV_@ll#Ab"g^_=cRNT%-8$QJ,%J`O
%XBDTCIte$4F-oD%C_JeMn%Z51%B8BIMbH=k+2<_N"2?_NQ</qO.k`"5U=\,kHSb-*S@Wckj14?&,C9VZ$sp7.[:q*63T%6\Ib?RT
%VKr*[p4*,$\+0L*$$q!l?Z3[SorjkCn,N(2n)+&hDdIkFVYaGEp\R1gqTGA_X09735B$PRrcJ&92fJ]fmFU7.\c(b'?iMJd*kFT*
%pOE3=s763glL4_%:MW4m~>
%AI9_PrivateDataEnd
